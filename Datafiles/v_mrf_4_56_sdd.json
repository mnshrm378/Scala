/*
 * Current version: 4.56.0
 
 * Version history:
  *4.56 Updates:
    -> new PavementAndCrosswalk class
    -> new value "endConstructionSite" for "DangerSign" class
    -> new value "multiSign" and "multiSign_movedShape" for "TrafficSignParameterSet1" class
 *4.55 Updates:
    -> new FogNightDetectionEvent class
 *4.54 Updates:
    -> new value for markingDataSource: prelabel
 *4.53 Updates:
     ->Modified refline points to be not editable
     ->New value for eventType in FogDetectionEvent: mist
     ->New value for specialEvent in vmd: constructionWarningTrailer
 *4.52 Updates:
      ->Added new event class edlssl for LightSourcePoint
      ->Added new value for precipitation and detailedPrecipitation properties in vmd class : "unset"
 *4.51 Updates:
     ->Added new value for laneType property in LaneMultitrackSeparation class : "separation"
     ->Added new field for smd class: "lidarType"
   
 *4.50 Updates:
     -> clusterID property for classes TrafficSignQuadrangle,TrafficSignOval, TrafficSignTriangle, AddOnTrafficSign
     -> new property for RoadBoundary: sideOfMarking
     -> new value for objectType in LaneLine class : separation
     -> LaneSupportMarkings signature class fix.
   -> LaneRoadMarking new objectType crossingLane
   -> LaneRoadMarking new value for laneType : beyondBarrier
     -> new event type for EDLD: temporaryMarkings
 *4.49 Updates:
       ->New event class: IntervalMarking
 *4.48 Updates:
      ->New class: FogDetection
      ->New event class: FogDetectionEvent
      ->Added new field for NonDescriptTwoWheelers class: "onlyUnmounted"
      ->Added new values for eventType field in A_SL_Common: "145", "150", "155", "160"
 * 4.47 Updates:
       ->tsrmd: made as set the trafficSignType field
       ->new property for VD and TW: indicatorOcclusion
       ->new value for roadCover in rbvf and RoadBoundary
       ->new values for objectType in TwoWheeler
       ->new  value property for AnimalBody: bodyOcclusion and animalType
       ->new value for lightSourceType: redReflector
       ->new eventType in edtnl: bridgesAndUnderPasses
       ->new value for occlusion in LaneLine
 * 4.46 Updates:
       ->Added cluster ID for TSR Classes
       ->Added lidar 3D fields to 'LaneLine' 
       ->LSR classes added: LightSourceGroupPart, LightSourcePoint, LightSourceBox and LightSourceFootprintLine
       ->Added tool version informations for 3 classes
       ->Added clusterId for OD classes
       ->Added NondescriptPolygon class
 * 4.45 Updates:
       ->Box3D new properties: box3DClassificationQuality and isStatic
 * 4.44 Updates:
       ->New value for objectType property: twoWheeler (class TwoWheeler)
       ->Fxed tlmf and TrafficLight problem with unusual character
 * 4.43 Updates:
  ->Replaced u3Dm with Unclassified3DMarking
       ->u3Dm was not used
  ->New property for vehicle wheels classes: WheelsUnclear
  ->Pedestrian classes: 
       ->New properties: faceVisible, leftBorderVisibility, rightBorderVisibility
       ->New values for occlusion property: Legs occluded and Other
  ->Two Wheeler classes:
       ->New properties: movement, leftBorderVisibility, rightBorderVisibility, laneChange
       ->New value for objectType property: twoWheeler (just tlmf)
 * 4.42 Updates:
  -> for class Box3D all properties except "box3DHeight" are read-only
  -> added new field for tsromf and TrafficSignOval: "crossWalkType"
  -> new values for category in tlmf and TrafficLight: "NondescriptCrosswalk", "NondescriptCommute","NondescriptTrain","NondescriptOther"
  -> new field for tlmf and TrafficLight: "clusterID"
  -> new field for tsrmd: "wrongWayAlert"
  -> new field for vdmf and Vehicle classes: "wheelsUnclear"
 * 4.41 Updates:
    -> added value 'RectificationV2' for 'CreatedUsing' field in RectificationMetadata class. 
    -> new class for animal marking: "AnimalBody", "AnimalHead"
    -> new class for mono general object marking: GeneralObjects    
 * 4.40 Updates:
    -> new field for pedestrian and two wheeler point marking: relaxedAccuracy
    -> new values for category in traffic light marking: railwayCrossing,hawkTrafficLight,dogHouseTrafficLight
    -> new value for pose in vehicle markings: notSet
    -> new values for laneChangeTrafficSigns field in traffic signs quadrangle: chicaneAnnouncementClosureLeft, chicaneAnnouncementClosureRight
    -> new values for laneMarkingType in ldmd: nonReflectiveBottsDots, reflectiveBottsDots, nonReflectiveBottsDotsWithLane, reflectiveBottsDotsWithLane
    -> new values for egoVehicleBeamType: 14PxlLed, 84PxlLed, 84PxlLedHrhb, LedHd, StaticLed
    -> new value for edgeClass in road boundary markings : cart
    -> new fields for edtnl: illuminationInsideTunnel, numberOfLanes, tunnelEntranceShape, tunnelExitShape, isTunnelLaterallyOpen, tunnelLaterallyOpen, bridgesAndUnderpasses, partiallyOpenCeilingStructure, approachingTrafficInSameTunnelTube
 * 4.39 Updates:
    -> new fields in vmd: roadCategorySignType, streetLighning, bottsDotts, egoVehicleWindshieldType,cameraPositionVertical, cameraPositionHorizontal
    -> new field in tsrmd: traffigSignType
    -> new values for laneMarkingColor in ldmd: green, orange ,none 
    -> new values for specialEvent in vmd: animal, cobblestoneRoad, concreteRoad, criticalRoute 
    -> new value for roadType: gravelRoad
    -> new fields in vimd: vin, vehiclePlatform, vehicleHeadlightID, vehicleHeadlightType,vehicleWindshieldType, windshieldExtras
    -> new class RectificationMetadata
 * 4.38 Updates:
    -> unclassified3DObject: new class for unknown 3D marking objects.
    -> debris: new class for debris marking objects.
    -> new values for objectType in hpmf: mainPath, alternativePath, laneChangePath,trafficViolation
    -> new values for maneuver in hpmd: langeChangeEntry, laneChangeExit
 * 4.37 Updates:
    -> new property for edtnl: noTunnel 
    -> new properties in fmd: egoSpeed,distanceToTarget,team,sequence
    -> new properties in vmd: trafficDensity, specialEvent,roadCategorySignType
    -> new values for laneMarkingColor: orange, green
    -> new property for tlmf: laneAssignment, Symbol
  * 4.35 Updates:
    -> new property for tsroqmf (inherited by tsromf and tsrqmf): tollSignType
    -> tollStationSign set to NotEditable (replaced by tollSignType)
 * 4.34 Updates: 
    -> new class: roadwetness detection marking function (edrwdt)
    -> vdmf: new values for turnIndicator: "both" and "off"
             new properties: bothBordersFullyVisible, rightBorderOccluded, lefBorderOccluded, bothBordersOccluded
 *  4.33 Updates: 
    -> new abstract class MarkingCreationInformation with markingDataSource property (moved from lvm)
    -> lvm and rbvf:added cloned value to the markingDataSource property
 *  4.32 Updates:
    -> vwcpm: fixed annotations for frontWheelOccluded,rearWheelOccluded
 *  4.31 Updates:
    -> rbvf: new field: clusterID
    -> vdmf: new occlusion value: medium
    -> twpmf: new class for TwoWheelerPoints class
    -> pdpmf: new class for PedestrianPoints class
    -> twam,twpam,ham added: new abstract classes for TwoWheelerAbstractMarking,TwoWheelerPedestrianAbstractMarking,HumanAbstractMarking
    -> vwcpm: new properties: frontWheelOccluded,rearWheelOccluded
 * 4.30 Updates:
    -> hpmf and hpmd added: HolosticPathMarkingFunction and HolisticPathMarkingMetadata.
    -> removed pdbmf, its fields migrated to pdmf
    -> rename LSD to Box3D
    -> twmf inherits now Box3D
    -> converted some tabs to spaces in this file
    -> new fields in Box3D: all except those marked with DEPRECATED in the annotations
-> added 4 fields in the lmf class: pavementSignType, crosswalkType,pavementSignSpeedLimit, visibility
 * 4.29 Updates: 
    -> errmd: new class
    -> rbmf: new value for edgeClass:laneOuterEdge, new values for objectType:"drivableSurface","parking"    
 * 4.28 Updates: 
    -> rbvf: new field occlusion
    -> vdmf: new objectType values: van,pickup,truckTrailer,heavyEquipmentVehicle,tukTuk
    -> vdmf: new properties: odd,isParked,attached
    -> vwcpm: new class for vehicle wheel contact point on ground.
 * 4.27 Updates: 
    -> lmf: added new objectType- noObjectInFrame
 * 4.26 Updates: 
    -> Fixed object types for vdmf: constructionVehicle
    -> Fixed field for vdmf: occludedByRefID
    -> Fixed values for edgeClass for rbvf
 * 4.25 Updates: 
    -> vdmf: new objectTypes: otherTruck, trailer, otherTrailer, constructionVehicle, tram, motorhome,  occludingObject
             new occlusion: light,heavy
             new field: occludedByRefID
             new pose values: side-right, side-left
 * 4.24 Updates: 
    -> edsfrw,edsfppt: new supporting functions event classes
    -> rbvf: new road boundary validation class
    -> pdmf: new properties: accesorry, crossing
    -> vdmf: new objectType: constructionWarningTrailer 
    -> fmd: new fields: sentStatusHella,sentDateHella,sentStatusVisage,sentDateVisage,LDdatabaseUseCase,ODdatabaseUseCase,HBAdatabaseUseCase,TSAdatabaseUseCase
 * 4.23 Updates:
    -> lvm: new lane validation marking main class 
    -> lwvm: new lane validation width class 
    -> ldbm: new lane validation distance class 
    -> lvmep:new event point class 
    -> tsrmf: new fields- addDistRestrValMeter3,addRefID3,addTimeRestrPeriod3
 * 4.22 Updates:
    -> rbmf: Added "other" value for RoadCover
    -> rbmf: Added "notSet" value to "roadCover", "edgeHeight", "edgeContinuous", "edgeOnGround", "edgeVisibility"
 * 4.21 Updates: 
    -> rbmf: changed fileinfo category name 
 * 4.20 Updates: 
    -> lsmf: changed annotation for groupType to optional, added groupId field 
 * 4.19 Updates:
          ->edbdm:new class added for blockage with 96 imageZones
          ->lsrb:new class: box for light source 
              -> similar to tlmf
          ->lsmf updated: added parent ref id
       ->lsrmd: added fields:"redReflectorVisible","narrowRailReflectorsVisible","constructionSiteBaconVisible",
    "illuminatedCityInBackgroundVisible","trafficSignOfCertainShapeVisible","crossingTrafficVisible","oncomingTrucksWithPositionLightVisible",
    "ledStreetlampsVisibleAtEgoRoad","generalStreetlampsAtEgoRoad","chevronsVisible","trafficLightsVisible","activelyLitTrafficSignsVisible",
    "billboardsVisible","gasStationVisible","tollStationVisible","oncomingVehiclesInScene","precedingVehiclesInScene","oncomingTrucksVisible",
    "precedingTrucksVisible","motorcycleVisible","oncomingBicycleWithActivatedLightsVisible","oncomingCarFlashesHighBeam","streetlampLineVisible","reflectorLineVisible"    
           ->lsmf updated with new attributes for Gen5
           ->RDMC:new abstract
              -> contains rdmf and rbmf common fields
       ->A_LINE: new abstract class to represnt markings made of two poins (4 coordinates)
       ->LSAMF: new abstract class to hold the group id property
           ->lsrb:new class which represents a box for light source marking function
       ->lsfpmf:new class which represents the footprint for the light source marking function
       ->lsfpmf:new class which represents the footprint for the light source marking function
           ->rbmf:new class for the road boundary marking function
              ->inherits RDMC        
       ->tlmf: new value for "position" field: intersection; new value for category: "fourLightsVertical"
 * 4.18 Updates:
            ->TLMF:
              ->New values for category: twoLightsVertical, twoLightsHorizontal, pedestrianTrafficlight, cyclistTrafficLight
              ->New attributes: position, state, color
            ->signalLamp:
              ->New values for type: uTurnLeft, uTurnRight
              ->New attributes: radiusPointX, radiusPointY, lampState
              ->State field declared absolete: changed description and added the "NotEditable" annotation
 * 4.17 New classes:
            ->abstract MPMA to represend the fields of markings that are defined by multiple points.
            ->abstract MPROI that enherits from MA and MPMA.
            ->abstract ARM to represent the common fields for road markings. Inherits from MPROI.
            ->lmf to represent the fields needed for the new lane markings
            ->crwmf to represent the fields needed for the new crosswalk markings
            ->pvmtmf to represent the fields needed for the new pavement markings     
      Updates:
      -> lsmf class: - added new "distance" field 
               - added new "FPType" field
               - added new enum values for "lightSourceType" field                            
 * 4.16 Updates:
    - EuroNcapMetadata class: added EgoLongitudinalVelocityMaximum and EgoLongitudinalVelocityMedian
    - Integrated v_mrf_tlr_1_1_sdd: Added the classes: A_POINT, signalLamp and tlmf
    - Integrated v_mrf_rm_1_0_sdd: Added the class: rdmf
 * 4.15 Updates:
        - edbd class - field eventType - add enum value "clear"
        - EuroNcapMetadata class - field ScenarioCase - add enum value "NotSet"
        - LSD class - changed descriptions of fields to include measurement units
        - occlusion changes:
            - added abstract classes HumanOcclusion, VehicleOcclusion
            - changes to pdmf: (1) it now extends HumanOcclusion and (2) the old fields
                headOccluded and feetOccluded were removed (they are now inherited)
            - change to vdmf, vdnmf: extends VehicleOcclusion
            - change to twmf, twnmf: extends HumanOcclusion
 * 4.14.0 Updates:
        -  Updated class edop:
            - added new enums value for regulation: signageTruck
            - added new enums value for passingRestriction: truck3.5t, truck7.5t, weight
 * 4.13.0 Updates:
    - Fixed FileInfoCategory property for classes eventDataSpeedLimit7, eventDataSpeedLimit8, eventDataSpeedLimit9
    - Fixed type for prohibitionSignType: noOvertakingTrucks
 * 4.12.0 Updates:
    - Added a new field for smd (systemMetaData) class : "DGPSmodel"
    - Added new object type enum values for pdmf, vdmf and twmf: dummyPedestrian, dummyCar and dummyCyclist
    - Created two new classes for Euro NCAP data: EuroNcapMetadata and DBCMetadata
    - Created A_SL_Common as abstract class for A_SL_AllExceptTrucks and A_SL_Trucks which have specialized behavior regarding the "restriction" field
    - edsl (1-6) classes used to extend the A_SL class and now they extend the A_SL_AllExceptTrucks class
    - Created new edsl (7-9) classes that extend the A_SL_Trucks class
    - tsroqmf class, for the field prohibitionSignType and endSignType, we added "noOvertakingTruck" for the enum values
    - moved "crossWalkType" field from tsrqmf to upper class tsroqmf
 * 4.11.0 Updates:
    - ldmf class, made TrackId field not editable.
    - edld class, for the field eventType, we added Left and Right variants for each of  the existing enum values
 * 4.10.0 Updates:
    - a new abstract class "LSD" for data extracted from the lidar sensor.
      Both pdmf and vdmf will enherit this new class
 * 4.9.0 Updates:
        -a new field for "ms", "markingInstructionSet" (Optional String)
         This means both signature classes (sms,mdms) will inherit this new field
    -a new metadata class "fsmd" to help with file selection
    -a new field for "edld" class: labelingStarted
    -4 new fields for the "vmd" class: LDdataset,LSRdataset,ODdataset,TLRdataset
 * 4.8.0 New field:
        - ldMetaData table has a new field: "category".
        - This field is optional and is an enum.
        - The values it has are: cat1, cat2, cat3.
        New value for objectType inside vdmf class: "baloonCar"
        New type for objectType inside twmf class: "dummy"
        New fields inside "visionMetaData":
        - "sunDirection" - has multiple values:  "Front", "Back", "Right", "Left", "None"
        - "lowSun" - has two values: "True" and "False"
        New types inside "vehicleDetectionMetaData":
          - "specialObjectTypes" - has two values: "balloonCar" and "None"
          - "strangePosition" - has two values: "True" and "False"
        New types inside "pedestrianDetectionMetaData":
          - "specialObjectTypes" - has three values: "None", "dummyChild" and "dummyAdult"
          - "strangePosition" - has two values: "True" and "False"
 * 4.7.0 New class:
        - NonDescript. This class extends: "FrameMarking","PA" classes.
        - cmfNonDescript. This class extends: "NonDescript" class.
        - occlusionRearWheel and occlusionFrontWheel fields have a new value: "outOfImage"
 * 4.6.0 New class:
 *            - cyclist marking function class added: "cmf"
 * 4.5.0 New class:
 *            - event data marking class added: edld
 *            - use case information class added: uci
 *         Updated classes:
 *            - fmd: added new attributes: "TSAdataSet", "pexVersion", "naviReconstructed"
 *            - vlsgmf: modified type of vehicleDistance from Int to Double
 *            - edbd: modify enum order for intensity and level
 *            - lsmf: added new enums value for lightSourceType: "ledHeadLight", "headlightHalogen"
 *            - A_SL: added new enums value for restriction: "fog", "virtualRamp", "virtualLeftTurning", "virtualRightTurning"
 *            - edop: added new enums value for passingRestriction:  "virtualRamp", "virtualLeftTurning", "virtualRightTurning"
 *            - tsrmf: added new attribute: stopSignType
 *                     added new enums value for addInformationType1, addInformationType2: "4WayStop", "allWayStop"
 *            - vdbmf: added new attribute: "calculatedDistance"
 * 4.4.0 Updated classes:
 *            - Blockage: edbd
 *            - File metadata: fmd
 *            - LSR: lsmf
 *            - System metadata: smd
 *            - Vehicle markings: twmf, twnmf, vdmf, vdnmf
 *         New classes:
 *            - TSA: edsl4, edsl5, edsl6
 *            - NAVI: mdnavi
 *            - LD pavement: ompvmt
 *             For details: Updates follow requests and decisions in SVN document
 *            (https://aes-svn03.eu.autoliv.int/svn/DCM/trunk/Documentation/SDD update/vmrf 4_4 requests.xlsx) rev:30753
 * 4.3.0 Updated class:
 *            - metadata class:
 *                    - Lane: ldmd (renamed name duplication of the field 'restrictedMarkings' to 'restrictedMarkingsBool'
 *            For details: Updates follow requests and decisions in SVN document
 *            (https://aes-svn03.eu.autoliv.int/svn/DCM/trunk/Documentation/SDD update/vmrf 4_3 requests.xlsx) rev:24934
 * 4.2.0 Updated classes:
 *            - event data marking classes:
 *                    - Blockage: edbd
 *                    - TSA: edop, edrc, edrsp
 *            - metadata classes:
 *                    - Lane: ldmd
 *                    - LSR: lsrmd
 *                    - vmd
 *                    - fmd
 *            - object marking classes:
 *                    - TSR: abstract class tsrmf (affects tsromf, tsrqmf and tsrtmf)
 *                    - TSR: tsrqmf
 *            For details: Updates follow requests and decisions in SVN document
 *            (https://aes-svn03.eu.autoliv.int/svn/DCM/trunk/Documentation/SDD update/vmrf 4_2 requests.xlsx) rev:24596
 * 4.1.0 New classes:
 *             - object marking classes added: cwmf (crosswalk) and tsraddmf (addon signs)
 *              - event data marking classes:
 *                     - Blockage: edbd
 *                    - Traffic sign: edmnsp, edop, edrc, edrsp, edrw, edsl1, edsl2, edsl3 and edww
 *                    - Tunnel: edtnl
 *                    - Street lamps: edlsr
 *             - metadata class mdtsr to replace old and wrong class tsrmd.
 *         Updated classes:
 *             - metadata: ldmd, lsrmd, smd, vimd and vmd
 *             - object marking: ldmf, lsmf, pdmf, vdmf, tsromf, tsrqmf and tsrtmf
 *         For details: Updates follow requests and decisions in SVN document
 *         (https://aes-svn03.eu.autoliv.int/svn/DCM/trunk/Documentation/SDD update/vmrf 4_1 requests.xlsx) rev:21628
 * 4.0.0 Updates can be found at http://aee-app02:8100/display/VGDCM/Decided+updates+for+v_mrf+4.0
 * 3.3.0 Moved annotation and changed from "Annotation" to correctly: "annotation" in mdms
 * 3.2.0 Added field vmd.objects and decmd.blockage's description was changed
 * 3.1.0 Updates can be found at http://aee-app02:8100/display/VGDCM/Decided+updates+for+v_mrf+3.1
 * 3.0.0 This is the first and hopefully only release of version 3.0
 */
{
  "classes": {
    "IntervalMarking": {
      "annotations": [
        [ "abstract" ],
        [ "description", "Defines a marking done for an entire interval of consecutive frames on a certain stream" ]
      ],
      "fields": {
        "endFrame": {
          "type": "UInt",
          "annotations": [
            [ "description", "Last frame of the interval" ]
          ]
        },
        "startFrame": {
          "type": "UInt",
          "annotations": [
            [ "description", "First frame of the interval" ]
          ]
        },
        "streamName": {
          "type": "String",
          "annotations": [
            [ "NotEditable" ],
            [ "description", "The stream where the interval is defined" ]
          ]
        }
      }
    },
    "FrameMarking": {
      "annotations": [
        "abstract"
      ],
      "fields": {
        "frameNumber": {
          "type": "Int",
          "annotations": [
            [ "required" ],
            [ "NotEditable" ],
            [ "description", "Which frame the marked patch is on" ]
          ]
        },
        "streamName": {
          "type": "String",
          "annotations": [
            [ "required" ],
            [ "NotEditable" ],
            [ "description", "Which stream name was marked." ]
          ]
        },
        "refId": {
          "type": "Int",
          "annotations": [
            [ "required" ],
            [ "NotEditable" ],
            [ "description", "Id number for current object." ]
          ]
        }
      }
    },
    "PA": {
      "annotations": [
        "abstract"
      ],
      "fields": {
        "top": {
          "type": "Int",
          "annotations": [
            [
              "required"
            ],
            [
              "description",
              "Top coordinate for marked patch."
            ]
          ]
        },
        "bottom": {
          "type": "Int",
          "annotations": [
            [
              "required"
            ],
            [
              "description",
              "Bottom coordinate for marked patch."
            ]
          ]
        },
        "left": {
          "type": "Int",
          "annotations": [
            [
              "required"
            ],
            [
              "description",
              "Left coordinate for marked patch."
            ]
          ]
        },
        "right": {
          "type": "Int",
          "annotations": [
            [
              "required"
            ],
            [
              "description",
              "Right coordinate for marked patch."
            ]
          ]
        }
      }
    },
    "ROI": {
      "annotations": [
        "abstract"
      ],
      "extends": [
        "FrameMarking",
        "PA"
      ]
    },
    "Box3D": {
      "annotations": [
        [ "abstract" ],
        [ "FileInfoCategory", "Box3D" ],
        [
          "description",
          "A three dimensional representation of a moving object. The fields describe a box that has a ground footprint (represented as a rectangle), orientation, height and velocity."
        ],
        [ "coordinate_system", "AFAC Ground" ]
      ],
      "fields": {
        "box3DGroundLength": {
          "type": [ "Optional", "Double" ],
          "annotations": [
            [ "NotEditable" ],
            [
              "description",
              "Size of the ground box in the direction of movement (e.g. length of the car), in meters. It is constant during lifetime of an object."
            ]
          ]
        },
        "box3DGroundWidth": {
          "type": [ "Optional", "Double" ],
          "annotations": [
            [ "NotEditable" ],
            [
              "description",
              "Size of the ground box in the direction perpendicular to the movement (e.g. width of the car), in meters. It is constant during lifetime of an object."
            ]
          ]
        },
        "box3DGroundCenterX": {
          "type": [ "Optional", "Double" ],
          "annotations": [
            [ "NotEditable" ],
            [ "description", "Location of center of the ground box in the X direction (coordinate system of the camera), in meters" ]
          ]
        },
        "box3DGroundCenterXSigma": {
          "type": [ "Optional", "Double" ],
          "annotations": [
            [ "NotEditable" ],
            [ "description", "Standard deviation" ]
          ]
        },
        "box3DGroundCenterY": {
          "type": [ "Optional", "Double" ],
          "annotations": [
            [ "NotEditable" ],
            [ "description", "Location of center of the ground box in the Y direction (coordinate system of the camera), in meters" ]
          ]
        },
        "box3DGroundCenterYSigma": {
          "type": [ "Optional", "Double" ],
          "annotations": [
            [ "NotEditable" ],
            [ "description", "Standard deviation" ]
          ]
        },
        "box3DClosestPointX": {
          "type": [ "Optional", "Double" ],
          "annotations": [
            [ "NotEditable" ],
            [
              "description",
              "X coordinate of the closest point coming from the raw object contour points. Not located necessarily on the bounding box. Must not be edited by user."
            ]
          ]
        },
        "box3DClosestPointY": {
          "type": [ "Optional", "Double" ],
          "annotations": [
            [ "NotEditable" ],
            [
              "description",
              "Y coordinate of the closest point coming from the raw object contour points. Not located necessarily on the bounding box. Must not be edited by user."
            ]
          ]
        },
        "box3DOrientationAngle": {
          "type": [ "Optional", "Double" ],
          "annotations": [
            [ "NotEditable" ],
            [ "description", "Angle between the direction of movement of the box and the X axis of the camera coordinate system, in radians" ]
          ]
        },
        "box3DOrientationAngleSigma": {
          "type": [ "Optional", "Double" ],
          "annotations": [
            [ "NotEditable" ],
            [ "description", "Standard deviation" ]
          ]
        },
        "box3DHeight": {
          "type": [ "Optional", "Double" ],
          "annotations": [
            [ "description", "Height of object. Manually set by user." ]
          ]
        },
        "box3DRelVelocityX": {
          "type": [ "Optional", "Double" ],
          "annotations": [
            [ "NotEditable" ],
            [ "description", "Relative velocity in the X direction (camera coordinate system), in meters per second" ]
          ]
        },
        "box3DRelVelocityXSigma": {
          "type": [ "Optional", "Double" ],
          "annotations": [
            [ "NotEditable" ],
            [ "description", "Standard deviation" ]
          ]
        },
        "box3DRelVelocityY": {
          "type": [ "Optional", "Double" ],
          "annotations": [
            [ "NotEditable" ],
            [ "description", "Relative velocity in the Y direction (camera coordinate system), in meters per second" ]
          ]
        },
        "box3DRelVelocityYSigma": {
          "type": [ "Optional", "Double" ],
          "annotations": [
            [ "NotEditable" ],
            [ "description", "Standard deviation" ]
          ]
        },
        "box3DDataSource": {
          "type": [
            "Optional",
            [
              "Enum",
              "ibeoLUX",
              "interpolated"
            ]
          ],
          "annotations": [
            [ "NotEditable" ],
            [ "description", "source of data. applies to all fields except HEIGHT" ]
          ]
        },
        "box3DLidarInterpolationAge": {
          "type": [ "Optional", "Double" ],
          "annotations": [
            [ "NotEditable" ],
            [
              "description",
              "Number of lidar sensor scans since the object was last time detected by Lidar. The larger the number, the less reliable are the results. Not filled in case of tool based interpolation."
            ]
          ]
        },
        "box3DClassificationQuality": {
          "type": [ "Optional", "Double" ],
          "annotations": [
            [ "NotEditable" ],
            [
              "description",
              "Information from the sensor: the higher this value is the more reliable is the assigned object class. Range: 0..100"
            ]
          ]
        },
        "lidarDistanceX": {
          "type": [ "Optional", "Double" ],
          "annotations": [
            [ "NotEditable" ],
            [ "description", "DEPRECATED: Distance on X to object according to LIDAR, in meters." ]
          ]
        },
        "lidarDistanceY": {
          "type": [ "Optional", "Double" ],
          "annotations": [
            [ "NotEditable" ],
            [ "description", "DEPRECATED: Distance on Y to object according to LIDAR, in meters." ]
          ]
        },
        "lidarVelocityX": {
          "type": [ "Optional", "Double" ],
          "annotations": [
            [ "NotEditable" ],
            [ "description", "DEPRECATED: Velocity on X to object according to LIDAR, in meters per second." ]
          ]
        },
        "lidarVelocityY": {
          "type": [ "Optional", "Double" ],
          "annotations": [
            [ "NotEditable" ],
            [ "description", "DEPRECATED: Velocity on Y to object according to LIDAR, in meters per second." ]
          ]
        },
        "isInvalid": {
          "type": [ "Optional", "Bool" ],
          "annotations": [
            [
              "description",
              "Set to invalidate an 3D object."
            ]
          ]
        },
        "isStatic": {
          "type": [ "Optional", "Bool" ],
          "annotations": [
            [
              "description",
              "Information from the lidar sensor that is false if the detected object is moving."
            ]
          ]
        },
        "ObjectId": {
          "type": [ "Optional", "Double" ],
          "annotations": [
            [
              "description",
              "The identifier provided by IBEO for an object."
            ]
          ]
        },
        "Ibeo2MarkingsVersion": {
          "type": [ "Optional", "String" ],
          "annotations": [ "description", "The version of the tool used." ]
        },
        "IdcOdExtractorVersion": {
          "type": [ "Optional", "String" ],
          "annotations": [ "description", "The version of the tool used." ]
        }
      }
    },
    "Line3D": {
      "annotations": [
        [ "abstract" ],
        [ "FileInfoCategory", "Line3D" ],
        [
          "description",
          "A three dimensional representation of a line."
        ],
        [ "coordinate_system", "AFAC Ground" ]
      ],
      "fields": {
        "realWorldCoordinatesX": {
          "type": [ "Array", "Float" ],
          "annotations": [
            [ "NotEditable" ],
            [ "description", "X coordinates, each position corresponds to the element at the same position from the other array" ]
          ]
        },
        "realWorldCoordinatesY": {
          "type": [ "Array", "Float" ],
          "annotations": [
            [ "NotEditable" ],
            [ "description", "Y coordinates, each position corresponds to the element at the same position from the other array" ]
          ]
        },
        "realWorldCoordinatesZ": {
          "type": [ "Array", "Float" ],
          "annotations": [
            [ "NotEditable" ],
            [ "description", "Z coordinates, each position corresponds to the element at the same position from the other array" ]
          ]
        },
        "lineDataSource": {
          "type": [
            "Optional",
            [
              "Enum",
              "ibeoLUX",
              "interpolated",
              "manual"
            ]
          ],
          "annotations": [
            [ "NotEditable" ],
            [ "description", "Source of data" ]
          ]
        },
        "laneIdIbeo": {
          "type": [ "Optional", "Int" ],
          "annotations": [
            [ "NotEditable" ],
            [ "description", "Id number from the Ibeo sensor. The value is given to the lane, not the lane marking. This means the value might be the same for two marking objects (left and right side of the lane)." ]
          ]
        },
        "isInvalid": {
          "type": [ "Optional", "Bool" ],
          "annotations": [
            [
              "description",
              "Set to invalidate an 3D object."
            ]
          ]
        },
        "currentSegmentLength": {
          "type": [ "Optional", "Float" ],
          "annotations": [
            [ "NotEditable" ],
            [ "description", "Using in development phase. Will be removed before production." ]
          ]
        },
        "currentSegmentWidth": {
          "type": [ "Optional", "Float" ],
          "annotations": [
            [ "NotEditable" ],
            [ "description", "Using in development phase. Will be removed before production." ]
          ]
        },
        "friendlyTimestamp": {
          "type": [ "Optional", "String" ],
          "annotations": [
            [ "NotEditable" ],
            [ "description", "Using in development phase. Will be removed before production." ]
          ]
        },
        "Ibeo2MarkingsVersion": {
          "type": [ "Optional", "String" ],
          "annotations": [ "description", "The version of the tool used." ]
        },
        "IdcLaneExtractorVersion": {
          "type": [ "Optional", "String" ],
          "annotations": [ "description", "The version of the tool used." ]
        }
      }
    },
    "VehicleOcclusion": {
      "annotations": [
        "abstract"
      ],
      "fields": {
        "bottomOccluded": {
          "type": [ "Optional", "Bool" ],
          "annotations": [ "description", "true if bottom part of vehicle is occluded" ]
        }
      }
    },
    "HumanOcclusion": {
      "annotations": [
        [ "abstract" ],
        [ "description", "Basic set of human occlusion properties" ]
      ],
      "fields": {
        "headOccluded": {
          "type": [ "Optional", "Bool" ],
          "annotations": [ "description", "true if head is occluded" ]
        },
        "feetOccluded": {
          "type": [ "Optional", "Bool" ],
          "annotations": [ "description", "true if feet are occluded" ]
        }
      }
    },
    "HumanOcclusionEx": {
      "annotations": [
        [ "abstract" ],
        [ "description", "A more detailed version of human occlusion properties" ]
      ],
      "fields": {
        "headPointOccluded": {
          "type": [ "Optional", "Bool" ],
          "annotations": [ "description", "true if head is occluded" ]
        },
        "feetPointOccluded": {
          "type": [ "Optional", "Bool" ],
          "annotations": [ "description", "true if feet are occluded" ]
        },
        "pelvicPointOccluded": {
          "type": [ "Optional", "Bool" ],
          "annotations": [ "description", "true if pelvic is occluded" ]
        },
        "upperOcclusion": {
          "type": [
            "Enum",
            "none0-10%",
            "light10-50%",
            "heavy50-100%"
          ],
          "annotations": [
            [ "description", "Occlusion of the upper part of the body, above pelvicPoint. Occlusion is only considered regarding body and head, not arms." ]
          ]
        },
        "lowerOcclusion": {
          "type": [
            "Enum",
            "none0-10%",
            "light10-50%",
            "heavy50-100%"
          ],
          "annotations": [
            [ "description", "Occlusion of the lower part of the body, below pelvicPoint." ]
          ]
        }
      }
    },
    "MarkingCreationInformation": {
      "annotations": [
        [ "abstract" ],
        [ "description", "Characteristics related to the process of creating an instance of a class" ]
      ],
      "fields": {
        "markingDataSource": {
          "type": [
            "Optional",
            [
              "Enum",
              "userCreated",
              "interpolated",
              "cloned",
              "prelabel"
            ]
          ],
          "annotations": [
            [ "NotEditable" ],
            [ "description", "Indicates by which means does an object comes into existence" ]
          ]
        }
      }
    },
    "A_POINT": {
      "annotations": [
        "abstract"
      ],
      "fields": {
        "posX": {
          "type": "Int",
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "Image coordinate. Set by labeler."
            ]
          ]
        },
        "posY": {
          "type": "Int",
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "Image coordinate. Set by labeler."
            ]
          ]
        }
      }
    },
    "A_LINE": {
      "annotations": [
        "abstract"
      ],
      "fields": {
        "posX1": {
          "type": "Int",
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "Image coordinate. Set by labeler."
            ]
          ]
        },
        "posX2": {
          "type": "Int",
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "Image coordinate. Set by labeler."
            ]
          ]
        },
        "posY1": {
          "type": "Int",
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "Image coordinate. Set by labeler."
            ]
          ]
        },
        "posY2": {
          "type": "Int",
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "Image coordinate. Set by labeler."
            ]
          ]
        }
      }
    },
    "A_POLY3": {
      "annotations": [
        "abstract"
      ],
      "extends": "A_LINE",
      "fields": {
        "posX3": {
          "type": "Int",
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "Image coordinate. Set by labeler."
            ]
          ]
        },
        "posY3": {
          "type": "Int",
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "Image coordinate. Set by labeler."
            ]
          ]
        }
      }
    },
    "A_POLY4": {
      "annotations": [
        "abstract"
      ],
      "extends": "A_POLY3",
      "fields": {
        "posX4": {
          "type": "Int",
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "Image coordinate. Set by labeler."
            ]
          ]
        },
        "posY4": {
          "type": "Int",
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "Image coordinate. Set by labeler."
            ]
          ]
        }
      }
    },
    "A_MNRCSL": {
      "extends": "IntervalMarking",
      "annotations": [
        "abstract"
      ],
      "fields": {
        "eventType": {
          "type": [
            "Enum",
            "5",
            "10",
            "15",
            "20",
            "25",
            "30",
            "35",
            "40",
            "45",
            "50",
            "55",
            "60",
            "65",
            "70",
            "75",
            "80",
            "85",
            "90",
            "95",
            "100",
            "105",
            "110",
            "115",
            "120",
            "125",
            "130",
            "135",
            "140",
            "other",
            "undefined"
          ],
          "annotations": [
            [
              "description",
              "Set recommended or minimum speed sign value. Set by labeler."
            ]
          ]
        }
      }
    },
    "A_SL_Common": {
      "extends": "IntervalMarking",
      "annotations": [
        "abstract"
      ],
      "fields": {
        "eventType": {
          "type": [
            "Enum",
            "5",
            "10",
            "15",
            "20",
            "25",
            "30",
            "35",
            "40",
            "45",
            "50",
            "55",
            "60",
            "65",
            "70",
            "75",
            "80",
            "85",
            "90",
            "95",
            "100",
            "105",
            "110",
            "115",
            "120",
            "125",
            "130",
            "135",
            "140",
            "145",
            "150",
            "155",
            "160",
            "other",
            "undefined",
            "unlimited"
          ],
          "annotations": [
            [
              "description",
              "Set speed limit sign value. Set by labeler."
            ]
          ]
        },
        "restrictionValidity": {
          "type": [
            "Optional",
            [
              "Enum",
              "notValid",
              "valid"
            ]
          ],
          "annotations": [
            [
              "description",
              "Set the validity of the restriction sign when the recordings were made. Set by labeler."
            ]
          ]
        },
        "validity": {
          "type": [
            "Optional",
            [
              "Enum",
              "explicit",
              "implicit"
            ]
          ],
          "annotations": [
            [
              "description",
              "Set the speed limit is explicit (standrad speed sign) or implicit given (e.g. city entry/exit). Set by labeler."
            ]
          ]
        },
        "warningSign": {
          "type": [
            "Optional",
            [
              "Enum",
              "blackice",
              "curveLeft",
              "curveRight",
              "doubleCurveLeft",
              "doubleCurveRight",
              "gatedLevel",
              "other",
              "roadworks",
              "slipperyRoad",
              "ungatedLevel"
            ]
          ],
          "annotations": [
            [
              "description",
              "Set if a warning sign is presented together with the speed limit sign. Set by labeler."
            ]
          ]
        },
        "vehicleLaneAssociation": {
          "type": [
            "Optional",
            [
              "Enum",
              "1",
              "2",
              "3",
              "4",
              "5",
              "6"
            ]
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "speedLimitAssociation": {
          "type": [
            "Optional",
            [
              "Enum",
              "1",
              "2",
              "3",
              "4",
              "5",
              "6"
            ]
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        }
      }
    },
    "A_SL_AllExceptTrucks": {
      "extends": "A_SL_Common",
      "annotations": [
        "abstract"
      ],
      "fields": {
        "restriction": {
          "type": [
            "Optional",
            [
              "Enum",
              "childrenPresent",
              "flashing",
              "fog",
              "leftTurning",
              "night",
              "rain",
              "ramp",
              "rightTurning",
              "school",
              "snow",
              "snowRain",
              "time",
              "trailer",
              "zone",
              "virtualRamp",
              "virtualLeftTurning",
              "virtualRightTurning"
            ]
          ],
          "annotations": [
            [
              "description",
              "Set restriction connected to the speed limit sign. Set by labeler."
            ]
          ]
        },
        "secondRestriction": {
          "type": [
            "Optional",
            [
              "Enum",
              "childrenPresent",
              "flashing",
              "fog",
              "leftTurning",
              "night",
              "rain",
              "ramp",
              "rightTurning",
              "school",
              "snow",
              "snowRain",
              "time",
              "trailer",
              "zone",
              "virtualRamp",
              "virtualLeftTurning",
              "virtualRightTurning"
            ]
          ],
          "annotations": [
            [
              "description",
              "Set restriction connected to the speed limit sign. Set by labeler."
            ]
          ]
        },
        "thirdRestriction": {
          "type": [
            "Optional",
            [
              "Enum",
              "childrenPresent",
              "flashing",
              "fog",
              "leftTurning",
              "night",
              "rain",
              "ramp",
              "rightTurning",
              "school",
              "snow",
              "snowRain",
              "time",
              "trailer",
              "zone",
              "virtualRamp",
              "virtualLeftTurning",
              "virtualRightTurning"
            ]
          ],
          "annotations": [
            [
              "description",
              "Set restriction connected to the speed limit sign. Set by labeler."
            ]
          ]
        },
        "secondRestrictionValidity": {
          "type": [
            "Optional",
            [
              "Enum",
              "notValid",
              "valid"
            ]
          ],
          "annotations": [
            [
              "description",
              "Set the validity of the restriction sign when the recordings were made. Set by labeler."
            ]
          ]
        },
        "thirdRestrictionValidity": {
          "type": [
            "Optional",
            [
              "Enum",
              "notValid",
              "valid"
            ]
          ],
          "annotations": [
            [
              "description",
              "Set the validity of the restriction sign when the recordings were made. Set by labeler."
            ]
          ]
        }
      }
    },
    "A_SL_Trucks": {
      "extends": "A_SL_Common",
      "annotations": [
        "abstract"
      ],
      "fields": {
        "restriction": {
          "type": [
            "Optional",
            [
              "Enum",
              "truck",
              "weight3.5",
              "weight7.5",
              "truckNight",
              "weightTime",
              "truckTime",
              "weight"
            ]
          ],
          "annotations": [
            [
              "description",
              "Set restriction connected to the speed limit sign. Set by labeler."
            ]
          ]
        },
        "restrictionValue": {
          "type": "String",
          "annotations": [
            [
              "description",
              "The value of the  restriction shall be labeled if present,time slots for time restriction or weight values for weight restriction"
            ]
          ]
        }
      }
    },
    "edbd": {
      "extends": "IntervalMarking",
      "fieldOrder": [
        "coverage",
        "endFrame",
        "eventType",
        "imageZone",
        "intensity",
        "level",
        "startFrame",
        "streamName"
      ],
      "annotations": [
        [
          "FileInfoCategory",
          "eventDataBlockageDetection"
        ],
        [
          "SignedWith",
          "sms"
        ],
        [
          "description",
          ""
        ]
      ],
      "fields": {
        "coverage": {
          "type": [
            "Enum",
            "0",
            "10",
            "20",
            "30",
            "40",
            "50",
            "60",
            "70",
            "80",
            "90",
            "100"
          ],
          "annotations": [
            [
              "description",
              "Set the procentage of the blockage. Set by labeler."
            ]
          ]
        },
        "eventType": {
          "type": [
            "Enum",
            "condensation",
            "dirt",
            "ice",
            "miscellaneous",
            "nonTranslucentObject",
            "other",
            "transparentFilm",
            "clear"
          ],
          "annotations": [
            [
              "description",
              "Set the cause for blockage. Set by labeler."
            ]
          ]
        },
        "imageZone": {
          "type": [
            "Enum",
            "bottomCenter",
            "bottomLeft",
            "bottomRight",
            "center",
            "topLeft",
            "topRight"
          ],
          "annotations": [
            [
              "description",
              "Set the region in image that is affected. Set by labeler."
            ]
          ]
        },
        "intensity": {
          "type": [
            "Enum",
            "heavy",
            "medium",
            "light"
          ],
          "annotations": [
            [
              "description",
              "Set the level/intensity of blockage. Set by labeler."
            ]
          ]
        },
        "level": {
          "type": [
            "Enum",
            "heavy",
            "medium",
            "light"
          ],
          "annotations": [
            [
              "description",
              "Set the level/intensity of blockage. Set by labeler."
            ]
          ]
        }
      }
    },
    "edbdm": {
      "extends": "IntervalMarking",
      "fieldOrder": [
        "streamName",
        "ZoneId",
        "startFrame",
        "endFrame",
        "appearance",
        "causeofBlockage",
        "level",
        "weather"
      ],
      "annotations": [
        [
          "FileInfoCategory",
          "eventDataBlockageDetectionGrid"
        ],
        [
          "SignedWith",
          "sms"
        ],
        [
          "description",
          "blockage with 96 imageZones"
        ]
      ],
      "fields": {
        "zoneId": {
          "type": "UInt",
          "annotations": [
            [
              "Number of zoneId in entire sequence. Set by labeller."
            ]
          ]
        },
        "appearance": {
          "type": [
            "Optional",
            [
              "Enum",
              "translucent",
              "nonTranslucentObject",
              "miscellaneous"
            ]
          ],
          "annotations": [
            [
              "description",
              "Set the appearance for blockage. Set by labeler."
            ]
          ]
        },
        "causeofBlockage": {
          "type": [
            "Enum",
            "condensation",
            "dirt",
            "ice",
            "syntheticBlockage",
            "other"
          ],
          "annotations": [
            [
              "description",
              "Set the cause for blockage. Set by labeler."
            ]
          ]
        },
        "level": {
          "type": [
            "Optional",
            [
              "Enum",
              "none",
              "verylight",
              "heavy",
              "medium",
              "light"
            ]
          ],
          "annotations": [
            [
              "description",
              "Set the level/intensity of blockage. Set by labeler."
            ]
          ]
        },
        "weather": {
          "type": [
            "Optional",
            [
              "Enum",
              "sunny",
              "cloudy",
              "rain",
              "snow",
              "fog",
              "other"
            ]
          ],
          "annotations": [
            [
              "description",
              "Set the weather of blockage. Set by labeler."
            ]
          ]
        }
      }
    },
    "edld": {
      "extends": "IntervalMarking",
      "fieldOrder": [
        "endFrame",
        "eventType",
        "startFrame",
        "streamName",
        "labelingStarted"
      ],
      "annotations": [
        [
          "FileInfoCategory",
          "eventDataLaneDetection"
        ],
        [
          "SignedWith",
          "sms"
        ],
        [
          "description",
          ""
        ]
      ],
      "fields": {
        "eventType": {
          "type": [
            "Enum",
            "driveway",
            "drivewayLeft",
            "drivewayRight",
            "roadExit",
            "roadExitLeft",
            "roadExitRight",
            "laneForking",
            "laneForkingLeft",
            "laneForkingRight",
            "laneJoining",
            "laneJoiningLeft",
            "laneJoiningRight",
            "constructionSite",
            "constructionSiteLeft",
            "constructionSiteRight",
            "restrictedArea",
            "restrictedAreaLeft",
            "restrictedAreaRight",
            "beginRestrictedArea",
            "endRestrictedArea",
            "carPoolLane",
            "temporaryMarkings"
          ],
          "annotations": [
            [
              "description",
              "Set the lane event specified."
            ]
          ]
        },
        "labelingStarted": {
          "type": [
            "Optional",
            [
              "Enum",
              "thisVideo",
              "previousVideo"
            ]
          ]
        }
      }
    },
    "uci": {
      "fieldOrder": [
        "function",
        "database",
        "useCaseId",
        "sequenceId",
        "comment"
      ],
      "annotations": [
        [
          "FileInfoCategory",
          "useCaseInformation"
        ],
        [
          "description",
          ""
        ]
      ],
      "fields": {
        "function": {
          "type": [
            "Optional",
            "String"
          ],
          "annotations": [
            [
              "description",
              "The function on which this file can be maked on."
            ]
          ]
        },
        "database": {
          "type": [
            "Optional",
            "String"
          ],
          "annotations": [
            [
              "description",
              "The type on which the file will be marked."
            ]
          ]
        },
        "useCaseId": {
          "type": [
            "Optional",
            "Int"
          ],
          "annotations": [
            [
              "description",
              "The use case id this file belongs to."
            ]
          ]
        },
        "sequenceId": {
          "type": [
            "Optional",
            "Int"
          ],
          "annotations": [
            [
              "description",
              "The sequence id this file belongs to."
            ]
          ]
        },
        "comment": {
          "type": [
            "Optional",
            "String"
          ],
          "annotations": [
            [
              "description",
              "A comment regarding use case information."
            ]
          ]
        }
      }
    },
    "edlsr": {
      "extends": "IntervalMarking",
      "fieldOrder": [
        "endFrame",
        "eventType",
        "startFrame",
        "streamName"
      ],
      "annotations": [
        [
          "FileInfoCategory",
          "eventDataLightSourceRecognition"
        ],
        [
          "SignedWith",
          "sms"
        ],
        [
          "description",
          ""
        ]
      ],
      "fields": {
        "eventType": {
          "type": [
            "Enum",
            "1st",
            "2nd",
            "3rd",
            "4th",
            "last"
          ],
          "annotations": [
            [
              "description",
              "Set where there is a street lamp in the frame. Set by labeler."
            ]
          ]
        }
      }
    },
    "edlssl": {
      "extends": "IntervalMarking",
      "fieldOrder": [
        "endFrame",
        "eventType",
        "startFrame",
        "streamName"
      ],
      "annotations": [
        [
          "FileInfoCategory",
          "eventDataLightSourceStreetLight"
        ],
        [
          "SignedWith",
          "sms"
        ],
        [
          "description",
          ""
        ]
      ],
      "fields": {
        "eventType": {
          "type": [
            "Enum",
            "notSet",
            "1st",
            "2nd",
            "3rd",
            "4th",
            "5th",
            "noStreetLamps",
            "farAwayLamps"
          ],
          "annotations": [
            [
              "description",
              "Set where there is a street light in the frame. Set by labeler."
            ]
          ]
        }
      }
    },
    "edmnsp": {
      "extends": "A_MNRCSL",
      "fieldOrder": [
        "endFrame",
        "eventType",
        "startFrame",
        "streamName"
      ],
      "annotations": [
        [
          "FileInfoCategory",
          "eventDataMinimumSpeed"
        ],
        [
          "SignedWith",
          "sms"
        ],
        [
          "description",
          ""
        ]
      ]
    },
    "edop": {
      "extends": "IntervalMarking",
      "fieldOrder": [
        "endFrame",
        "eventType",
        "passingRestriction",
        "regulation",
        "startFrame",
        "streamName"
      ],
      "annotations": [
        [
          "FileInfoCategory",
          "eventDataOvertakingProhibited"
        ],
        [
          "SignedWith",
          "sms"
        ],
        [
          "description",
          ""
        ]
      ],
      "fields": {
        "eventType": {
          "type": [
            "Enum",
            "overtakingProhibited"
          ],
          "annotations": [
            [
              "description",
              "Set region where overtaking is prohibited for ego vehicle."
            ]
          ]
        },
        "passingRestriction": {
          "type": [
            "Optional",
            [
              "Enum",
              "other",
              "tractor",
              "trailer",
              "virtualRamp",
              "virtualLeftTurning",
              "virtualRightTurning",
              "truck3.5t",
              "truck7.5t",
              "weight"
            ]
          ],
          "annotations": [
            [
              "description",
              "Set the restriction for overtaking. Set by labeler."
            ]
          ]
        },
        "regulation": {
          "type": [
            "Optional",
            [
              "Enum",
              "lane",
              "signage",
              "signageAndLane",
              "signageTruck"
            ]
          ],
          "annotations": [
            [
              "description",
              "Set the cause that defines overtaking prohibited. Set by labeler."
            ]
          ]
        },
        "noPassingManouver": {
          "type": [
            "Optional",
            [
              "Enum",
              "yes",
              "no"
            ]
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        }
      }
    },
    "edrc": {
      "extends": "IntervalMarking",
      "fieldOrder": [
        "endFrame",
        "eventType",
        "startFrame",
        "streamName"
      ],
      "annotations": [
        [
          "FileInfoCategory",
          "eventDataRoadClass"
        ],
        [
          "SignedWith",
          "sms"
        ],
        [
          "description",
          ""
        ]
      ],
      "fields": {
        "eventType": {
          "type": [
            "Enum",
            "builtupArea",
            "highway",
            "motorway",
            "expressway",
            "other",
            "outsideBuiltupArea",
            "rampEntry",
            "rampExit",
            "serviceArea",
            "livingStreet",
            "tollStation",
            "limitedAccessRoad"
          ],
          "annotations": [
            [
              "description",
              "Specifies road class for ego vehicle."
            ]
          ]
        }
      }
    },
    "edrsp": {
      "extends": "A_MNRCSL",
      "fieldOrder": [
        "endFrame",
        "eventType",
        "restriction",
        "restrictionValidity",
        "startFrame",
        "streamName"
      ],
      "annotations": [
        [
          "FileInfoCategory",
          "eventDataRecommendedSpeed"
        ],
        [
          "SignedWith",
          "sms"
        ],
        [
          "description",
          ""
        ]
      ],
      "fields": {
        "restriction": {
          "type": [
            "Optional",
            [
              "Set",
              [
                "Enum",
                "childrenPresent",
                "flashing",
                "leftTurning",
                "night",
                "rain",
                "ramp",
                "rightTurning",
                "school",
                "snow",
                "snowRainFog",
                "time",
                "trailer",
                "zone",
                "fog",
                "virtualRamp",
                "virtualLeftTurning",
                "virtualRightTurning"
              ]
            ]
          ],
          "annotations": [
            [
              "description",
              "Set restriction for the recommended speed. Set by labeler."
            ]
          ]
        },
        "restrictionValidity": {
          "type": [
            "Optional",
            [
              "Set",
              [
                "Enum",
                "notValid",
                "valid"
              ]
            ]
          ],
          "annotations": [
            [
              "description",
              "Set the validity of restriction for the recommended speed. Set by labeler."
            ]
          ]
        }
      }
    },
    "edrw": {
      "extends": "IntervalMarking",
      "fieldOrder": [
        "endFrame",
        "eventType",
        "regulation",
        "startFrame",
        "streamName"
      ],
      "annotations": [
        [
          "FileInfoCategory",
          "eventDataRoadwork"
        ],
        [
          "SignedWith",
          "sms"
        ],
        [
          "description",
          ""
        ]
      ],
      "fields": {
        "eventType": {
          "type": [
            "Enum",
            "roadworkArea"
          ],
          "annotations": [
            [
              "description",
              "Specifies if ego vehicle is in a roadwork area or not. Based on signs and/or lanes (roadmarks, pylons, etc.). Set by labeler."
            ]
          ]
        },
        "regulation": {
          "type": [
            "Optional",
            [
              "Enum",
              "lane",
              "signage",
              "signageAndLane"
            ]
          ],
          "annotations": [
            [
              "description",
              "Set the cause that defines roadwork. Set by labeler."
            ]
          ]
        }
      }
    },
    "edsl1": {
      "extends": "A_SL_AllExceptTrucks",
      "fieldOrder": [
        "endFrame",
        "eventType",
        "restriction",
        "restrictionValidity",
        "startFrame",
        "streamName",
        "validity",
        "warningSign",
        "secondRestriction",
        "secondRestrictionValidity",
        "thirdRestriction",
        "thirdRestrictionValidity"
      ],
      "annotations": [
        [
          "FileInfoCategory",
          "eventDataSpeedLimit1"
        ],
        [
          "SignedWith",
          "sms"
        ],
        [
          "description",
          ""
        ]
      ]
    },
    "edsl2": {
      "extends": "A_SL_AllExceptTrucks",
      "fieldOrder": [
        "endFrame",
        "eventType",
        "restriction",
        "restrictionValidity",
        "startFrame",
        "streamName",
        "validity",
        "warningSign",
        "secondRestriction",
        "secondRestrictionValidity",
        "thirdRestriction",
        "thirdRestrictionValidity"
      ],
      "annotations": [
        [
          "FileInfoCategory",
          "eventDataSpeedLimit2"
        ],
        [
          "SignedWith",
          "sms"
        ],
        [
          "description",
          ""
        ]
      ]
    },
    "edsl3": {
      "extends": "A_SL_AllExceptTrucks",
      "fieldOrder": [
        "endFrame",
        "eventType",
        "restriction",
        "restrictionValidity",
        "startFrame",
        "streamName",
        "validity",
        "warningSign",
        "secondRestriction",
        "secondRestrictionValidity",
        "thirdRestriction",
        "thirdRestrictionValidity"
      ],
      "annotations": [
        [
          "FileInfoCategory",
          "eventDataSpeedLimit3"
        ],
        [
          "SignedWith",
          "sms"
        ],
        [
          "description",
          ""
        ]
      ]
    },
    "edsl4": {
      "extends": "A_SL_AllExceptTrucks",
      "fieldOrder": [
        "endFrame",
        "eventType",
        "restriction",
        "restrictionValidity",
        "startFrame",
        "streamName",
        "validity",
        "warningSign",
        "secondRestriction",
        "secondRestrictionValidity",
        "thirdRestriction",
        "thirdRestrictionValidity"
      ],
      "annotations": [
        [
          "FileInfoCategory",
          "eventDataSpeedLimit4"
        ],
        [
          "SignedWith",
          "sms"
        ],
        [
          "description",
          ""
        ]
      ]
    },
    "edsl5": {
      "extends": "A_SL_AllExceptTrucks",
      "fieldOrder": [
        "endFrame",
        "eventType",
        "restriction",
        "restrictionValidity",
        "startFrame",
        "streamName",
        "validity",
        "warningSign",
        "secondRestriction",
        "secondRestrictionValidity",
        "thirdRestriction",
        "thirdRestrictionValidity"
      ],
      "annotations": [
        [
          "FileInfoCategory",
          "eventDataSpeedLimit5"
        ],
        [
          "SignedWith",
          "sms"
        ],
        [
          "description",
          ""
        ]
      ]
    },
    "edsl6": {
      "extends": "A_SL_AllExceptTrucks",
      "fieldOrder": [
        "endFrame",
        "eventType",
        "restriction",
        "restrictionValidity",
        "startFrame",
        "streamName",
        "validity",
        "warningSign",
        "secondRestriction",
        "secondRestrictionValidity",
        "thirdRestriction",
        "thirdRestrictionValidity"
      ],
      "annotations": [
        [
          "FileInfoCategory",
          "eventDataSpeedLimit6"
        ],
        [
          "SignedWith",
          "sms"
        ],
        [
          "description",
          ""
        ]
      ]
    },
    "edsl7": {
      "extends": "A_SL_Trucks",
      "fieldOrder": [
        "endFrame",
        "eventType",
        "restriction",
        "restrictionValidity",
        "startFrame",
        "streamName",
        "validity",
        "warningSign"
      ],
      "annotations": [
        [
          "FileInfoCategory",
          "eventDataSpeedLimit7"
        ],
        [
          "SignedWith",
          "sms"
        ],
        [
          "description",
          ""
        ]
      ]
    },
    "edsl8": {
      "extends": "A_SL_Trucks",
      "fieldOrder": [
        "endFrame",
        "eventType",
        "restriction",
        "restrictionValidity",
        "startFrame",
        "streamName",
        "validity",
        "warningSign"
      ],
      "annotations": [
        [
          "FileInfoCategory",
          "eventDataSpeedLimit8"
        ],
        [
          "SignedWith",
          "sms"
        ],
        [
          "description",
          ""
        ]
      ]
    },
    "edsl9": {
      "extends": "A_SL_Trucks",
      "fieldOrder": [
        "endFrame",
        "eventType",
        "restriction",
        "restrictionValidity",
        "startFrame",
        "streamName",
        "validity",
        "warningSign"
      ],
      "annotations": [
        [
          "FileInfoCategory",
          "eventDataSpeedLimit9"
        ],
        [
          "SignedWith",
          "sms"
        ],
        [
          "description",
          ""
        ]
      ]
    },
    "edtnl": {
      "extends": "IntervalMarking",
      "fieldOrder": [
        "endFrame",
        "eventType",
        "startFrame",
        "streamName"
      ],
      "annotations": [
        [
          "FileInfoCategory",
          "eventDataTunnel"
        ],
        [
          "SignedWith",
          "sms"
        ],
        [
          "description",
          ""
        ]
      ],
      "fields": {
        "eventType": {
          "type": [
            "Enum",
            "tunnel",
            "noTunnel",
            "bridgesAndUnderpasses"
          ],
          "annotations": [
            [
              "description",
              "Specifies if ego vehicle is in a tunnel or not."
            ]
          ]
        },
        "illuminationInsideTunnel": {
          "type": [ "Optional", "Bool" ],
          "annotations": [ "description", "Describes if the object has a strange pose." ]
        },
        "numberOfLanes": {
          "type": [ "Optional", "Int" ]
        },
        "tunnelEntranceShape": {
          "type": [
            "Optional",
            [
              "Enum",
              "round",
              "rectangle"
            ]
          ]
        },
        "tunnelExitShape": {
          "type": [
            "Optional",
            [
              "Enum",
              "round",
              "rectangle"
            ]
          ]
        },
        "isTunnelLaterallyOpen": {
          "type": [ "Optional", "Bool" ]
        },
        "tunnelLaterallyOpen": {
          "type": [
            "Optional",
            [
              "Enum",
              "left",
              "right",
              "leftRight"
            ]
          ]
        },
        "bridgesAndUnderpasses": {
          "type": [ "Optional", "Bool" ]
        },
        "partiallyOpenCeilingStructure": {
          "type": [ "Optional", "Bool" ]
        },
        "approachingTrafficInSameTunnelTube": {
          "type": [ "Optional", "Bool" ]
        }
      }
    },
    "edww": {
      "extends": "IntervalMarking",
      "fieldOrder": [
        "endFrame",
        "eventType",
        "signType",
        "startFrame",
        "streamName"
      ],
      "annotations": [
        [
          "FileInfoCategory",
          "eventDataWrongWay"
        ],
        [
          "SignedWith",
          "sms"
        ],
        [
          "description",
          ""
        ]
      ],
      "fields": {
        "eventType": {
          "type": [
            "Enum",
            "wrongWay"
          ],
          "annotations": [
            [
              "description",
              "Specifies ego vehicle is driving in wrong direction. Set by labeler."
            ]
          ]
        },
        "signType": {
          "type": [
            "Optional",
            [
              "Enum",
              "noEntry",
              "roundabout",
              "trackRouting"
            ]
          ],
          "annotations": [
            [
              "description",
              "Set the type that defines wrong way. Set by labeler."
            ]
          ]
        }
      }
    },
    "mdnavi": {
      "fieldOrder": [
        "drivingSide",
        "egoLanePosition",
        "inBuildUpArea",
        "inCity",
        "inTunnel",
        "numOfLanesDriveDirection",
        "onBridge",
        "onDividedRoad",
        "onOneWayRoad",
        "roadTypes",
        "speedLimitRestrictions",
        "speedLimits"
      ],
      "annotations": [
        [
          "FileInfoCategory",
          "metaDataNavi"
        ],
        [
          "SignedWith",
          "mdms"
        ],
        [
          "description",
          "Navigation map data recorded from CAN. Set by PEX."
        ]
      ],
      "fields": {
        "drivingSide": {
          "type": [
            "Optional",
            [
              "Enum",
              "left",
              "right"
            ]
          ],
          "annotations": [
            [
              "description",
              "Set driving side of road. Parsed from CAN, signal: ADAS_Meta_DrvSide. Set by PEX."
            ]
          ]
        },
        "egoLanePosition": {
          "type": [
            "Optional",
            [
              "Set",
              [
                "Enum",
                "emergencyLane",
                "leftMostLane",
                "middleLane",
                "rightMostLane",
                "singleLane"
              ]
            ]
          ],
          "annotations": [
            [
              "description",
              "Set ego vehicle position on road. Parsed from CAN, signal: ADAS_Posn_CurLane. Set by PEX."
            ]
          ]
        },
        "inBuildUpArea": {
          "type": [
            "Optional",
            "Bool"
          ],
          "annotations": [
            [
              "description",
              "Set when ego vehicle is in build up area. Parsed from CAN, signal: ADAS_CuA_AreaBuildUp. Set by PEX."
            ]
          ]
        },
        "inCity": {
          "type": [
            "Optional",
            "Bool"
          ],
          "annotations": [
            [
              "description",
              "Set when ego vehicle is within city. Parsed from CAN, signal: NaviCityLmt_Stat. Set by PEX."
            ]
          ]
        },
        "inTunnel": {
          "type": [
            "Optional",
            "Bool"
          ],
          "annotations": [
            [
              "description",
              "Set when ego vehicle is in a tunnel. Parsed from CAN, signal: ADAS_CuA_Tunnel. Set by PEX."
            ]
          ]
        },
        "numOfLanesDriveDirection": {
          "type": [
            "Optional",
            [
              "Set",
              [
                "Enum",
                "1",
                "2",
                "3",
                "4",
                "5",
                "6orMore"
              ]
            ]
          ],
          "annotations": [
            [
              "description",
              "Set number of lanes in driving direction for ego vehicle. Parsed from CAN, signal: ADAS_CuA_NumOfLaneDrvDir. Set by PEX."
            ]
          ]
        },
        "onBridge": {
          "type": [
            "Optional",
            "Bool"
          ],
          "annotations": [
            [
              "description",
              "Set when ego vehicle is on a bridge. Parsed from CAN, signal: ADAS_CuA_Bridge. Set by PEX."
            ]
          ]
        },
        "onDividedRoad": {
          "type": [
            "Optional",
            "Bool"
          ],
          "annotations": [
            [
              "description",
              "Set when ego vehicle is on a divided road (dual carriageway). Parsed from CAN, signal: ADAS_CuA_RoadDivd. Set by PEX."
            ]
          ]
        },
        "onOneWayRoad": {
          "type": [
            "Optional",
            "Bool"
          ],
          "annotations": [
            [
              "description",
              "Set when ego vehicle is on a one way road. Parsed from CAN, signal: ADAS_CuA_NumOfLaneOppDir. Set by PEX."
            ]
          ]
        },
        "roadTypes": {
          "type": [
            "Optional",
            [
              "Set",
              [
                "Enum",
                "entranceOrExitCarParkArea",
                "entranceOrExitServiceArea",
                "freeway",
                "freewayRamp",
                "multipleCarriageway",
                "nonFreewayRamp",
                "parallelRampRoad",
                "pedestrianZone",
                "roundabout",
                "serviceRoad",
                "singleCarriageway",
                "trafficSquare"
              ]
            ]
          ],
          "annotations": [
            [
              "description",
              "Set road types ego vehicle is driving on. Parsed from CAN, signal: ADAS_CuA_WayForm. Set by PEX."
            ]
          ]
        },
        "speedLimitRestrictions": {
          "type": [
            "Optional",
            [
              "Set",
              [
                "Enum",
                "dark",
                "day",
                "fog",
                "icy",
                "vehicle",
                "weight",
                "wet"
              ]
            ]
          ],
          "annotations": [
            [
              "description",
              "Set available speed limit restriction on road ego vehicle pass by. Parsed from CAN, signal: ADAS_ProfLong_Val_SpdVld. Set by PEX."
            ]
          ]
        },
        "speedLimits": {
          "type": [
            "Optional",
            [
              "Set",
              [
                "Enum",
                "5",
                "7",
                "10",
                "15",
                "20",
                "25",
                "30",
                "35",
                "40",
                "45",
                "50",
                "55",
                "60",
                "65",
                "70",
                "75",
                "80",
                "85",
                "90",
                "95",
                "100",
                "105",
                "110",
                "115",
                "120",
                "130",
                "140",
                "150",
                "160",
                "unknown",
                "unlimited"
              ]
            ]
          ],
          "annotations": [
            [
              "description",
              "Set speed limits ego vehicle pass by. Parsed from CAN, signal: ADAS_CuA_EffSpdLmt. Set by PEX."
            ]
          ]
        }
      }
    },
    "mdtsr": {
      "fieldOrder": [
        "cancellationSigns",
        "informationSigns",
        "regulationSigns",
        "specialSigns",
        "speedLimitSigns"
      ],
      "annotations": [
        [
          "FileInfoCategory",
          "metaDataTrafficSignRecognition"
        ],
        [
          "SignedWith",
          "mdms"
        ],
        [
          "description",
          ""
        ]
      ],
      "fields": {
        "cancellationSigns": {
          "type": [
            "Optional",
            [
              "Set",
              [
                "Enum",
                "city",
                "expressway",
                "highway",
                "livingStreet",
                "minimumSpeed",
                "overtakingProhibited",
                "recommendedSpeed",
                "speedLimit"
              ]
            ]
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "informationSigns": {
          "type": [
            "Optional",
            [
              "Set",
              [
                "Enum",
                "addon",
                "crosswalk",
                "direction",
                "roadwork",
                "roundabout",
                "warning"
              ]
            ]
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "regulationSigns": {
          "type": [
            "Optional",
            [
              "Set",
              [
                "Enum",
                "city",
                "expressway",
                "highway",
                "livingStreet",
                "noEntry",
                "overtakingProhibited"
              ]
            ]
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "specialSigns": {
          "type": [
            "Optional",
            [
              "Set",
              [
                "Enum",
                "handcrafted",
                "invalidated",
                "led",
                "ledWithoutBorder",
                "mobileLed",
                "occluded",
                "otherRoad",
                "speedSignSticker",
                "temporary"
              ]
            ]
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "speedLimitSigns": {
          "type": [
            "Optional",
            [
              "Set",
              [
                "Enum",
                "minimum",
                "orangeUs",
                "recommended",
                "standard",
                "yellowUs"
              ]
            ]
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        }
      }
    },
    "ompvmt": {
      "extends": [
        "FrameMarking",
        "A_POLY4"
      ],
      "fieldOrder": [
        "frameNumber",
        "posX1",
        "posX2",
        "posX3",
        "posX4",
        "posY1",
        "posY2",
        "posY3",
        "posY4",
        "quality",
        "refId",
        "signType",
        "streamName"
      ],
      "annotations": [
        [
          "FileInfoCategory",
          "objectMarkingsPavement"
        ],
        [
          "SignedWith",
          "sms"
        ],
        [
          "description",
          "Pavement markings on the road surface"
        ]
      ],
      "fields": {
        "quality": {
          "type": [
            "Optional",
            [
              "Enum",
              "bad",
              "good",
              "medium"
            ]
          ],
          "annotations": [
            [
              "description",
              "Set quality of surface marking."
            ]
          ]
        },
        "signType": {
          "type": [
            "Optional",
            [
              "Enum",
              "diamondMarking",
              "leftAndRightArrow",
              "leftArrow",
              "rightArrow",
              "straightAndLeftAndRightArrow",
              "straightAndLeftArrow",
              "straightAndRightArrow",
              "straightArrow"
            ]
          ],
          "annotations": [
            [
              "description",
              "Set arrow type of surface markings."
            ]
          ]
        }
      }
    },
    "fsmd": {
      "annotations": [
        [
          "FileInfoCategory",
          "FileSelectionMetadata"
        ],
        [
          "SignedWith",
          "mdms"
        ]
      ],
      "fields": {
        "numberOfVehicles": {
          "type": [
            "Optional",
            [
              "Enum",
              "<6",
              ">=6"
            ]
          ]
        },
        "numberOfPedestrians": {
          "type": [
            "Optional",
            [
              "Enum",
              "<7",
              ">=7"
            ]
          ]
        },
        "numberOfStreetLamps": {
          "type": [
            "Optional",
            [
              "Enum",
              "<2",
              ">=2"
            ]
          ]
        },
        "precipitations": {
          "type": [
            "Optional",
            [
              "Enum",
              "rain",
              "sun",
              "snow",
              "fog"
            ]
          ]
        },
        "blockage": {
          "type": [
            "Optional",
            "Bool"
          ]
        },
        "constructionSite": {
          "type": [
            "Optional",
            "Bool"
          ]
        },
        "trafficSignType": {
          "type": [
            "Optional",
            [
              "Enum",
              "City",
              "HighWay",
              "other"
            ]
          ]
        }
      }
    },
    "vmd": {
      "fieldOrder": [
        "roadUser",
        "sky",
        "timeOfDay",
        "roadMaterial",
        "roadCharacteristics",
        "roadType",
        "roadCover",
        "surfaceQuality",
        "castShadows",
        "objects",
        "glare",
        "exposure",
        "spray",
        "precipitation",
        "detailedPrecipitation",
        "blockage",
        "sight",
        "sightValue",
        "diffusion",
        "destinationSet",
        "interestingLane",
        "interestingSign",
        "roadCharacteristicsAutomatic",
        "specialEvent",
        "streetGlare",
        "useCase",
        "tailgatingVehicle",
        "sunDirection",
        "roadCategorySignType",
        "streetLighting",
        "bottsDots",
        "egoVehicleWindshieldType",
        "cameraPositionVertical",
        "cameraPositionHorizontal"
      ],
      "annotations": [
        [
          "FileInfoCategory",
          "visionMetaData"
        ],
        [
          "SignedWith",
          "mdms"
        ]
      ],
      "fields": {
        "roadCharacteristics": {
          "type": [
            "Set",
            [
              "Enum",
              "flat",
              "hilly",
              "intersection",
              "bridgeUnderpass",
              "roadBump",
              "tunnel",
              "singleDivider",
              "singleNoDivider",
              "multipleDivider",
              "multipleNoDivider",
              "onBridge",
              "roundabout",
              "illuminatedCity",
              "ruralIntersection",
              "trafficIslands",
              "curvy"
            ]
          ],
          "annotations": [
            [
              "description",
              "The characteristic for the road in the sequence. Several can be selected, separated with ';' For KAFAS 'Left turn' sequence contains several sharp turns. Maybe update this and remove and rename some of the attributes. Only have on tunnel, curvy instead of different turns and hilly instead of slope up and down.Set by labeller."
            ]
          ]
        },
        "roadType": {
          "type": [
            "Set",
            [
              "Enum",
              "notSet",
              "city",
              "residential",
              "ruralRoad",
              "highway",
              "expressway",
              "playStreet",
              "suburban",
              "village",
              "testTrack",
              "garage",
              "gravelRoad"
            ]
          ],
          "annotations": [
            [
              "description",
              "Where was sequence recorded. Set by driver."
            ]
          ]
        },
        "roadCover": {
          "type": [
            "Set",
            [
              "Enum",
              "dry",
              "humidPatches",
              "wet",
              "waterFilm",
              "snow",
              "snowMud",
              "ice",
              "dirt"
            ]
          ],
          "annotations": [
            [
              "description",
              "The cover of the road surface, if any. Several can be selected, separated with ';'. Set by labeller."
            ]
          ]
        },
        "surfaceQuality": {
          "type": [
            "Set",
            [
              "Enum",
              "normal",
              "patches",
              "fractured",
              "badDamaged",
              "differentSurfaces",
              "bitumenStrips"
            ]
          ],
          "annotations": [
            [
              "description",
              "The conditions of the road surface. Several can be selected, separated with ';'. Set by labeller."
            ]
          ]
        },
        "castShadows": {
          "type": [
            "Set",
            [
              "Enum",
              "bridge",
              "vegetation",
              "guardRail",
              "otherVehicle",
              "other",
              "longitudinal"
            ]
          ],
          "annotations": [
            [
              "description",
              "Shadows thrown across the road. Set by labeller."
            ]
          ]
        },
        "roadMaterial": {
          "type": [
            "Set",
            [
              "Enum",
              "gravel",
              "tarmac",
              "cobblestone",
              "concrete",
              "other"
            ]
          ],
          "annotations": [
            [
              "description",
              "Type of the road. Several can be selected, separated with ';'. Set by labeller."
            ]
          ]
        },
        "roadUser": {
          "type": [
            "Optional",
            [
              "Set",
              [
                "Enum",
                "pedestrian",
                "car",
                "van",
                "truck",
                "bicyclist",
                "motorcyclist",
                "wheelchair",
                "bus",
                "motorhome",
                "caravan",
                "otherVehicle"
              ]
            ]
          ],
          "annotations": [
            [
              "description",
              "Type of road user.Type of road user. Several can be selected, separated with ';' Set by labeller."
            ]
          ]
        },
        "timeOfDay": {
          "type": [
            "Set",
            [
              "Enum",
              "night",
              "day",
              "duskDawn"
            ]
          ],
          "annotations": [
            [
              "description",
              "The time of the day. "
            ]
          ]
        },
        "sky": {
          "type": [
            "Set",
            [
              "Enum",
              "undefined",
              "clear",
              "overcast",
              "partlyCloudy",
              "lowSun"
            ]
          ],
          "annotations": [
            [
              "description",
              "The conditions of the sky. Several can be selected, separated with ';'. Set by driver. Set by PEX, from json."
            ]
          ]
        },
        "objects": {
          "type": [
            "Optional",
            [
              "Set",
              [
                "Enum",
                "PD",
                "TW",
                "VD",
                "TSR",
                "LSR",
                "LD",
                "blockage",
                "other"
              ]
            ]
          ],
          "annotations": [
            [
              "description",
              "What kind of objects that are visible in the file. Several can be selected, separated with ';' Set by labeller."
            ]
          ]
        },
        "glare": {
          "type": [
            "Set",
            [
              "Enum",
              "sun",
              "oncommingTraffic",
              "preceedingTraffic",
              "selfGlare",
              "roadGlare",
              "otherGlare",
              "lightSword"
            ]
          ],
          "annotations": [
            [
              "description",
              "self-glare is ego light glare oncomming traffic is glare from high beam of oncomming car. Set by labeller."
            ]
          ]
        },
        "exposure": {
          "type": [
            "Set",
            [
              "Enum",
              "overexposed",
              "underexposed",
              "largeVariations"
            ]
          ],
          "annotations": [
            [
              "description",
              "If some parts of sequence is overexposed, underexposed or if sequence contains rapid light variations. Underexposed could be due to low external lighting or bad exposure control. Several can be selected, separated with ';'. Set by labeller."
            ]
          ]
        },
        "sight": {
          "type": [
            "Set",
            [
              "Enum",
              "full",
              "<10m",
              "10-50m",
              "50-100m",
              ">100m"
            ]
          ],
          "annotations": [
            [
              "description",
              "Description: Reduced sight due to weather problems such as fog, rain, snow and spray. Several can be selected, separated with ';'. Set by labeller."
            ]
          ]
        },
        "sightValue": {
          "type": [
            "Set",
            "Int"
          ],
          "annotations": [
            [
              "description",
              "Description: Value of reduced sight calculation (weather problems such as fog, rain, snow and spray) in meters. Set by labeller."
            ]
          ]
        },
        "blockage": {
          "type": [
            "Set",
            [
              "Enum",
              "none",
              "partlyBlurry",
              "fullyBlurry",
              "partlyOccluded",
              "fullyOccluded",
              "transparent"
            ]
          ],
          "annotations": [
            [
              "description",
              "Dirt or mist on the windshield. Water or snow that blocks the windshield continously and is not removed by the wiper. The blockage can be transparent. Not low sun/glare/exposure. Several can be selected, separated with ';'. Set by labeller."
            ]
          ]
        },
        "spray": {
          "type": [
            "Set",
            [
              "Enum",
              "normal",
              "heavy"
            ]
          ],
          "annotations": [
            [
              "description",
              "Several can be selected, separated with ';'. Set by labeller."
            ]
          ]
        },
        "smoke": {
          "type": [
            "Set",
            [
              "Enum",
              "sewer",
              "exhaustionPipe",
              "other",
              "snow"
            ]
          ],
          "annotations": [
            [
              "description",
              "Different types of smokes, several can be selected. Set By labeller."
            ]
          ]
        },
        "diffusion": {
          "type": [
            "Set",
            [
              "Enum",
              "none",
              "round",
              "cones",
              "other"
            ]
          ],
          "annotations": [
            [
              "description",
              "Effects that appear around light sources when they are viewed through a transparent occlusion such as water, smear or dirt on the windshield or the windshield is covered by a film of some kind. Several can be selected, separated with ';'Set by labeller."
            ]
          ]
        },
        "precipitation": {
          "type": [
            "Set",
            [
              "Enum",
              "none",
              "unset",
              "snow",
              "hail",
              "rain",
              "fog",
              "haze",
              "sleet"
            ]
          ],
          "annotations": [
            [
              "description",
              "The precipitation in the sequence. Several can be selected, separated with ';'. Set by driver/labeller. Set by PEX, from can/driver."
            ]
          ]
        },
        "detailedPrecipitation": {
          "type": [
            "Set",
            [
              "Enum",
              "none",
              "unset",
              "lightSnow",
              "mediumSnow",
              "heavySnow",
              "hail",
              "lightRain",
              "mediumRain",
              "heavyRain",
              "lightFog",
              "mediumFog",
              "heavyFog",
              "haze",
              "sleet"
            ]
          ],
          "annotations": [
            [
              "description",
              "The precipitation in the sequence, in some cases with intensity. Several can be selected, separated with ';'. Set by driver/labeller. Set by PEX, from can/driver."
            ]
          ]
        },
        "destinationSet": {
          "type": [
            "Optional",
            "Bool"
          ],
          "annotations": [
            [
              "description",
              "Set by the driver when the driver has set a destination in the navigation system."
            ]
          ]
        },
        "interestingLane": {
          "type": [
            "Optional",
            [
              "Set",
              [
                "Enum",
                "bottsDots",
                "other"
              ]
            ]
          ]
        },
        "interestingSign": {
          "type": [
            "Optional",
            [
              "Set",
              [
                "Enum",
                "led",
                "orangeRed",
                "other"
              ]
            ]
          ],
          "annotations": [
            [
              "description",
              "Set by driver when a certain sign occurs at the road (in USA)."
            ]
          ]
        },
        "roadCharacteristicsAutomatic": {
          "type": [
            "Set",
            [
              "Enum",
              "curvy",
              "flat",
              "hilly"
            ]
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "specialEvent": {
          "type": [
            "Set",
            [
              "Enum",
              "other",
              "roadwork",
              "tunnel",
              "tollStation",
              "borderCrossing",
              "serviceArea",
              "animal",
              "cobblestoneRoad",
              "concreteRoad",
              "criticalRoute",
              "debris",
              "constructionWarningTrailer"
            ]
          ],
          "annotations": [
            [
              "description",
              "Set by driver when something special occurs at the road."
            ]
          ]
        },
        "streetGlare": {
          "type": [
            "Set",
            [
              "Enum",
              "reflectorTrafficSign",
              "sunReflection",
              "vehicleLight"
            ]
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "useCase": {
          "type": [
            "Optional",
            [
              "Set",
              [
                "Enum",
                "ld",
                "lsr",
                "od",
                "tsr"
              ]
            ]
          ],
          "annotations": [
            [
              "description",
              "Set by the driver when a certain use case occurs. Set by PEX, from json."
            ]
          ]
        },
        "tailgatingVehicle": {
          "type": [
            "Optional",
            "Bool"
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "sunDirection": {
          "type": [
            "Optional",
            [
              "Enum",
              "Front",
              "Back",
              "Right",
              "Left",
              "None"
            ]
          ],
          "annotations": [
            [
              "description",
              "Describes the position of the Sun"
            ]
          ]
        },
        "LSRroadType": {
          "type": [
            "Set",
            [
              "Enum",
              "city",
              "maybeCity",
              "residential",
              "ruralRoad",
              "highWay",
              "expressway"
            ]
          ],
          "annotations": [
            [
              "description",
              "Indicates the road type.Set by the labeler"
            ]
          ]
        },
        "trafficDensity": {
          "type": [
            "Optional",
            [
              "Enum",
              "unset",
              "none",
              "loose",
              "heavy"
            ]
          ],
          "annotations": [
            [
              "description",
              "Indicates the road type. Set by the driver"
            ]
          ]
        },
        "roadCategorySignType": {
          "type": [
            "Set",
            [
              "Enum",
              "unset",
              "highwayEntry",
              "highwayExit",
              "cityEntry",
              "cityExit",
              "livingStreetBegin",
              "livingStreetEnd"
            ]
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "streetLighting": {
          "type": "Bool",
          "annotations": [
            [
              "description",
              "Whether street lighting was on or off."
            ]
          ]
        },
        "bottsDots": {
          "type": "Bool",
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "egoVehicleWindshieldType": {
          "type": [
            "Optional",
            [
              "Enum",
              "green",
              "clear",
              "IRR"
            ]
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "Windshield type of the vehicle."
            ]
          ]
        },
        "cameraPositionVertical": {
          "type": [
            "Optional",
            [
              "Enum",
              "factory",
              "high",
              "low"
            ]
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "cameraPositionHorizontal": {
          "type": [
            "Optional",
            [
              "Enum",
              "factory",
              "left",
              "center",
              "right"
            ]
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        }
      },
      "fieldValues": {
        "sight": "full",
        "blockage": "none",
        "precipitation": "none"
      }
    },
    "tmd": {
      "fieldOrder": [
        "collision",
        "artificialTarget",
        "targetDirection",
        "targetSpeed",
        "testType",
        "testTrack"
      ],
      "annotations": [
        [
          "FileInfoCategory",
          "testMetaData"
        ],
        [
          "SignedWith",
          "mdms"
        ]
      ],
      "fields": {
        "collision": {
          "type": [
            "Optional",
            "Bool"
          ],
          "annotations": [
            [
              "description",
              "If there is a collision with an object in sequence. Typically in test track scenarios. Set by labeller."
            ]
          ]
        },
        "artificialTarget": {
          "type": [
            "Set",
            [
              "Enum",
              "none",
              "pedestrian",
              "balloonCar",
              "pole",
              "other"
            ]
          ],
          "annotations": [
            [
              "description",
              "If there is an artificial target in sequence. Typically in test track scenarios. Several can be selected, separated with ';'. Set by labeller."
            ]
          ]
        },
        "targetDirection": {
          "type": [
            "Array",
            [
              "Enum",
              "NN",
              "NE",
              "NW",
              "WW",
              "EE",
              "SE",
              "SW",
              "SS"
            ]
          ],
          "annotations": [
            [
              "description",
              "Target dummy direction. Read from testSpec if available. Set by labeller."
            ]
          ]
        },
        "targetSpeed": {
          "type": [
            "Optional",
            "Double"
          ],
          "annotations": [
            [
              "description",
              "Target dummy speed. Read from testSpec if available. Set by labeller."
            ]
          ]
        },
        "testType": {
          "type": [
            "Optional",
            "String"
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "The type of test performed on test track in sequence. Set by labeller."
            ]
          ]
        },
        "testTrack": {
          "type": [
            "Optional",
            "Bool"
          ],
          "annotations": [
            [
              "description",
              "Test track recording or other special recording, i.e. everything not Real World. Set by labeller."
            ]
          ]
        }
      }
    },
    "smd": {
      "fieldOrder": [
        "additionalSensors",
        "leftCameraSensorType",
        "rightCameraSensorType",
        "savingMode",
        "cameraID",
        "cameraSensorTemperatureMin",
        "cameraSensorTemperatureMean",
        "cameraSensorTemperatureMax",
        "softwareVersion",
        "hardwareVersion",
        "pitchAngleMin",
        "pitchAngleMax",
        "rollAngleMin",
        "rollAngleMax",
        "diskID",
        "navigationSystem",
        "cameraType",
        "driverName",
        "currentHorizon",
        "calibratedHorizon",
        "cameraAssembly",
        "systemRelease",
        "gpsType",
        "navigationSystemVersion",
        "bobFirmwareVersion",
        "bobHardwareVersion",
        "collectionComputerId",
        "collectionToolVersion",
        "dgpsAvailable",
        "externalGpsAvailable",
        "lidarAvailable",
        "naviAvailable",
        "radarAvailable",
        "DGPSmodel",
        "lidarType"
      ],
      "annotations": [
        [
          "FileInfoCategory",
          "systemMetaData"
        ],
        [
          "SignedWith",
          "mdms"
        ]
      ],
      "fields": {
        "additionalSensors": {
          "type": [
            "Optional",
            "String"
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "Some sequence information. Ex. GPS; DGPS; Radar;FIR. Several can be selected, separated with ';' Set by can/labeller."
            ]
          ]
        },
        "leftCameraSensorType": {
          "type": [
            "Optional",
            [
              "Enum",
              "RGB",
              "RCCC",
              "CCCC"
            ]
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "Type of sensor in left camera that have been used for the recording. Set by PEX, from adtf file."
            ]
          ]
        },
        "rightCameraSensorType": {
          "type": [
            "Optional",
            [
              "Enum",
              "RGB",
              "RCCC",
              "CCCC"
            ]
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "Type of sensor in right or only camera that have been used for the recording. Set by PEX, from adtf file."
            ]
          ]
        },
        "savingMode": {
          "type": [
            "Optional",
            [
              "Enum",
              "CHPre",
              "CH",
              "CHMS",
              "SHAS",
              "ATPrePo",
              "MTPrePo",
              "CRAM"
            ]
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "What kind of saving mode was used during recording. CHPre - Continuous to hard drive with prebuffer. CH - Continuous to hard drive without prebuffer. CHMS - Continuous to hard drive with manual split. SHAS - Continuous to hard drive with auto split. ATPrePo - AlgoTrig with prebuffer and postbuffer. MTPrePo - Manual trig with prebuffer and postbuffer. CRAM - Continuous to RAM, no buffers. Extracted from ADTF-file or marked manually. Set by PEX, from adtf file."
            ]
          ]
        },
        "cameraID": {
          "type": [
            "Optional",
            "String"
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "CameraID of the camera used to record the sequence. Set by PEX, from adtf file."
            ]
          ]
        },
        "cameraSensorTemperatureMin": {
          "type": [
            "Optional",
            "Double"
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "Min temperature for camera. Set by PEX, from can."
            ]
          ]
        },
        "cameraSensorTemperatureMean": {
          "type": [
            "Optional",
            "Double"
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "Mean temperature for camera. Set by PEX, from can."
            ]
          ]
        },
        "cameraSensorTemperatureMax": {
          "type": [
            "Optional",
            "Double"
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "Max temperature for camera. Set by PEX, from can."
            ]
          ]
        },
        "softwareVersion": {
          "type": [
            "Optional",
            "String"
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "Software version for the recording. Set by PEX, from adtf file."
            ]
          ]
        },
        "hardwareVersion": {
          "type": [
            "Optional",
            "String"
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "Hardware version for the recording. Set by PEX, from adtf file."
            ]
          ]
        },
        "pitchAngleMin": {
          "type": [
            "Optional",
            "Double"
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "Min pitch angle. Set by PEX, from can."
            ]
          ]
        },
        "pitchAngleMax": {
          "type": [
            "Optional",
            "Double"
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "Max pitch angle. Set by PEX, from can."
            ]
          ]
        },
        "rollAngleMin": {
          "type": [
            "Optional",
            "Double"
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "Min roll angle. Set by PEX, from can."
            ]
          ]
        },
        "rollAngleMax": {
          "type": [
            "Optional",
            "Double"
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "Max roll angle. Set by PEX, from can."
            ]
          ]
        },
        "diskID": {
          "type": [
            "Optional",
            "Int"
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "Integer value to keep track of used disk for data collection. Set by Pex."
            ]
          ]
        },
        "navigationSystem": {
          "type": [
            "Optional",
            [
              "Enum",
              "on",
              "off"
            ]
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "Whether the navigation routing was enabled during drive (or not)."
            ]
          ]
        },
        "cameraType": {
          "type": [
            "Optional",
            [
              "Enum",
              "RGGB",
              "RCCC"
            ]
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "Which camera type that has been used when recording."
            ]
          ]
        },
        "driverName": {
          "type": [
            "Optional",
            "String"
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "The driver who has recorded the sequence."
            ]
          ]
        },
        "currentHorizon": {
          "type": [
            "Optional",
            "Int"
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "The horizon in the first frame. Set by labeller."
            ]
          ]
        },
        "calibratedHorizon": {
          "type": [
            "Optional",
            "Int"
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "The best calibrated horizon that is possible in the sequence. Set by labeller."
            ]
          ]
        },
        "cameraAssembly": {
          "type": [
            "Optional",
            [
              "Enum",
              "RVFB",
              "MVS1",
              "MVS2",
              "SVS1",
              "SVS2"
            ]
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "Type of sensor that have been used for the recording. Set by PEX, from adtf file."
            ]
          ]
        },
        "systemRelease": {
          "type": [
            "Optional",
            "String"
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "Which system release has been used for recording data."
            ]
          ]
        },
        "gpsType": {
          "type": [
            "Optional",
            [
              "Enum",
              "internal",
              "external"
            ]
          ],
          "annotations": [
            [
              "description",
              "Which type of gps was used to read location."
            ]
          ]
        },
        "navigationSystemVersion": {
          "type": "String",
          "annotations": [
            [
              "description",
              "Version of navigation system."
            ]
          ]
        },
        "bobFirmwareVersion": {
          "type": [
            "Optional",
            "String"
          ],
          "annotations": [
            [
              "description",
              "Firmware version of  BoB during data collection. Set by PEX."
            ]
          ]
        },
        "bobHardwareVersion": {
          "type": [
            "Optional",
            "String"
          ],
          "annotations": [
            [
              "description",
              "Hardware version of  BoB during data collection. Set by PEX."
            ]
          ]
        },
        "collectionComputerId": {
          "type": [
            "Optional",
            "String"
          ],
          "annotations": [
            [
              "description",
              "Computer ID used during data collection. Set by PEX."
            ]
          ]
        },
        "collectionToolVersion": {
          "type": [
            "Optional",
            "String"
          ],
          "annotations": [
            [
              "description",
              "Software version of  data collection tool. Set by PEX."
            ]
          ]
        },
        "dgpsAvailable": {
          "type": [
            "Optional",
            "Bool"
          ],
          "annotations": [
            [
              "description",
              "Set if DGPS is available during data collection. Set by PEX."
            ]
          ]
        },
        "externalGpsAvailable": {
          "type": [
            "Optional",
            "Bool"
          ],
          "annotations": [
            [
              "description",
              "Set if external GPS is available during data collection. Set by PEX."
            ]
          ]
        },
        "lidarAvailable": {
          "type": [
            "Optional",
            "Bool"
          ],
          "annotations": [
            [
              "description",
              "Set if LIDAR system is available during data collection. Set by PEX."
            ]
          ]
        },
        "naviAvailable": {
          "type": [
            "Optional",
            "Bool"
          ],
          "annotations": [
            [
              "description",
              "Set if NAVI system is available during data collection. Set by PEX."
            ]
          ]
        },
        "radarAvailable": {
          "type": [
            "Optional",
            "Bool"
          ],
          "annotations": [
            [
              "description",
              "Set if radar system is available during data collection. Set by PEX."
            ]
          ]
        },
        "DGPSmodel": {
          "type": [
            "Optional",
            [
              "Enum",
              "ABDRobot",
              "RaceLogic",
              "Oxford",
              "Novotel"
            ]
          ]
        },
        "lidarType": {
          "type": [
            "Set",
            [
              "Enum",
              "Lane",
              "OD"
            ]
          ]
        }
      }
    },
    "vimd": {
      "fieldOrder": [
        "horizontalDrivenCurvatureMaxLeft",
        "horizontalDrivenCurvatureMaxRight",
        "horizontalDrivenCurvatureRadius",
        "verticalDrivenCurvatureMin",
        "sCurvature",
        "verticalDrivenCurvatureMax",
        "wipers",
        "windshieldWasher",
        "minVelocity",
        "maxVelocity",
        "meanVelocity",
        "minYawRate",
        "maxYawRate",
        "meanYawRate",
        "minAcceleration",
        "maxAcceleration",
        "meanAcceleration",
        "vehicle",
        "drivenDistance",
        "highBeamOn",
        "longitudinalAccelerationAverage",
        "longitudinalAccelerationMin",
        "longitudinalAccelerationMax",
        "lateralAccelerationAverage",
        "lateralAccelerationMin",
        "lateralAccelerationMax",
        "egoVehicleBeamType",
        "egoVehicleWindshieldType",
        "meanPitchRate",
        "meanRollRate"
      ],
      "annotations": [
        [
          "FileInfoCategory",
          "vehicleInformationMetaData"
        ],
        [
          "SignedWith",
          "mdms"
        ]
      ],
      "fields": {
        "horizontalDrivenCurvatureMaxLeft": {
          "type": [
            "Optional",
            "Double"
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "Maximum driven horizontal curvature of left curve per video. (curvature of ego vehicle). Set by PEX, from can. vel/yawrate"
            ]
          ]
        },
        "horizontalDrivenCurvatureMaxRight": {
          "type": [
            "Optional",
            "Double"
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "Maximum driven horizontal curvature of right curve per video. (curvature of ego vehicle). Set by PEX, from can. vel/yawrate"
            ]
          ]
        },
        "horizontalDrivenCurvatureRadius": {
          "type": [
            "Set",
            [
              "Enum",
              "75-150",
              "150-250",
              "250-3000",
              "straight"
            ]
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "horizontal driven curvature radius. Several can be selected, separated with ';'. Set by PEX, from can. vel/yawrate"
            ]
          ]
        },
        "verticalDrivenCurvatureMin": {
          "type": [
            "Optional",
            "Double"
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "Minimal driven curvature in video (data from LANE gyro). Set by PEX, from can. if available"
            ]
          ]
        },
        "sCurvature": {
          "type": [
            "Optional",
            "Bool"
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "If there are a sCurvature in the sequence. Set by can. Set by PEX, from can. vel/yawrate. definition from Hella."
            ]
          ]
        },
        "verticalDrivenCurvatureMax": {
          "type": [
            "Optional",
            "Double"
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "Maximum driven curvature in video (data from LANE gyro). Set by PEX, from can. if available"
            ]
          ]
        },
        "wipers": {
          "type": [
            "Set",
            [
              "Enum",
              "off",
              "low",
              "medium",
              "high"
            ]
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "If the wipers are on and visible in sequence. Set by PEX, from can."
            ]
          ]
        },
        "windshieldWasher": {
          "type": [
            "Optional",
            "Bool"
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "If the windshield washer was activated at least once during sequence. Set by PEX, from can."
            ]
          ]
        },
        "minVelocity": {
          "type": [
            "Optional",
            "Double"
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "Min velocity in the sequence. Set by PEX, from can."
            ]
          ]
        },
        "maxVelocity": {
          "type": [
            "Optional",
            "Double"
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "Max velocity in the sequence. Set by PEX, from can."
            ]
          ]
        },
        "meanVelocity": {
          "type": [
            "Optional",
            "Double"
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "Mean velocity in the sequence. Set by PEX, from can."
            ]
          ]
        },
        "minYawRate": {
          "type": [
            "Optional",
            "Double"
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "Min yaw rate in the sequence. Set by PEX, from can."
            ]
          ]
        },
        "maxYawRate": {
          "type": [
            "Optional",
            "Double"
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "Max yaw rate in the sequence. Set by PEX, from can."
            ]
          ]
        },
        "meanYawRate": {
          "type": [
            "Optional",
            "Double"
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "Mean yaw rate in the sequence. Set by PEX, from can."
            ]
          ]
        },
        "minAcceleration": {
          "type": [
            "Optional",
            "Double"
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "Min acceleration in the sequence. Set by PEX, from can."
            ]
          ]
        },
        "maxAcceleration": {
          "type": [
            "Optional",
            "Double"
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "Max acceleration in the sequence. Set by PEX, from can."
            ]
          ]
        },
        "meanAcceleration": {
          "type": [
            "Optional",
            "Double"
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "Mean acceleration in the sequence. Set by PEX, from can."
            ]
          ]
        },
        "vehicle": {
          "type": [
            "Optional",
            "String"
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "Which vehicle that has been used for collecting the data. Set by driver. Set by PEX, from json."
            ]
          ]
        },
        "drivenDistance": {
          "type": [
            "Optional",
            "Double"
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "The distance driven by ego vehicle in sequence. Unit km. Set by PEX, mean velocity * video length."
            ]
          ]
        },
        "highBeamOn": {
          "type": [
            "Optional",
            "Bool"
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "Specifies if the high beam is on. Set by PEX, from can."
            ]
          ]
        },
        "longitudinalAccelerationMin": {
          "type": [
            "Optional",
            "Double"
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "Min longitudinal acceleration. Set by PEX, from can."
            ]
          ]
        },
        "longitudinalAccelerationMax": {
          "type": [
            "Optional",
            "Double"
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "Max longitudinal acceleration. Set by PEX, from can."
            ]
          ]
        },
        "lateralAccelerationMin": {
          "type": [
            "Optional",
            "Double"
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "Min lateral acceleration. Set by PEX, from can."
            ]
          ]
        },
        "lateralAccelerationMax": {
          "type": [
            "Optional",
            "Double"
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "Max lateral acceleration. Set by PEX, from can."
            ]
          ]
        },
        "egoVehicleBeamType": {
          "type": [
            "Optional",
            [
              "Enum",
              "halogen",
              "halogenAFS",
              "xenon",
              "bi-xenon",
              "LED",
              "LEDMatrix",
              "14PxlLED",
              "84PxlLED",
              "84PxlLedHrhb",
              "LEDHd",
              "StaticLED",
              "TBD"
            ]
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "Beam type of the vehicle."
            ]
          ]
        },
        "egoVehicleWindshieldType": {
          "type": [
            "Optional",
            [
              "Enum",
              "green",
              "clear",
              "IRR",
              "TBD"
            ]
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "Windshield type of the vehicle."
            ]
          ]
        },
        "lateralAccelerationAverage": {
          "type": [
            "Optional",
            "Double"
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "Average lateral acceleration. Set by PEX, from can."
            ]
          ]
        },
        "longitudinalAccelerationAverage": {
          "type": [
            "Optional",
            "Double"
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "Average longitudinal acceleration. Set by PEX, from can."
            ]
          ]
        },
        "meanPitchRate": {
          "type": [
            "Optional",
            "Double"
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "Mean pitch rate in the sequence. Set by PEX, from can."
            ]
          ]
        },
        "meanRollRate": {
          "type": [
            "Optional",
            "Double"
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "Mean roll rate in the sequence. Set by PEX, from can."
            ]
          ]
        },
        "vin": {
          "type": [
            "Optional",
            "String"
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "Vehicle ID"
            ]
          ]
        },
        "vehicleHeadlightID": {
          "type": [
            "Optional",
            "String"
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              ""
            ]
          ]
        },
        "vehicleHeadlinghtsType": {
          "type": [
            "Optional",
            "String"
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              ""
            ]
          ]
        },
        "vehicleWindshieldType": {
          "type": [
            "Optional",
            "String"
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              ""
            ]
          ]
        },
        "windshieldExtras": {
          "type": [
            "Optional",
            "String"
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              ""
            ]
          ]
        },
        "vehiclePlatform": {
          "type": [
            "Optional",
            [
              "Enum",
              "w213",
              "w205",
              "w222"
            ]
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              ""
            ]
          ]
        }
      }
    },
    "fmd": {
      "fieldOrder": [
        "sourceFile",
        "backupLocation",
        "damagedFiles",
        "numberOfFrames",
        "streamNames",
        "labelSelectable",
        "comments",
        "purpose",
        "oldPurpose",
        "dataSet",
        "TSAdataSet",
        "LDdataset",
        "LSRdataset",
        "ODdataset",
        "TLRdataset",
        "splitStartSequenceName",
        "unreadableFiles",
        "relatedIssueNumber",
        "tripId",
        "pexVersion",
        "naviReconstructed",
        "LDdatabaseUseCase",
        "ODdatabaseUseCase",
        "HBAdatabaseUseCase",
        "TSAdatabaseUseCase",
        "sentStatusHella",
        "sentDateHella",
        "sentStatusVisage",
        "sentDateVisage"
      ],
      "annotations": [
        [
          "FileInfoCategory",
          "fileMetaData"
        ],
        [
          "SignedWith",
          "mdms"
        ]
      ],
      "fields": {
        "sourceFile": {
          "type": [
            "Optional",
            "String"
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "The file from which the fileinfo file was generated."
            ]
          ]
        },
        "backupLocation": {
          "type": [
            "Optional",
            "String"
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "Disk ID. Set by labeller."
            ]
          ]
        },
        "damagedFiles": {
          "type": [
            "Array",
            "String"
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "If the file is damaged. Ex. corrupt can; incomplete frames. Several can be selected, separated with ';' Set by can/labeller."
            ]
          ]
        },
        "numberOfFrames": {
          "type": [
            "Optional",
            "UInt"
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "The number of frames in the sequence. Defined as the number of full frames ,from video 1, 2, 3, 4] starting with Video 1. Set by PEX, from adtf file."
            ]
          ]
        },
        "streamNames": {
          "type": [
            "Optional",
            [
              "Array",
              "String"
            ]
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "Specify streams in sequence. Several can be selected, separated with ';' Ex. Video1;Video2;Video3;Video4. Set by PEX, available in ADTF file."
            ]
          ]
        },
        "labelSelectable": {
          "type": [
            "Optional",
            "Bool"
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "If the sequence is selectable for labeling. Automatically."
            ]
          ]
        },
        "comments": {
          "type": [
            "Optional",
            "String"
          ],
          "annotations": [
            [
              "description",
              "Any comments of the sequence. Set by labeller."
            ]
          ]
        },
        "purpose": {
          "type": [
            "Set",
            [
              "Enum",
              "streamingDB",
              "useCaseDB",
              "testCaseDB"
            ]
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "What the recorded data will be used for. Set by labeller."
            ]
          ]
        },
        "oldPurpose": {
          "type": [
            "Array",
            "String"
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "The purpose of the drive. Set by labeller."
            ]
          ]
        },
        "dataSet": {
          "type": [
            "Optional",
            [
              "Enum",
              "development",
              "KPI"
            ]
          ],
          "annotations": [
            [
              "description",
              "Which data set the sequence is recorded for."
            ]
          ]
        },
        "TSAdataSet": {
          "type": [
            "Optional",
            [
              "Enum",
              "development",
              "KPI"
            ]
          ],
          "annotations": [
            [
              "description",
              "Which TSA data set the sequence is recorded for."
            ]
          ]
        },
        "LDdataset": {
          "type": [
            "Optional",
            [
              "Enum",
              "development",
              "KPI"
            ]
          ],
          "annotations": [
            [
              "description",
              "Which LD data set the sequence is recorded for."
            ]
          ]
        },
        "LSRdataset": {
          "type": [
            "Optional",
            [
              "Enum",
              "development",
              "KPI"
            ]
          ],
          "annotations": [
            [
              "description",
              "Which LSR data set the sequence is recorded for."
            ]
          ]
        },
        "ODdataset": {
          "type": [
            "Optional",
            [
              "Enum",
              "development",
              "KPI"
            ]
          ],
          "annotations": [
            [
              "description",
              "Which OD data set the sequence is recorded for."
            ]
          ]
        },
        "TLRdataset": {
          "type": [
            "Optional",
            [
              "Enum",
              "development",
              "KPI"
            ]
          ],
          "annotations": [
            [
              "description",
              "Which TLR data set the sequence is recorded for."
            ]
          ]
        },
        "splitStartSequenceName": {
          "type": [
            "Optional",
            "String"
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "The name of the first sequence in case of files recorded using split function. Automatic extraction of info from adtf header or other. Set by PEX, from adtf file."
            ]
          ]
        },
        "unreadableFiles": {
          "type": [
            "Optional",
            [
              "Set",
              [
                "Enum",
                "csv",
                "dat",
                "json"
              ]
            ]
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "Set which files (dat, json, csv) that cannot be read by Pex. Set by Pex."
            ]
          ]
        },
        "relatedIssueNumber": {
          "type": [
            "Optional",
            "String"
          ],
          "annotations": [
            [
              "description",
              "Issue number for corresponding collection."
            ]
          ]
        },
        "tripId": {
          "type": [
            "Optional",
            "String"
          ],
          "annotations": [
            [
              "description",
              "Corresponding trip ID for the collected file."
            ]
          ]
        },
        "pexVersion": {
          "type": [
            "Optional",
            "String"
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "The version of Pex tool this file was generated. Set by Pex"
            ]
          ]
        },
        "naviReconstructed": {
          "type": [
            "Optional",
            "Bool"
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "Indicates if the navi was reconstructed or not. Set by Pex"
            ]
          ]
        },
        "LDdatabaseUseCase": {
          "type": [
            "Optional",
            [
              "Enum",
              "DCM-129",
              "DCM-939",
              "DCM-1128",
              "DCM-1587"
            ]
          ],
          "annotations": [
            [
              "description",
              "Specify for what database use case was this file labeled."
            ]
          ]
        },
        "ODdatabaseUseCase": {
          "type": [
            "Optional",
            [
              "Enum",
              "DCM-475",
              "DCM-476",
              "DCM-496",
              "DCM-497",
              "DCM-498",
              "DCM-499",
              "DCM-500",
              "DCM-501",
              "DCM-504",
              "DCM-505",
              "DCM-508",
              "DCM-509",
              "DCM-510",
              "DCM-511",
              "DCM-512",
              "DCM-513",
              "DCM-514",
              "DCM-515",
              "DCM-518",
              "DCM-519",
              "DCM-524",
              "DCM-525",
              "DCM-526",
              "DCM-527",
              "DCM-528",
              "DCM-529",
              "DCM-530",
              "DCM-531",
              "DCM-532",
              "DCM-533",
              "DCM-534",
              "DCM-536",
              "DCM-537",
              "DCM-538",
              "DCM-539",
              "DCM-540",
              "DCM-541",
              "DCM-542",
              "DCM-543",
              "DCM-544",
              "DCM-545",
              "DCM-546",
              "DCM-547",
              "DCM-548",
              "DCM-549",
              "DCM-554",
              "DCM-555",
              "DCM-556",
              "DCM-557",
              "DCM-558",
              "DCM-559",
              "DCM-560",
              "DCM-561",
              "DCM-562",
              "DCM-563",
              "DCM-564",
              "DCM-565",
              "DCM-566",
              "DCM-567",
              "DCM-568",
              "DCM-569",
              "DCM-570",
              "DCM-571",
              "DCM-572",
              "DCM-573",
              "DCM-574",
              "DCM-575",
              "DCM-576",
              "DCM-577",
              "DCM-579",
              "DCM-580",
              "DCM-581",
              "DCM-582",
              "DCM-583",
              "DCM-584",
              "DCM-585",
              "DCM-586",
              "DCM-587",
              "DCM-588",
              "DCM-589",
              "DCM-590",
              "DCM-591",
              "DCM-592",
              "DCM-593"
            ]
          ],
          "annotations": [
            [
              "description",
              "Specify for what database use case was this file labeled."
            ]
          ]
        },
        "HBAdatabaseUseCase": {
          "type": [
            "Optional",
            [
              "Enum",
              "DCM-52",
              "DCM-861",
              "DCM-863",
              "DCM-864",
              "DCM-1102",
              "DCM-1103",
              "DCM-1104",
              "DCM-1105",
              "DCM-1106",
              "DCM-1107",
              "DCM-1109",
              "DCM-1110",
              "DCM-1111",
              "DCM-1112",
              "DCM-1113",
              "DCM-1708",
              "DCM-1861",
              "DCM-1862",
              "DCM-1863",
              "DCM-1864",
              "ALV_MPC5_LSR_UsecaseDb_1",
              "ALV_MPC5_LSR_UsecaseDb_3",
              "ALV_MPC5_LSR_UsecaseDb_5",
              "ALV_MPC5_LSR_UsecaseDb_6",
              "ALV_MPC5_LSR_UsecaseDb_7",
              "ALV_MPC5_LSR_UsecaseDb_8",
              "ALV_MPC5_LSR_UsecaseDb_9",
              "ALV_MPC5_LSR_UsecaseDb_11",
              "ALV_MPC5_LSR_UsecaseDb_12",
              "ALV_MPC5_LSR_UsecaseDb_13",
              "ALV_MPC5_LSR_UsecaseDb_14",
              "ALV_MPC5_LSR_UsecaseDb_15",
              "ALV_MPC5_LSR_UsecaseDb_16",
              "ALV_MPC5_LSR_UsecaseDb_18",
              "ALV_MPC5_LSR_UsecaseDb_19",
              "ALV_MPC5_LSR_UsecaseDb_21",
              "ALV_MPC5_LSR_UsecaseDb_22",
              "ALV_MPC5_LSR_UsecaseDb_24",
              "ALV_MPC5_LSR_UsecaseDb_26",
              "ALV_MPC5_LSR_UsecaseDb_28",
              "ALV_MPC5_LSR_UsecaseDb_29",
              "ALV_MPC5_LSR_UsecaseDb_30",
              "ALV_MPC5_LSR_UsecaseDb_31",
              "ALV_MPC5_LSR_UsecaseDb_32",
              "ALV_MPC5_LSR_UsecaseDb_33",
              "ALV_MPC5_LSR_UsecaseDb_34",
              "ALV_MPC5_LSR_UsecaseDb_35",
              "ALV_MPC5_LSR_UsecaseDb_37",
              "ALV_MPC5_LSR_UsecaseDb_38",
              "ALV_MPC5_LSR_UsecaseDb_39",
              "ALV_MPC5_LSR_UsecaseDb_40",
              "ALV_MPC5_LSR_UsecaseDb_42",
              "ALV_MPC5_LSR_UsecaseDb_43",
              "ALV_MPC5_LSR_UsecaseDb_45",
              "ALV_MPC5_LSR_UsecaseDb_46",
              "ALV_MPC5_LSR_UsecaseDb_47",
              "ALV_MPC5_LSR_UsecaseDb_49",
              "ALV_MPC5_LSR_UsecaseDb_50",
              "ALV_MPC5_LSR_UsecaseDb_51",
              "ALV_MPC5_LSR_UsecaseDb_53",
              "ALV_MPC5_LSR_UsecaseDb_55",
              "ALV_MPC5_LSR_UsecaseDb_57",
              "ALV_MPC5_LSR_UsecaseDb_58",
              "ALV_MPC5_LSR_UsecaseDb_59",
              "ALV_MPC5_LSR_UsecaseDb_60",
              "ALV_MPC5_LSR_UsecaseDb_61",
              "ALV_MPC5_LSR_UsecaseDb_62",
              "ALV_MPC5_LSR_UsecaseDb_63",
              "ALV_MPC5_LSR_UsecaseDb_64",
              "ALV_MPC5_LSR_UsecaseDb_65",
              "ALV_MPC5_LSR_UsecaseDb_66",
              "ALV_MPC5_LSR_UsecaseDb_67",
              "ALV_MPC5_LSR_UsecaseDb_68",
              "ALV_MPC5_LSR_UsecaseDb_69",
              "ALV_MPC5_LSR_UsecaseDb_70",
              "ALV_MPC5_LSR_UsecaseDb_71",
              "ALV_MPC5_LSR_UsecaseDb_73",
              "ALV_MPC5_LSR_UsecaseDb_75",
              "ALV_MPC5_LSR_UsecaseDb_76",
              "ALV_MPC5_LSR_UsecaseDb_77",
              "ALV_MPC5_LSR_UsecaseDb_78",
              "ALV_MPC5_LSR_UsecaseDb_79",
              "ALV_MPC5_LSR_UsecaseDb_80",
              "ALV_MPC5_LSR_UsecaseDb_81",
              "ALV_MPC5_LSR_UsecaseDb_82",
              "ALV_MPC5_LSR_UsecaseDb_83",
              "ALV_MPC5_LSR_UsecaseDb_84",
              "ALV_MPC5_LSR_UsecaseDb_85",
              "ALV_MPC5_LSR_UsecaseDb_86",
              "ALV_MPC5_LSR_UsecaseDb_87",
              "ALV_MPC5_LSR_UsecaseDb_88",
              "ALV_MPC5_LSR_UsecaseDb_89",
              "ALV_MPC5_LSR_UsecaseDb_90",
              "ALV_MPC5_LSR_UsecaseDb_92",
              "ALV_MPC5_LSR_UsecaseDb_93",
              "ALV_MPC5_LSR_UsecaseDb_95",
              "ALV_MPC5_LSR_UsecaseDb_96",
              "ALV_MPC5_LSR_UsecaseDb_97",
              "ALV_MPC5_LSR_UsecaseDb_98",
              "ALV_MPC5_LSR_UsecaseDb_99",
              "ALV_MPC5_LSR_UsecaseDb_101",
              "ALV_MPC5_LSR_UsecaseDb_102",
              "ALV_MPC5_LSR_UsecaseDb_103",
              "ALV_MPC5_LSR_UsecaseDb_104",
              "ALV_MPC5_LSR_UsecaseDb_105",
              "ALV_MPC5_LSR_UsecaseDb_106",
              "ALV_MPC5_LSR_UsecaseDb_108",
              "ALV_MPC5_LSR_UsecaseDb_109",
              "ALV_MPC5_LSR_UsecaseDb_110",
              "ALV_MPC5_LSR_UsecaseDb_111",
              "ALV_MPC5_LSR_UsecaseDb_113",
              "ALV_MPC5_LSR_UsecaseDb_114",
              "ALV_MPC5_LSR_UsecaseDb_116",
              "ALV_MPC5_LSR_UsecaseDb_117",
              "ALV_MPC5_LSR_UsecaseDb_118",
              "ALV_MPC5_LSR_UsecaseDb_119",
              "ALV_MPC5_LSR_UsecaseDb_120"
            ]
          ],
          "annotations": [
            [
              "description",
              "Specify for what database use case was this file labeled."
            ]
          ]
        },
        "TSAdatabaseUseCase": {
          "type": [
            "Optional",
            [
              "Enum",
              "DCM-347",
              "DCM-348",
              "DCM-349",
              "DCM-350",
              "DCM-351",
              "DCM-352",
              "DCM-353",
              "DCM-354",
              "DCM-356",
              "DCM-357",
              "DCM-358",
              "DCM-359",
              "DCM-364",
              "DCM-365",
              "DCM-366",
              "DCM-367",
              "TSA_MPC5_UC_01",
              "TSA_MPC5_UC_02",
              "TSA_MPC5_UC_03",
              "TSA_MPC5_UC_04",
              "TSA_MPC5_UC_05",
              "TSA_MPC5_UC_06",
              "TSA_MPC5_UC_07",
              "TSA_MPC5_UC_08",
              "TSA_MPC5_UC_09",
              "TSA_MPC5_UC_10",
              "TSA_MPC5_UC_11",
              "TSA_MPC5_UC_12",
              "TSA_MPC5_UC_13",
              "TSA_MPC5_UC_14",
              "TSA_MPC5_UC_15",
              "TSA_MPC5_UC_16",
              "TSA_MPC5_UC_17",
              "TSA_MPC5_UC_18",
              "TSA_MPC5_UC_19",
              "TSA_MPC5_UC_20",
              "TSA_MPC5_UC_21",
              "TSA_MPC5_UC_22",
              "TSA_MPC5_UC_23",
              "TSA_MPC5_UC_24",
              "TSA_MPC5_UC_25",
              "TSA_MPC5_UC_26",
              "TSA_MPC5_UC_27",
              "TSA_MPC5_UC_28",
              "TSA_MPC5_UC_29",
              "TSA_MPC5_UC_30",
              "TSA_MPC5_UC_31",
              "TSA_MPC5_UC_32"
            ]
          ],
          "annotations": [
            [
              "description",
              "Specify for what database use case was this file labeled."
            ]
          ]
        },
        "sentStatusHella": {
          "type": [
            "Optional",
            [
              "Enum",
              "toBeSent",
              "sent"
            ]
          ],
          "annotations": [
            [
              "description",
              "Used for data exchange with Hella"
            ]
          ]
        },
        "sentDateHella": {
          "type": [
            "Optional",
            "String"
          ],
          "annotations": [
            [
              "description",
              "Used for data exchange with Hella"
            ]
          ]
        },
        "sentStatusVisage": {
          "type": [
            "Optional",
            [
              "Enum",
              "toBeSent",
              "sent"
            ]
          ],
          "annotations": [
            [
              "description",
              "Used for data exchange with Visage"
            ]
          ]
        },
        "sentDateVisage": {
          "type": [
            "Optional",
            "String"
          ],
          "annotations": [
            [
              "description",
              "Used for data exchange with Visage"
            ]
          ]
        },
        "distanceToTarget": {
          "type": [
            "Optional",
            [
              "Enum",
              "0m",
              "5m",
              "10m",
              "15m",
              "20m",
              "25m",
              "30m",
              "35m",
              "40m",
              "45m",
              "50m",
              "55m",
              "60m",
              "65m",
              "70m",
              "75m",
              "80m",
              "85m",
              "90m",
              "95m",
              "100m"
            ]
          ],
          "annotations": [
            [
              "description",
              "Specify the distance to target car.Set by the driver"
            ]
          ]
        },
        "egoSpeed": {
          "type": [
            "Optional",
            [
              "Enum",
              "5km/h",
              "10km/h",
              "15km/h",
              "20km/h",
              "25km/h",
              "30km/h",
              "35km/h",
              "40km/h",
              "45km/h",
              "50km/h",
              "55km/h",
              "60km/h",
              "65km/h",
              "70km/h",
              "75km/h",
              "80km/h"
            ]
          ],
          "annotations": [
            [
              "description",
              "Specify the ego speed of the car."
            ]
          ]
        },
        "team": {
          "type": [
            "Set",
            [
              "Enum",
              "dcm",
              "tsa/tsr",
              "lsr",
              "od",
              "ld"
            ]
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "sequence": {
          "type": [
            "Optional",
            [
              "Enum",
              "unset",
              "successful",
              "unSuccessful",
              "unknown"
            ]
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        }
      }
    },
    "emd": {
      "fieldOrder": [
        "countryCode",
        "gpsCoordinates",
        "recordingLocation",
        "recordingTime",
        "ambientTemperature",
        "countryStateCode",
        "timeOfDayAuto",
        "season",
        "rightHandedTraffic"
      ],
      "annotations": [
        [
          "FileInfoCategory",
          "environmentMetaData"
        ],
        [
          "SignedWith",
          "mdms"
        ]
      ],
      "fields": {
        "countryCode": {
          "type": [
            "Optional",
            "String"
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "Which country the data has been recorded in. Set by driver. Set by PEX, from dgps position on can andgoogle maps."
            ]
          ]
        },
        "gpsCoordinates": {
          "type": [
            "Optional",
            "String"
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "The gps position where recording started. Set by PEX, from can."
            ]
          ]
        },
        "recordingLocation": {
          "type": [
            "Optional",
            "String"
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "The location for the drive. Set by PEX from GPS coordinates."
            ]
          ]
        },
        "recordingTime": {
          "type": [
            "Optional",
            "Time"
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "The time for the drive. Set by PEX, from filename."
            ]
          ]
        },
        "ambientTemperature": {
          "type": [
            "Optional",
            "Int"
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "The ambient temperature. Unit degrees celcius. Set by PEX, available from can."
            ]
          ]
        },
        "countryStateCode": {
          "type": [
            "Optional",
            "String"
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "The state code for the state in which the sequence was recorded."
            ]
          ]
        },
        "timeOfDayAuto": {
          "type": [
            "Set",
            [
              "Enum",
              "night",
              "day",
              "duskDawn"
            ]
          ],
          "annotations": [
            [
              "description",
              "The time of the day. This field contains the value that is generated with PEX, from can and json."
            ]
          ]
        },
        "season": {
          "type": [
            "Optional",
            [
              "Enum",
              "spring",
              "summer",
              "autumn",
              "winter"
            ]
          ],
          "annotations": [
            [
              "description",
              "Which season it was where and when the sequence was recorded."
            ]
          ]
        },
        "rightHandedTraffic": {
          "type": [
            "Optional",
            "Bool"
          ],
          "annotations": [
            [
              "description",
              "Set if right handed traffic or not. Set by PEX."
            ]
          ]
        }
      }
    },
    "vdmd": {
      "fieldOrder": [
        "numPrecedingVehicles",
        "numOncomingVehicles",
        "specialObjectTypes",
        "strangePosition"
      ],
      "annotations": [
        [
          "FileInfoCategory",
          "vehicleDetectionMetaData"
        ],
        [
          "SignedWith",
          "mdms"
        ]
      ],
      "fields": {
        "numPrecedingVehicles": {
          "type": [
            "Optional",
            [
              "BInt",
              0,
              10
            ]
          ],
          "annotations": [
            [
              "Number of preceding vehicles in entire sequence. Set by labeller."
            ]
          ]
        },
        "numOncomingVehicles": {
          "type": [
            "Optional",
            [
              "BInt",
              0,
              10
            ]
          ],
          "annotations": [
            [
              "Number of oncoming vehicles in entire sequence. Set by labeller."
            ]
          ]
        },
        "specialObjectTypes": {
          "type": [
            "Optional",
            [
              "Enum",
              "None",
              "balloonCar"
            ]
          ],
          "annotations": [
            [
              "Balloon Car object used for development"
            ]
          ]
        },
        "strangePosition": {
          "type": [
            "Optional",
            "Bool"
          ],
          "annotations": [
            [
              "Defines if a marked object has a strage pose"
            ]
          ]
        }
      },
      "fieldValues": {
        "numPrecedingVehicles": 0,
        "numOncomingVehicles": 0
      }
    },
    "dgps": {
      "extends": [
        "FrameMarking"
      ],
      "fieldOrder": [
        "refId",
        "frameNumber",
        "streamName",
        "top",
        "bottom",
        "left",
        "right",
        "x",
        "y",
        "xVel",
        "yVel",
        "tti",
        "separation",
        "relVel",
        "separationAngle",
        "quality"
      ],
      "annotations": [
        [
          "FileInfoCategory",
          "dgpsMarkings"
        ],
        [
          "SignedWith",
          "sms"
        ]
      ],
      "fields": {
        "top": {
          "type": "Int",
          "annotations": [
            [
              "required"
            ],
            [
              "description",
              "top coordinate for the target"
            ]
          ]
        },
        "bottom": {
          "type": "Int",
          "annotations": [
            [
              "required"
            ],
            [
              "description",
              "bottom coordinate for the target"
            ]
          ]
        },
        "left": {
          "type": "Int",
          "annotations": [
            [
              "required"
            ],
            [
              "description",
              "left coordinate for the target"
            ]
          ]
        },
        "right": {
          "type": "Int",
          "annotations": [
            [
              "required"
            ],
            [
              "description",
              "right coordinate for the target"
            ]
          ]
        },
        "x": {
          "type": "Double",
          "annotations": [
            [
              "required"
            ],
            [
              "description",
              "longitudinal position for target. Message: VBOX_8, Signal: Long_range"
            ]
          ]
        },
        "y": {
          "type": "Double",
          "annotations": [
            [
              "required"
            ],
            [
              "description",
              "lateral position for target. Message: VBOX_8, Signal: Lat_range"
            ]
          ]
        },
        "xVel": {
          "type": "Double",
          "annotations": [
            [
              "required"
            ],
            [
              "description",
              "Longitudinal velocity for target. Message: VBOX_9, Signal: Long_spd"
            ]
          ]
        },
        "yVel": {
          "type": "Double",
          "annotations": [
            [
              "required"
            ],
            [
              "description",
              "Lateral velocity for target. Message: VBOX_9, Signal: Lat_spd"
            ]
          ]
        },
        "tti": {
          "type": "Double",
          "annotations": [
            [
              "required"
            ],
            [
              "description",
              "Time to collision between host and target. Message: VBOX_12, Signal: Time2Collision"
            ]
          ]
        },
        "separation": {
          "type": "Double",
          "annotations": [
            [
              "required"
            ],
            [
              "description",
              "Separation between host and target. Message: VBOX_7, Signal: Separation"
            ]
          ]
        },
        "relVel": {
          "type": "Double",
          "annotations": [
            [
              "required"
            ],
            [
              "description",
              "Relative speed between host and target. Message: VBOX_7, Signal: Relative_Spd"
            ]
          ]
        },
        "separationAngle": {
          "type": "Double",
          "annotations": [
            [
              "required"
            ],
            [
              "description",
              "Separation angle between host and target. Message: VBOX_10, Signal: Sep_Angle"
            ]
          ]
        },
        "quality": {
          "type": "Int",
          "annotations": [
            [
              "required"
            ],
            [
              "description",
              "Quality of the dgps signal."
            ]
          ]
        }
      }
    },
    "EuroNcapMetadata": {
      "annotations": [
        [
          "FileInfoCategory",
          "EuroNcapMetadata"
        ]
      ],
      "fields": {
        "EgoLongitudinalVelocity": {
          "annotations": [
            [
              "Description",
              "Unit: km/h. Initial ego-vehicle longitudinal velocity."
            ]
          ],
          "type": "Double"
        },
        "EgoLongitudinalVelocityMaximum": {
          "annotations": [
            [
              "Description",
              "Unit: km/h. Approximated maximum ego-vehicle longitudinal velocity."
            ]
          ],
          "type": [
            "Optional",
            "Double"
          ]
        },
        "EgoLongitudinalVelocityMedian": {
          "annotations": [
            [
              "Description",
              "Unit: km/h. Approximated median ego-vehicle longitudinal velocity."
            ]
          ],
          "type": [
            "Optional",
            "Double"
          ]
        },
        "ScenarioCase": {
          "annotations": [
            [
              "Description",
              "Scenario case. Can be either of CCRs, CCRb, CCRm, CVNA-25, CVNA-75, CVFA, CVNC"
            ]
          ],
          "type": [
            "Enum",
            "NotSet",
            "Crossing_Car_0_5",
            "Crossing_Car_Other",
            "Crossing_Cyclist_0_5",
            "Crossing_Cyclist_Other",
            "CutIn_Car_Partial_Overlap_0_75",
            "CutIn_Car_Partial_Overlap_Other",
            "CVNA-25",
            "CVNA-75",
            "CVFA",
            "CVNC",
            "CVNA-Other",
            "CVFA-Other",
            "CVNC-Other",
            "HeadOn_Collision_Car_0_5",
            "HeadOn_Collision_Car_Other",
            "Oncoming_Car_Turning_into_ego_path",
            "Oncoming_Cyclist_Turning_into_ego_path",
            "RearEndAngular_Car_Stationary_0_75",
            "RearEndAngular_Car_Stationary_Other",
            "CCRs",
            "CCRb",
            "CCRm",
            "CCRs-Other",
            "CCRb-Other",
            "CCRm-Other",
            "RearEnd_Cyclist_0_75",
            "RearEnd_Cyclist_Other",
            "RearEnd_Moving_Car_0_5",
            "RearEnd_Moving_Car_Other",
            "TurningInto_Oncoming_Car_Lane",
            "TurningInto_Oncoming_Cyclist_Lane",
            "Walking_Alongside_Pedestrian_0_75",
            "Walking_Alongside_Pedestrian_Other",
            "CCRs100%overlap",
            "CCRm100%overlap",
            "CCRs75%overlapLeft",
            "CCRs75%overlapRight",
            "CCRm75%overlapLeft",
            "CCRm75%overlapRight",
            "CCRs50%overlapLeft",
            "CCRs50%overlapRight",
            "CCRm50%overlapLeft",
            "CCRm50%overlapRight",
            "PedNearside75%-3kph",
            "PedFarside",
            "PedNearside25%",
            "PedNearside75%",
            "PedLongitudinal75%",
            "PedLongitudinal25%",
            "CyclistNearside50%",
            "CyclistLongitudinal50%",
            "CyclistLongitudinal25%"
          ]
        },
        "TargetType": {
          "type": "String"
        },
        "TargetLongitudinalAcceleration": {
          "annotations": [
            [
              "Description",
              "Unit: m/s^2. Braking acceleration for CCRb cases. Can be either -2 m/s^2 or -6 m/s^2. 0 m/s^2 default."
            ]
          ],
          "type": "Double"
        },
        "TargetLongitudinalPosition": {
          "annotations": [
            [
              "Description",
              "Unit: m. Distance at target brake for CCRb scenarios. Can be 12 m or 40 m. 0 m default."
            ]
          ],
          "type": "Double"
        },
        "TargetLongitudinalVelocity": {
          "annotations": [
            [
              "Description",
              "Unit: km/h. Initial target longitudinal velocity CCRb scenarios. Target velocity for CCRm scenarios. Can be 20 km/h or 50 km/h. 0 km/h default."
            ]
          ],
          "type": "Double"
        },
        "TargetLateralVelocity": {
          "annotations": [
            [
              "Description",
              "Unit: km/h. Target longitudinal velocity for pedestrian cases. Can be either 5 km/h or 8 km/h. 0 km/h default."
            ]
          ],
          "type": "Double"
        },
        "UseCaseVallidity": {
          "type": "Bool"
        }
      }
    },
    "DBCMetadata": {
      "fields": {
        "CanChannel": {
          "type": "String"
        },
        "DBCFiles": {
          "type": [
            "Array",
            "String"
          ]
        }
      }
    },
    "pdmd": {
      "fieldOrder": [
        "child",
        "pedLocation",
        "numOfPedestrians",
        "numOfTwoWheelers",
        "pedestrianCrowd",
        "specialObjectTypes",
        "strangePosition"
      ],
      "annotations": [
        [
          "FileInfoCategory",
          "pedestrianDetectionMetaData"
        ],
        [
          "SignedWith",
          "mdms"
        ]
      ],
      "fields": {
        "child": {
          "type": [
            "Optional",
            "Bool"
          ],
          "annotations": [
            [
              "description",
              "True if there are any children in the sequence. Set by labeller."
            ]
          ]
        },
        "pedLocation": {
          "type": [
            "Optional",
            [
              "Set",
              [
                "Enum",
                "pedOnRoad",
                "pedSideOfRoad",
                "pedCrossing"
              ]
            ]
          ],
          "annotations": [
            [
              "description",
              "If there are any pedestrians on the road. Several can be selected, separated with ';'. Set by labeller."
            ]
          ]
        },
        "numOfTwoWheelers": {
          "type": [
            "Optional",
            [
              "BInt",
              0,
              10
            ]
          ],
          "annotations": [
            [
              "description",
              "Number of pedestrian objects in entire sequence. Set by labeller."
            ]
          ]
        },
        "numOfPedestrians": {
          "type": [
            "Optional",
            [
              "BInt",
              0,
              10
            ]
          ],
          "annotations": [
            [
              "description",
              "Number of pedestrian objects in entire sequence. Set by labeller."
            ]
          ]
        },
        "pedestrianCrowd": {
          "type": [
            "Optional",
            "Bool"
          ],
          "annotations": [
            [
              "description",
              "If there are more than 5 pedestrians in a single frame. Set by labeller."
            ]
          ]
        },
        "specialObjectTypes": {
          "type": [
            "Optional",
            [
              "Set",
              [
                "Enum",
                "None",
                "dummyChild",
                "dummyAdult"
              ]
            ]
          ],
          "annotations": [
            [
              "description",
              "If there is a dummy child or a dummy adult in a frame."
            ]
          ]
        },
        "strangePosition": {
          "type": [
            "Optional",
            "Bool"
          ],
          "annotations": [
            [
              "description",
              "Strange pose of a person"
            ]
          ]
        }
      },
      "fieldValues": {
        "numOfTwoWheelers": 0,
        "numOfPedestrians": 0,
        "child": false,
        "pedestrianCrowd": false
      }
    },
    "ms": {
      "fieldOrder": [
        "signedClass",
        "signedField",
        "user",
        "time",
        "markingInstruction",
        "markingInstructionSet",
        "markingToolVersion"
      ],
      "annotations": [
        [
          "abstract"
        ],
        [
          "FileInfoCategory",
          "markingSignature"
        ]
      ],
      "fields": {
        "signedClass": {
          "type": "String",
          "annotations": [
            [
              "required"
            ],
            [
              "description",
              "Which class was been signed."
            ],
            [
              "YamAutoValue",
              "signedClass"
            ]
          ]
        },
        "signedField": {
          "type": [
            "Optional",
            "String"
          ],
          "annotations": [
            [
              "description",
              "Which field has been signed."
            ],
            [
              "YamAutoValue",
              "signedField"
            ]
          ]
        },
        "user": {
          "type": "String",
          "annotations": [
            [
              "required"
            ],
            [
              "description",
              "Which user has signed, this is the windows user logged in on the machine."
            ],
            [
              "YamAutoValue",
              "user"
            ],
            [
              "NotEditable"
            ]
          ]
        },
        "time": {
          "type": "Time",
          "annotations": [
            [
              "required"
            ],
            [
              "description",
              "The time at which the signature is made."
            ],
            [
              "YamAutoValue",
              "time"
            ],
            [
              "NotEditable"
            ]
          ]
        },
        "markingInstruction": {
          "type": "String",
          "annotations": [
            [
              "required"
            ],
            [
              "description",
              "Which marking instruction was followed."
            ],
            [
              "YamAutoValue",
              "configValue",
              "markingInstruction"
            ]
          ]
        },
        "markingInstructionSet": {
          "type": [
            "Optional",
            "String"
          ],
          "annotations": [
            [
              "description",
              "Which marking instruction set was followed."
            ],
            [
              "YamAutoValue",
              "markingInstructionSet"
            ],
            [
              "NotEditable"
            ]
          ]
        },
        "markingToolVersion": {
          "type": "String",
          "annotations": [
            [
              "required"
            ],
            [
              "description",
              "Which version of Yam is used."
            ],
            [
              "YamAutoValue",
              "yamVersion"
            ],
            [
              "NotEditable"
            ]
          ]
        }
      }
    },
    "mdms": {
      "extends": "ms",
      "fieldOrder": [
        "signedClass",
        "signedField",
        "signatureLevel",
        "user",
        "time",
        "markingInstruction",
        "markingInstructionSet",
        "markingToolVersion"
      ],
      "annotations": [
        [
          "FileInfoCategory",
          "metaDataMarkingSignature"
        ],
        [
          "description",
          "Meta data marking signatures."
        ]
      ],
      "fields": {
        "signatureLevel": {
          "type": [
            "Enum",
            "marked"
          ],
          "annotations": [
            [
              "required"
            ],
            [
              "description",
              "On which level the class is signed, classes are first marked and then possibly checked."
            ],
            [
              "YamAutoValue",
              "signatureLevel"
            ],
            [
              "NotEditable"
            ]
          ]
        }
      }
    },
    "sms": {
      "extends": "ms",
      "fieldOrder": [
        "signedClass",
        "signedField",
        "signatureLevel",
        "user",
        "time",
        "markingInstruction",
        "markingInstructionSet",
        "markingToolVersion",
        "streamName",
        "startFrame",
        "endFrame"
      ],
      "annotations": [
        [
          "FileInfoCategory",
          "streamMarkingSignature"
        ],
        [
          "description",
          "Marking signature for streams."
        ]
      ],
      "fields": {
        "streamName": {
          "type": "String",
          "annotations": [
            [
              "required"
            ],
            [
              "description",
              "Which stream name was marked."
            ],
            [
              "YamAutoValue",
              "streamName"
            ]
          ]
        },
        "startFrame": {
          "type": "Int",
          "annotations": [
            [
              "required"
            ],
            [
              "description",
              "The first marked frame"
            ],
            [
              "YamAutoValue",
              "startFrame"
            ]
          ]
        },
        "endFrame": {
          "type": "Int",
          "annotations": [
            [
              "required"
            ],
            [
              "description",
              "The last marked frame"
            ],
            [
              "YamAutoValue",
              "endFrame"
            ]
          ]
        },
        "signatureLevel": {
          "type": [
            "Enum",
            "marked",
            "checked"
          ],
          "annotations": [
            [
              "required"
            ],
            [
              "description",
              "On which level the class is signed, classes are first marked and then possibly checked."
            ],
            [
              "YamAutoValue",
              "signatureLevel"
            ],
            [
              "NotEditable"
            ]
          ]
        }
      }
    },
    "lsred": {
      "fieldOrder": [
        "frameNr",
        "streetLamp",
        "wiperSetting",
        "egoVehicleBeam",
        "egoVehicleBeamSetting"
      ],
      "annotations": [
        [
          "metaDataRef",
          "vdmd"
        ],
        [
          "SignedWith",
          "sms"
        ],
        [
          "FileInfoCategory",
          "lightSourceRecognitionEventData"
        ]
      ],
      "fields": {
        "frameNr": {
          "type": "Int",
          "annotations": [
            [
              "description",
              "The frame number the meta data describes."
            ],
            [
              "NotEditable"
            ]
          ]
        },
        "streetLamp": {
          "type": [
            "Optional",
            [
              "Enum",
              "2nd",
              "3rd",
              "4th"
            ]
          ],
          "annotations": [
            [
              "description",
              "If there is a street lamp in the frame, which is not the first street lamp."
            ]
          ]
        },
        "wiperSetting": {
          "type": [
            "Optional",
            [
              "Enum",
              "Rainsensor",
              "Manual",
              "TBD"
            ]
          ],
          "annotations": [
            [
              "description",
              "The setting of the wiper in the frame."
            ],
            [
              "NotEditable"
            ]
          ]
        },
        "egoVehicleBeam": {
          "type": [
            "Optional",
            [
              "Enum",
              "frontFogLight",
              "TBD",
              "headlightsOff",
              "daylightRunningLightsOn",
              "lowBeamOn",
              "highBeamOn",
              "adaptiveFrontLightsLeftOn",
              "adaptiveFrontLightsRightOn",
              "glareFreeHighBeamOn"
            ]
          ],
          "annotations": [
            [
              "description",
              "The set of vehicle beam properties in the frame."
            ],
            [
              "NotEditable"
            ]
          ]
        },
        "egoVehicleBeamSetting": {
          "type": [
            "Optional",
            [
              "Enum",
              "Manual",
              "GFHB(MDF)",
              "HighBeam"
            ]
          ],
          "annotations": [
            [
              "description",
              "The vehicle beam setting in the frame."
            ],
            [
              "NotEditable"
            ]
          ]
        }
      }
    },
    "lsrmd": {
      "fieldOrder": [
        "lightSource",
        "snowPile",
        "redTrafficSigns",
        "reflector",
        "precedingPulsingLed",
        "nonRedTrafficSigns",
        "vehicleDistanceNextPreceding",
        "vehicleDistanceNextOncoming",
        "oncomingVehicles",
        "precedingVehicles",
        "lsrSpecial",
        "numOncomingVehicleLightSource",
        "numPreceedingVehicleLightSource",
        "redReflectorVisible",
        "narrowRailReflectorsVisible",
        "constructionSiteBaconVisible",
        "illuminatedCityInBackgroundVisible",
        "trafficSignOfCertainShapeVisible",
        "crossingTrafficVisible",
        "oncomingTrucksWithPositionLightVisible",
        "ledStreetlampsVisibleAtEgoRoad",
        "generalStreetlampsAtEgoRoad",
        "chevronsVisible",
        "trafficLightsVisible",
        "activelyLitTrafficSignsVisible",
        "billboardsVisible",
        "gasStationVisible",
        "tollStationVisible",
        "oncomingVehiclesInScene",
        "precedingVehiclesInScene",
        "oncomingTrucksVisible",
        "precedingTrucksVisible",
        "motorcycleVisible",
        "oncomingBicycleWithActivatedLightsVisible",
        "oncomingCarFlashesHighBeam",
        "streetlampLineVisible",
        "reflectorLineVisible"
      ],
      "annotations": [
        [
          "FileInfoCategory",
          "lightSourceRecognitionMetaData"
        ],
        [
          "SignedWith",
          "mdms"
        ]
      ],
      "fields": {
        "redTrafficSigns": {
          "type": [
            "Optional",
            "Bool"
          ],
          "annotations": [
            [
              "description",
              "If red traffic signs is in the sequence. Set by labeller."
            ]
          ]
        },
        "nonRedTrafficSigns": {
          "type": [
            "Optional",
            "Bool"
          ],
          "annotations": [
            [
              "description",
              "If non red traffic signs is in the sequence. Set by labeller."
            ]
          ]
        },
        "lightSource": {
          "type": [
            "Set",
            [
              "Enum",
              "yellowStreetLight",
              "otherStreetLight",
              "moon",
              "buildingLights",
              "trafficLight",
              "gasStation",
              "oneEyedVehicle",
              "truck"
            ]
          ],
          "annotations": [
            [
              "description",
              " Several can be selected, separated with ';'. Set by labeller."
            ]
          ]
        },
        "snowPile": {
          "type": [
            "Optional",
            "Bool"
          ],
          "annotations": [
            [
              "description",
              "Wether there is a snow pile in the sequence. Set by labeller."
            ]
          ]
        },
        "reflector": {
          "type": [
            "Optional",
            [
              "Set",
              [
                "Enum",
                "redReflector",
                "reflectorPost",
                "guardRailReflectors"
              ]
            ]
          ],
          "annotations": [
            [
              "description",
              " Several can be selected, separated with ';'. Set by labeller."
            ]
          ]
        },
        "vehicleDistanceNextPreceding": {
          "type": [
            "Set",
            [
              "Enum",
              "closeUp",
              "medium",
              "far"
            ]
          ],
          "annotations": [
            [
              "description",
              " Several can be selected, separated with ';'. Set by labeller."
            ]
          ]
        },
        "vehicleDistanceNextOncoming": {
          "type": [
            "Set",
            [
              "Enum",
              "closeUp",
              "medium",
              "far"
            ]
          ],
          "annotations": [
            [
              "description",
              " Several can be selected, separated with ';'. Set by labeller."
            ]
          ]
        },
        "oncomingVehicles": {
          "type": [
            "Set",
            [
              "Enum",
              "daytimeHeadlights",
              "badWeatherLights",
              "highwayLight",
              "crossingLight",
              "ruralRoadLight",
              "bicycleLight",
              "tractors",
              "ledLights",
              "truckEdgeLights",
              "pulsedLedLights"
            ]
          ],
          "annotations": [
            [
              "description",
              " Several can be selected, separated with ';'. Set by labeller."
            ]
          ]
        },
        "precedingPulsingLed": {
          "type": [
            "Optional",
            "Bool"
          ],
          "annotations": [
            [
              "description",
              "If there are a preceding vehicle with pulsing LED tail lamps. Set by labeller."
            ]
          ]
        },
        "precedingVehicles": {
          "type": [
            "Set",
            [
              "Enum",
              "tractorLights",
              "ledLights",
              "reflectorPanel",
              "reflectorBelt",
              "identifierLights",
              "veryWeak",
              "overtaking"
            ]
          ],
          "annotations": [
            [
              "description",
              " Several can be selected, separated with ';'. Set by labeller."
            ]
          ]
        },
        "lsrSpecial": {
          "type": [
            "Set",
            [
              "Enum",
              "ledBridge",
              "bicycle",
              "motorbike",
              "oneEyedVehicle",
              "carConvoy"
            ]
          ],
          "annotations": [
            [
              "description",
              " Several can be selected, separated with ';'. Set by labeller."
            ]
          ]
        },
        "streetLighting": {
          "type": "Bool",
          "annotations": [
            [
              "description",
              "Whether street lighting was on or off."
            ]
          ]
        },
        "numOncomingVehicleLightSource": {
          "type": [
            "Optional",
            [
              "BInt",
              0,
              10
            ]
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "numPreceedingVehicleLightSource": {
          "type": [
            "Optional",
            [
              "BInt",
              0,
              10
            ]
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "redReflectorVisible": {
          "type": [
            "Optional",
            [
              "Enum",
              "yes",
              "no"
            ]
          ]
        },
        "narrowRailReflectorsVisible": {
          "type": [
            "Optional",
            [
              "Enum",
              "yes",
              "no"
            ]
          ]
        },
        "constructionSiteBaconVisible": {
          "type": [
            "Optional",
            [
              "Enum",
              "yes",
              "no"
            ]
          ]
        },
        "illuminatedCityInBackgroundVisible": {
          "type": [
            "Optional",
            [
              "Enum",
              "yes",
              "no"
            ]
          ]
        },
        "trafficSignOfCertainShapeVisible": {
          "type": [
            "Optional",
            [
              "Enum",
              "round",
              "rectangular"
            ]
          ]
        },
        "crossingTrafficVisible": {
          "type": [
            "Optional",
            [
              "Enum",
              "yes",
              "no"
            ]
          ]
        },
        "oncomingTrucksWithPositionLightVisible": {
          "type": [
            "Optional",
            [
              "Enum",
              "yes",
              "no"
            ]
          ]
        },
        "ledStreetlampsVisibleAtEgoRoad": {
          "type": [
            "Optional",
            [
              "Enum",
              "yes",
              "no"
            ]
          ]
        },
        "generalStreetlampsAtEgoRoad": {
          "type": [
            "Optional",
            [
              "Enum",
              "yes",
              "no"
            ]
          ]
        },
        "chevronsVisible": {
          "type": [
            "Optional",
            [
              "Enum",
              "yes",
              "no"
            ]
          ]
        },
        "trafficLightsVisible": {
          "type": [
            "Optional",
            [
              "Enum",
              "yes",
              "no"
            ]
          ]
        },
        "activelyLitTrafficSignsVisible": {
          "type": [
            "Optional",
            [
              "Enum",
              "yes",
              "no"
            ]
          ]
        },
        "billboardsVisible": {
          "type": [
            "Optional",
            [
              "Enum",
              "yes",
              "no"
            ]
          ]
        },
        "gasStationVisible": {
          "type": [
            "Optional",
            [
              "Enum",
              "yes",
              "no"
            ]
          ]
        },
        "tollStationVisible": {
          "type": [
            "Optional",
            [
              "Enum",
              "yes",
              "no"
            ]
          ]
        },
        "oncomingVehiclesInScene": {
          "type": [
            "Optional",
            [
              "Enum",
              "yes",
              "no"
            ]
          ]
        },
        "precedingVehiclesInScene": {
          "type": [
            "Optional",
            [
              "Enum",
              "yes",
              "no"
            ]
          ]
        },
        "oncomingTrucksVisible": {
          "type": [
            "Optional",
            [
              "Enum",
              "yes",
              "no"
            ]
          ]
        },
        "precedingTrucksVisible": {
          "type": [
            "Optional",
            [
              "Enum",
              "yes",
              "no"
            ]
          ]
        },
        "motorcycleVisible": {
          "type": [
            "Optional",
            [
              "Enum",
              "yes",
              "no"
            ]
          ]
        },
        "oncomingBicycleWithActivatedLightsVisible": {
          "type": [
            "Optional",
            [
              "Enum",
              "yes",
              "no"
            ]
          ]
        },
        "oncomingCarFlashesHighBeam": {
          "type": [
            "Optional",
            [
              "Enum",
              "yes",
              "no"
            ]
          ]
        },
        "streetlampLineVisible": {
          "type": [
            "Optional",
            [
              "Enum",
              "yes",
              "no"
            ]
          ]
        },
        "reflectorLineVisible": {
          "type": [
            "Optional",
            [
              "Enum",
              "yes",
              "no"
            ]
          ]
        }
      }
    },
    "ldmd": {
      "fieldOrder": [
        "laneMarkingExist",
        "laneMarkingType",
        "laneRoadGeometry",
        "nrOfLanes",
        "egoPositionOnRoad",
        "laneWidth",
        "directionalArrowMarking",
        "lettersOnRoad",
        "longitudinalNonMarkingStructures",
        "lanechangeDirection",
        "restrictedMarkings",
        "keepOutArea",
        "laneMarkingSkip",
        "startingMarking",
        "stoppingMarking",
        "crosswalk",
        "laneMarkingColor",
        "oldLaneMarkings",
        "separationLine",
        "trafficIsland",
        "innerLeftLaneMarkings",
        "laneMarkingQuality",
        "outerLeftLaneMarkings",
        "outerRightLaneMarkings",
        "pavementSigns",
        "restrictedMarkingsBool",
        "roadEdge",
        "tripleLeft",
        "tripleRight",
        "category"
      ],
      "annotations": [
        [
          "FileInfoCategory",
          "ldMetaData"
        ],
        [
          "SignedWith",
          "mdms"
        ]
      ],
      "fields": {
        "laneMarkingExist": {
          "type": [
            "Optional",
            [
              "Set",
              [
                "Enum",
                "none",
                "oneSide",
                "bothSide"
              ]
            ]
          ],
          "annotations": [
            [
              "description",
              "one-side, both-side marking. noMarking - Current ego lane has got no markings, oneSideMarking - Current ego lane has got a marking at one side, but not all frames, bothSideMarking - Current ego lane has got a marking on each side. (normal case). Set by labeller."
            ]
          ]
        },
        "laneMarkingType": {
          "type": [
            "Optional",
            [
              "Set",
              [
                "Enum",
                "solid",
                "dashed",
                "doubleSolid",
                "dashDotted",
                "dashedWithBD",
                "BDdashed",
                "doubleDashed",
                "solidDashed",
                "dashedSolid",
                "triple",
                "bottsDots",
                "nonReflectiveBottsDots",
                "reflectiveBottsDots",
                "nonReflectiveBottsDotsWithLane",
                "reflectiveBottsDotsWithLane",
                "curbs",
                "concreteBarrier",
                "guardRail",
                "grassEdge",
                "snowEdge",
                "other",
                "lowQuality",
                "noLaneMarking"
              ]
            ]
          ],
          "annotations": [
            [
              "description",
              "Type of lane marking in the sequence. Several can be selected, separated with ';'. Set by labeller."
            ]
          ]
        },
        "laneRoadGeometry": {
          "type": [
            "Set",
            [
              "Enum",
              "driveOnExit",
              "driveOnEntry",
              "driveBesideExit",
              "driveBesideEntry",
              "laneMerging",
              "laneSplitting",
              "constructionArea",
              "ambigousMarkingSituation"
            ]
          ],
          "annotations": [
            [
              "description",
              "The lane geometry of the road in the sequence. Several can be selected, separated with ';'. Set by labeller."
            ]
          ]
        },
        "nrOfLanes": {
          "type": [
            "Array",
            [
              "BInt",
              0,
              8
            ]
          ],
          "annotations": [
            [
              "description",
              "Number of lanes in the sequence. If the number of lanes changes, select several values. Several can be selected, separated with ';'. Set by labeller."
            ]
          ]
        },
        "egoPositionOnRoad": {
          "type": [
            "Array",
            [
              "BInt",
              0,
              8
            ]
          ],
          "annotations": [
            [
              "description",
              "Lane on which the vehicle is currently located on. Starting from outwards (europe: from right, uk: from left) with lane 0 (=breakdown lane) or lane 1. If position changes, select several values. Several can be selected, separated with ';'. Set by labeller."
            ]
          ]
        },
        "laneWidth": {
          "type": [
            "Set",
            [
              "Enum",
              "normal",
              "narrow",
              "wide",
              "widening",
              "contraction"
            ]
          ],
          "annotations": [
            [
              "description",
              "The width of the lane. normal - 2.5 - 5 m, narrow - < 2.5 m, wide - > 5 m, widening -> increasing lane width (deltaWidth-Threshold), contraction -> decreasing lane width (deltaWidth-Threshold). Several can be selected, separated with ';'."
            ]
          ]
        },
        "directionalArrowMarking": {
          "type": [
            "Set",
            [
              "Enum",
              "none",
              "inLane",
              "enclosedByMarkings"
            ]
          ],
          "annotations": [
            [
              "description",
              "If there are some special markings on road. inLane - the arrow is set in the lane to indicate a turn lane (e.g. in Spain before a highway exit), enclosedByMarkings - the arrow is integrated in a dashed marking (e.g. before a no overtaking). Several can be selected, separated with ';'."
            ]
          ]
        },
        "lettersOnRoad": {
          "type": [
            "Optional",
            "Bool"
          ],
          "annotations": [
            [
              "description",
              "large letters on street. Set by labeller."
            ]
          ]
        },
        "longitudinalNonMarkingStructures": {
          "type": [
            "Set",
            [
              "Enum",
              "none",
              "bitumen",
              "snowBorder",
              "saltBorder",
              "dryingRainBorder",
              "rainBorderByCarAhead",
              "skidMarks",
              "mudTracks",
              "snowBanks",
              "other"
            ]
          ],
          "annotations": [
            [
              "description",
              "longitudinal structures which are not official markings. bitumen - bituminous sheet, snowBorder - transition between normal street surface and snow surface, saltBorder - transition between normal street surface and salted surface, dryingRainBorder - different shapes because of dry and wet areas on the street (not completely dry surface, not completely wet surface), rainBorderByCarAhead - displacement of water film on the street by wheels of car ahead, other - all other cases. Several can be selected, separated with ';'."
            ]
          ]
        },
        "lanechangeDirection": {
          "type": [
            "Set",
            [
              "Enum",
              "left",
              "right"
            ]
          ],
          "annotations": [
            [
              "description",
              "direction of lanechange. Several can be selected, separated with ';'. Set by labeler."
            ]
          ]
        },
        "restrictedMarkings": {
          "type": [
            "Set",
            [
              "Enum",
              "none",
              "dirtLeaves",
              "missingParts",
              "removedElements"
            ]
          ],
          "annotations": [
            [
              "description",
              "Partially occluded marking. dirtLeaves - Partially occluded marking because of dirt or leaves., missingParts - Partially occluded marking because of partially missing parts of marking, removedElements - missing elements (e.g. dashed marking with missing/removed elements). Several can be selected, separated with ';'."
            ]
          ]
        },
        "keepOutArea": {
          "type": [
            "Set",
            [
              "Enum",
              "none",
              "ruralRoadGermany",
              "keepoutAreaAtExits",
              "filled",
              "striped",
              "other"
            ]
          ],
          "annotations": [
            [
              "description",
              "Area which is spanned by markings. Sperrfläche! ruralRoadGermany - Typical German keepout area, striped (before turn lane)., keepoutAreaAtExits - Typical keepout area between exit road and highway, filled - Keepout area is fcompletely filled, other - All other cases. Several can be selected, separated with ';'."
            ]
          ]
        },
        "laneMarkingSkip": {
          "type": [
            "Optional",
            "Bool"
          ],
          "annotations": [
            [
              "description",
              "Lateral skip at least 2m. At the distance a marking ends and at the same distance another marking starts but with a lateral deviation. They are not at the same vanishing line. (e.g. at construction sites). Set by labeller."
            ]
          ]
        },
        "laneMarkingWidthChange": {
          "type": [
            "Optional",
            "Bool"
          ],
          "annotations": [
            [
              "description",
              "Lane marking changes marking width (e.g. at german bus stop). Set by labeller."
            ]
          ]
        },
        "startingMarking": {
          "type": [
            "Optional",
            "Bool"
          ],
          "annotations": [
            [
              "description",
              "transition between no marking and marking. Set by labeller."
            ]
          ]
        },
        "stoppingMarking": {
          "type": [
            "Optional",
            "Bool"
          ],
          "annotations": [
            [
              "description",
              "transition between marking and no marking. Set by labeller."
            ]
          ]
        },
        "crosswalk": {
          "type": [
            "Optional",
            "Bool"
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "laneMarkingColor": {
          "type": [
            "Optional",
            [
              "Set",
              [
                "Enum",
                "blue",
                "red",
                "white",
                "yellow",
                "orange",
                "green",
                "none"
              ]
            ]
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "oldLaneMarkings": {
          "type": [
            "Optional",
            [
              "Set",
              [
                "Enum",
                "paintedOver",
                "ragged"
              ]
            ]
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "separationLine": {
          "type": [
            "Optional",
            [
              "Enum",
              "left",
              "right"
            ]
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "trafficIsland": {
          "type": [
            "Optional",
            "Bool"
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "innerLeftLaneMarkings": {
          "type": [
            "Optional",
            [
              "Set",
              [
                "Enum",
                "bottsDots",
                "dashed",
                "mountedElements",
                "noMarkings",
                "solid"
              ]
            ]
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "innerRightLaneMarkings": {
          "type": [
            "Optional",
            [
              "Set",
              [
                "Enum",
                "bottsDots",
                "dashed",
                "mountedElements",
                "noMarkings",
                "solid"
              ]
            ]
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "laneMarkingQuality": {
          "type": [
            "Optional",
            [
              "Set",
              [
                "Enum",
                "bad",
                "good",
                "medium"
              ]
            ]
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "outerLeftLaneMarkings": {
          "type": [
            "Optional",
            [
              "Set",
              [
                "Enum",
                "bottsDots",
                "dashed",
                "mountedElements",
                "noMarkings",
                "solid"
              ]
            ]
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "outerRightLaneMarkings": {
          "type": [
            "Optional",
            [
              "Set",
              [
                "Enum",
                "bottsDots",
                "dashed",
                "mountedElements",
                "noMarkings",
                "solid"
              ]
            ]
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "pavementSigns": {
          "type": [
            "Optional",
            [
              "Set",
              [
                "Enum",
                "arrows",
                "diamonds",
                "lettersNumbers",
                "other"
              ]
            ]
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "restrictedMarkingsBool": {
          "type": [
            "Optional",
            "Bool"
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "roadEdge": {
          "type": [
            "Optional",
            [
              "Set",
              [
                "Enum",
                "cliff",
                "concreteBarrier",
                "curbs",
                "grassEdge",
                "gravelSand",
                "guardRail",
                "snowEdge"
              ]
            ]
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "tripleLeft": {
          "type": [
            "Optional",
            "Bool"
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "tripleRight": {
          "type": [
            "Optional",
            "Bool"
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "category": {
          "type": [
            "Optional",
            [
              "Enum",
              "cat1",
              "cat2",
              "cat3"
            ]
          ],
          "annotations": [
            [
              "description",
              "Lane Detection Category"
            ]
          ]
        }
      }
    },
    "tsrmd": {
      "fieldOrder": [
        "speedSign",
        "supplementalType",
        "cancellationSign",
        "otherSign",
        "trafficSignType"
      ],
      "annotations": [
        [
          "FileInfoCategory",
          "trafficSignRecognitionMetaData"
        ],
        [
          "SignedWith",
          "mdms"
        ]
      ],
      "fields": {
        "speedSign": {
          "type": [
            "Optional",
            [
              "Set",
              [
                "Enum",
                "5",
                "8",
                "10",
                "15",
                "20",
                "25",
                "30",
                "35",
                "40",
                "45",
                "50",
                "55",
                "60",
                "65",
                "70",
                "75",
                "80",
                "90",
                "100",
                "110",
                "120",
                "130",
                "140",
                "occluded",
                "other",
                "divided",
                "rectangularSpeedSignInEU"
              ]
            ]
          ],
          "annotations": [
            [
              "description",
              "Value of speed signs in the sequence. Several can be selected, separated with ';'."
            ]
          ]
        },
        "supplementalType": {
          "type": [
            "Optional",
            [
              "Set",
              [
                "Enum",
                "rain",
                "snow",
                "fog",
                "time",
                "weight",
                "arrow",
                "car",
                "bus",
                "motorbike",
                "truck",
                "hazardous",
                "trailer",
                "zone",
                "ramp",
                "school",
                "night",
                "exit",
                "other",
                "otherVehicle",
                "nonRestrictingOther",
                "restrictingOther",
                "distance",
                "start",
                "end"
              ]
            ]
          ],
          "annotations": [
            [
              "description",
              "Type of supplementals. Several can be selected, separated with ';' ex. rain;snow;occluded"
            ]
          ]
        },
        "cancellationSign": {
          "type": [
            "Optional",
            [
              "Set",
              [
                "Enum",
                "general",
                "speed",
                "noPassing",
                "cityLimit",
                "playStreet",
                "highway",
                "expressway"
              ]
            ]
          ],
          "annotations": [
            [
              "description",
              "Type of cancellation. Several can be selected, separated with ';'."
            ]
          ]
        },
        "otherSign": {
          "type": [
            "Set",
            [
              "Enum",
              "cityLimit",
              "noPassing",
              "danger",
              "noEntry",
              "passOnSideArray",
              "roundabout",
              "playStreet",
              "highway",
              "expressway",
              "crossWalk",
              "temporary",
              "electronic"
            ]
          ],
          "annotations": [
            [
              "description",
              "City limit signs. Set by labeller."
            ]
          ]
        },
        "trafficSignType": {
          "type": [
            "Optional",
            [
              "Set",
              [
                "Enum",
                "laneSpecificSignTypeSpeedLimit",
                "laneSpecificSignTypeClosedLane",
                "laneSpecificSignTypeShoulderLane",
                "led",
                "invalidated",
                "chicaneAnnouncement",
                "warning"
              ]
            ]
          ]
        },
        "cancellationSign": {
          "type": [
            "Optional",
            [
              "Set",
              [
                "Enum",
                "general",
                "speed",
                "noPassing",
                "cityLimit",
                "playStreet",
                "highway",
                "expressway"
              ]
            ]
          ],
          "annotations": [
            [
              "description",
              "Type of cancellation. Several can be selected, separated with ';'."
            ]
          ]
        },
        "wrongWayAlert": {
          "type": [
            "Optional",
            [
              "Set",
              [
                "Enum",
                "NoEntryHighway",
                "NoEntryGate",
                "NoEntrySituation",
                "NoEntryRoundabout"
              ]
            ]
          ],
          "annotations": [
            [
              "description",
              "Type of cancellation. Several can be selected, separated with ';'."
            ]
          ]
        }
      }
    },
    "cwmf": {
      "extends": [
        "FrameMarking",
        "A_POLY4"
      ],
      "fieldOrder": [
        "autoImageContextCorrect",
        "frameNumber",
        "IDInPreviousVideo",
        "labelingStarted",
        "markingColor",
        "occlusion",
        "posX1",
        "posX2",
        "posX3",
        "posX4",
        "posY1",
        "posY2",
        "posY3",
        "posY4",
        "quality",
        "refId",
        "significance",
        "streamName"
      ],
      "annotations": [
        [
          "FileInfoCategory",
          "crosswalkMarkings"
        ],
        [
          "SignedWith",
          "sms"
        ],
        [
          "description",
          ""
        ]
      ],
      "fields": {
        "autoImageContextCorrect": {
          "type": "String",
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "IDInPreviousVideo": {
          "type": "String",
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "labelingStarted": {
          "type": [
            "Enum",
            "previousVideo",
            "thisVideo"
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "markingColor": {
          "type": [
            "Optional",
            [
              "Enum",
              "blue",
              "orange",
              "other",
              "red",
              "white",
              "yellow"
            ]
          ],
          "annotations": [
            [
              "description",
              "Color of the crosswalk. Set by labeler."
            ]
          ]
        },
        "occlusion": {
          "type": [
            "Optional",
            [
              "Enum",
              "coveredByCar",
              "coveredByFewPeople",
              "coveredByManyPeople",
              "coveredByPeopleAndCar",
              "notCovered"
            ]
          ],
          "annotations": [
            [
              "description",
              "Specifies what occludes the crosswalk. Set by labeler."
            ]
          ]
        },
        "quality": {
          "type": [
            "Optional",
            [
              "Enum",
              "bad",
              "good",
              "medium"
            ]
          ],
          "annotations": [
            [
              "description",
              "Specifies the quality of the crosswalk painting. Set by labeler."
            ]
          ]
        },
        "significance": {
          "type": [
            "Optional",
            [
              "Enum",
              "major",
              "minor"
            ]
          ],
          "annotations": [
            [
              "description",
              "Set if the crosswalk is significant for the ego vehicle. Set by labeler."
            ]
          ]
        }
      },
      "fieldValues": {
        "labelingStarted": "thisVideo"
      }
    },
    "vdbmf": {
      "annotations": [ "abstract" ],
      "fields": {
        "pose": {
          "type": [
            "Enum",
            "notSet",
            "front",
            "front-left",
            "front-right",
            "rear",
            "rear-left",
            "rear-right",
            "side",
            "side-right",
            "side-left",
            "other"
          ],
          "annotations": [ "required" ]
        },
        "calculatedDistance": {
          "type": [
            "Optional",
            [
              "Enum",
              "lidar",
              "vehicleSpeed",
              "interpolated"
            ]
          ],
          "annotations": [
            [
              "description",
              "Determines if the distance is added by LIDAR or calculated by Yam"
            ]
          ]
        },
        "lighting": {
          "type": [
            "Enum",
            "normal",
            "glare",
            "unsharp"
          ],
          "annotations": [
            [
              "required"
            ],
            [
              "description",
              "Type of lightning."
            ]
          ]
        },
        "occlusion": {
          "type": [
            "Enum",
            "none",
            "partial",
            "full",
            "light",
            "medium",
            "heavy"
          ],
          "annotations": [
            [
              "required"
            ],
            [
              "description",
              "Degree of occlusion."
            ]
          ]
        },
        "laneAssignment": {
          "type": [
            "Optional",
            [
              "Enum",
              "unknown",
              "-3",
              "-2",
              "-1",
              "0",
              "1",
              "2",
              "3"
            ]
          ],
          "annotations": [
            [
              "description",
              "Indicates which lane the object is located in. Unknown should be default. Once marker has set a value, that value should be copied to later frames of the same object until the marker sets another value again. Old markings without this field should be set to unknown."
            ]
          ]
        },
        "turnIndicator": {
          "type": [
            "Optional",
            [
              "Enum",
              "false",
              "left",
              "right",
              "both",
              "off",
              "unknown"
            ]
          ],
          "annotations": [
            [
              "description",
              "Indicates whether any of the objects turn indicators are on/off in current frame."
            ]
          ]
        },
        "brakeLight": {
          "type": [
            "Optional",
            "Bool"
          ],
          "annotations": [
            [
              "description",
              "Indicates whether the objects brake lights are on/off in current frame. Unknown should be default. Once marker has set a value, that value should be copied to later frames of the same object until the marker sets another value again. Old markings without this field should be set to unknown."
            ]
          ]
        },
        "warningIndicator": {
          "type": [
            "Optional",
            "Bool"
          ],
          "annotations": [
            [
              "description",
              "Indicates whether the objects warning indicator are on/off in current frame. Unknown should be default. Once marker has set a value, that value should be copied to later frames of the same object until the marker sets another value again. Old markings without this field should be set to unknown."
            ]
          ]
        },
        "direction": {
          "type": [
            "Optional",
            [
              "Enum",
              "oncoming",
              "preceding"
            ]
          ],
          "annotations": [
            [
              "description",
              "Direction of the object movement."
            ]
          ]
        },
        "keyFrame": {
          "type": "Bool",
          "annotations": [
            [
              "required"
            ],
            [
              "description",
              "Indicates if current patch uses as a marking key frame."
            ]
          ]
        }
      }
    },
    "vdmf": {
      "extends": [
        "vdbmf",
        "VehicleOcclusion",
        "ROI",
        "Box3D"
      ],
      "fieldOrder": [
        "frameNumber",
        "streamName",
        "refId",
        "top",
        "bottom",
        "left",
        "right",
        "refLine",
        "objectType",
        "pose",
        "lighting",
        "occlusion",
        "bottomOccluded",
        "laneAssignment",
        "turnIndicator",
        "brakeLight",
        "warningIndicator",
        "distance",
        "laneChange",
        "movement",
        "rotation",
        "direction",
        "keyFrame",
        "lidarDistanceX",
        "lidarDistanceY",
        "lidarVelocityX",
        "lidarVelocityY",
        "occludedByRefID"
      ],
      "annotations": [
        [
          "metaDataRef",
          "vdmd"
        ],
        [
          "SignedWith",
          "sms"
        ],
        [
          "FileInfoCategory",
          "vehicleMarkings"
        ]
      ],
      "fields": {
        "refLine": {
          "type": "Int",
          "annotations": [
            [
              "required"
            ],
            [
              "description",
              "Coordinate of bumper corner on vehicle."
            ]
          ]
        },
        "objectType": {
          "type": [
            "Enum",
            "car",
            "truck",
            "otherTruck",
            "bus",
            "otherVehicle",
            "nondescript",
            "FP",
            "baloonCar",
            "dummyCar",
            "constructionWarningTrailer",
            "constructionVehicle",
            "trailer",
            "otherTrailer",
            "tram",
            "motorhome",
            "occludingObject",
            "van",
            "pickup",
            "truckTrailer",
            "heavyEquipmentVehicle",
            "tukTuk"
          ],
          "annotations": [
            [
              "required"
            ],
            [
              "description",
              "Car include types 'car', 'minibus' and 'van', otherVehicle should contain 'caravan', 'motorhome'."
            ]
          ]
        },
        "distance": {
          "type": [
            "Optional",
            "Double"
          ],
          "annotations": [
            [
              "description",
              "Distance to vehicle according to LIDAR, radar or similar information."
            ]
          ]
        },
        "laneChange": {
          "type": [
            "Optional",
            "Bool"
          ],
          "annotations": [
            [
              "description",
              "Rough estimate that the center of car is passing the lane separator. Set by labeler."
            ]
          ]
        },
        "movement": {
          "type": [
            "Optional",
            [
              "Enum",
              "moving",
              "parked",
              "stationary"
            ]
          ],
          "annotations": [
            [
              "description",
              "Movement of the selected object. Set by labeler."
            ]
          ]
        },
        "rotation": {
          "type": [
            "Optional",
            [
              "Enum",
              "irrelevant",
              "relevant"
            ]
          ],
          "annotations": [
            [
              "description",
              "Indicates if the vehicle relevant or not based on rotation"
            ]
          ]
        },
        "occludedByRefID": {
          "type": [
            "Array",
            "Int"
          ],
          "annotations": [
            [
              "description",
              "OccludedBy can hold the reference ID:s to other vehicle or occludingObject"
            ]
          ]
        },
        "odd": {
          "type": [
            "Optional",
            [
              "Enum",
              "yes",
              "no"
            ]
          ]
        },
        "isParked": {
          "type": [
            "Optional",
            [
              "Enum",
              "yes",
              "no"
            ]
          ]
        },
        "attached": {
          "type": [
            "Optional",
            [
              "Enum",
              "yes",
              "no"
            ]
          ]
        },
        "bothBordersFullyVisible": {
          "type": [
            "Optional",
            [
              "Enum",
              "true",
              "false"
            ]
          ]
        },
        "rightBorderOccluded": {
          "type": [
            "Optional",
            [
              "Enum",
              "true",
              "false"
            ]
          ]
        },
        "lefBorderOccluded": {
          "type": [
            "Optional",
            [
              "Enum",
              "true",
              "false"
            ]
          ]
        },
        "bothBordersOccluded": {
          "type": [
            "Optional",
            [
              "Enum",
              "true",
              "false"
            ]
          ]
        },
        "wheelsUnclear": {
          "type": [
            "Optional",
            [
              "Enum",
              "false",
              "true"
            ]
          ]
        },
        "turnLightLeft": {
          "type": [
            "Optional",
            [
              "Enum",
              "false",
              "true"
            ]
          ]
        },
        "turnLightRight": {
          "type": [
            "Optional",
            [
              "Enum",
              "false",
              "true"
            ]
          ]
        },
        "breakLight": {
          "type": [
            "Optional",
            [
              "Enum",
              "false",
              "true"
            ]
          ]
        },
        "emergencyLights": {
          "type": [
            "Optional",
            [
              "Enum",
              "false",
              "true"
            ]
          ]
        },
        "indicatorOcclusion": {
          "type": [
            "Optional",
            [
              "Enum",
              "none",
              "left",
              "right",
              "full"
            ]
          ],
          "annotations": [
            [
              "description",
              "Occlusion of an indicator. Set by labeler."
            ]
          ]
        }
      }
    },
    "vwcpm": {
      "extends": [
        "FrameMarking"
      ],
      "annotations": [
        [
          "SignedWith",
          "sms"
        ],
        [
          "FileInfoCategory",
          "VehicleWheelPointMarking"
        ],
        [
          "description",
          "Class used to label the wheel point contact on ground.Created for SMPC5."
        ]
      ],
      "fields": {
        "objectType": {
          "type": [
            "Enum",
            "FrontWheel",
            "RearWheel"
          ],
          "annotations": [
            [
              "description",
              "The objectType describes the wheel."
            ]
          ]
        },
        "WheelContactPointX": {
          "type": "Int",
          "annotations": [
            [
              "description",
              "X coordinate of contact point between ground plane and rear wheel."
            ]
          ]
        },
        "WheelContactPointY": {
          "type": "Int",
          "annotations": [
            [
              "description",
              "Y coordinate of contact point between ground plane and rear wheel."
            ]
          ]
        },
        "parentRefId": {
          "type": "Int",
          "annotations": [
            [
              "required"
            ],
            [
              "description",
              "Id number for the parent object."
            ]
          ]
        },
        "frontWheelOccluded": {
          "type": [
            "Optional",
            "Bool"
          ],
          "annotations": [
            "description",
            "true if front wheel is occluded"
          ]
        },
        "rearWheelOccluded": {
          "type": [
            "Optional",
            "Bool"
          ],
          "annotations": [
            "description",
            "true if front wheel is occluded"
          ]
        },
        "wheelsUnclear": {
          "type": [
            "Optional",
            [
              "Enum",
              "false",
              "true"
            ]
          ]
        }
      }
    },
    "twmf": {
      "extends": [
        "vdbmf",
        "HumanOcclusion",
        "ROI",
        "Box3D"
      ],
      "fieldOrder": [
        "frameNumber",
        "streamName",
        "refId",
        "top",
        "bottom",
        "left",
        "right",
        "refLine",
        "rearWheelX",
        "rearWheelY",
        "frontWheelX",
        "frontWheelY",
        "objectType",
        "pose",
        "lighting",
        "occlusion",
        "headOccluded",
        "feetOccluded",
        "strangePose",
        "laneAssignment",
        "brakeLight",
        "turnIndicator",
        "warningIndicator",
        "direction",
        "keyFrame"
      ],
      "annotations": [
        [
          "metaDataRef",
          "pdmd"
        ],
        [
          "SignedWith",
          "sms"
        ],
        [
          "FileInfoCategory",
          "twoWheelerMarkings"
        ]
      ],
      "fields": {
        "refLine": {
          "type": "Int",
          "annotations": [
            [
              "description",
              "Y coordinate of feet of object. Y coordinate of feet of object."
            ]
          ]
        },
        "rearWheelX": {
          "type": [
            "Optional",
            "Int"
          ],
          "annotations": [
            [
              "description",
              "X coordinate of contact point between ground plane and rear wheel."
            ]
          ]
        },
        "rearWheelY": {
          "type": [
            "Optional",
            "Int"
          ],
          "annotations": [
            [
              "description",
              "Y coordinate of contact point between ground plane and rear wheel."
            ]
          ]
        },
        "frontWheelX": {
          "type": [
            "Optional",
            "Int"
          ],
          "annotations": [
            [
              "description",
              "X coordinate of contact point between ground plane and front wheel."
            ]
          ]
        },
        "frontWheelY": {
          "type": [
            "Optional",
            "Int"
          ],
          "annotations": [
            [
              "description",
              "Y coordinate of contact point between ground plane and front wheel."
            ]
          ]
        },
        "objectType": {
          "type": [
            "Enum",
            "cyclist",
            "mopedist",
            "motorcyclist",
            "twoWheeler",
            "nondescript",
            "otherTwoWheeler",
            "FP",
            "dummy",
            "dummyCyclist",
            "powerTwoWheeler",
            "bicycle"
          ],
          "annotations": [
            [
              "required"
            ],
            [
              "description",
              "Type of marked object."
            ]
          ]
        },
        "strangePose": {
          "type": "Bool",
          "annotations": [
            [
              "required"
            ],
            [
              "description",
              "Does the object has a strange pose?"
            ]
          ]
        },
        "leftBorderVisibility": {
          "type": [
            "Optional",
            [
              "Enum",
              "false",
              "true"
            ]
          ]
        },
        "rightBorderVisibility": {
          "type": [
            "Optional",
            [
              "Enum",
              "false",
              "true"
            ]
          ]
        },
        "laneChange": {
          "type": [
            "Optional",
            [
              "Enum",
              "false",
              "true"
            ]
          ]
        },
        "movement": {
          "type": [
            "Optional",
            [
              "Enum",
              "stationary",
              "moving",
              "parked"
            ]
          ]
        }
      }
    },
    "pdmf": {
      "extends": [
        "ROI",
        "HumanOcclusion",
        "Box3D"
      ],
      "fieldOrder": [
        "frameNumber",
        "streamName",
        "refId",
        "top",
        "bottom",
        "left",
        "right",
        "objectType",
        "height",
        "direction",
        "movement",
        "occlusion",
        "headOccluded",
        "feetOccluded",
        "overlapped",
        "unsharp",
        "strangePose",
        "distance",
        "keyFrame",
        "lidarDistanceX",
        "lidarDistanceY",
        "lidarVelocityX",
        "lidarVelocityY",
        "crossing",
        "accessory"
      ],
      "annotations": [
        [
          "metaDataRef",
          "pdmd"
        ],
        [
          "SignedWith",
          "sms"
        ],
        [
          "FileInfoCategory",
          "pedestrianMarkings"
        ]
      ],
      "fields": {
        "movement": {
          "type": [
            "Enum",
            "still",
            "walking",
            "running",
            "other"
          ],
          "annotations": [
            [
              "required"
            ],
            [
              "description",
              "Movement of ped."
            ]
          ]
        },
        "occlusion": {
          "type": [
            "Enum",
            "none",
            "partial",
            "full",
            "legsOccluded",
            "other"
          ],
          "annotations": [
            [
              "required"
            ],
            [
              "description",
              "Type of occlusion."
            ]
          ]
        },
        "overlapped": {
          "type": "Bool",
          "annotations": [
            [
              "required"
            ],
            [
              "description",
              "Is the ped overlapped by another ped object."
            ]
          ]
        },
        "unsharp": {
          "type": "Bool",
          "annotations": [
            [
              "required"
            ],
            [
              "description",
              "Is the image unsharp."
            ]
          ]
        },
        "strangePose": {
          "type": "Bool",
          "annotations": [
            [
              "required"
            ],
            [
              "description",
              "Any strangePose?"
            ]
          ]
        },
        "keyFrame": {
          "type": "Bool",
          "annotations": [
            [
              "required"
            ],
            [
              "description",
              "Indicates if current patch uses as a marking key frame."
            ]
          ]
        },
        "direction": {
          "type": [
            "Enum",
            "NN",
            "NE",
            "EE",
            "SE",
            "SS",
            "SW",
            "WW",
            "NW",
            "Undefined"
          ],
          "annotations": [
            [
              "required"
            ],
            [
              "description",
              "Direction of ped."
            ]
          ]
        },
        "objectType": {
          "type": [
            "Enum",
            "pedestrian",
            "nondescript",
            "FP",
            "dummy",
            "dummyPedestrian"
          ],
          "annotations": [
            [
              "required"
            ],
            [
              "description",
              "Type of marked object."
            ]
          ]
        },
        "height": {
          "type": [
            "Optional",
            [
              "Enum",
              "child",
              "adult"
            ]
          ],
          "annotations": [
            [
              "required"
            ],
            [
              "description",
              "Size of the pedestrian."
            ]
          ]
        },
        "distance": {
          "type": [
            "Optional",
            "Double"
          ],
          "annotations": [
            [
              "description",
              "Distance to pedestrian according to radar or LIDAR similar information."
            ]
          ]
        },
        "crossing": {
          "type": [
            "Optional",
            "Bool"
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "accessory": {
          "type": [
            "Optional",
            "Bool"
          ],
          "annotations": [
            [
              "description",
              "Set when ego vehicle is on a bridge. Parsed from CAN, signal: ADAS_CuA_Bridge. Set by PEX."
            ]
          ]
        },
        "faceVisible": {
          "type": [
            "Optional",
            [
              "Enum",
              "false",
              "true"
            ]
          ]
        },
        "leftBorderVisibility": {
          "type": [
            "Optional",
            [
              "Enum",
              "false",
              "true"
            ]
          ]
        },
        "rightBorderVisibility": {
          "type": [
            "Optional",
            [
              "Enum",
              "false",
              "true"
            ]
          ]
        }
      }
    },
    "ldmf": {
      "extends": "FrameMarking",
      "fieldOrder": [
        "frameNumber",
        "streamName",
        "objectType",
        "refId",
        "trackID",
        "laneType",
        "sideOfLane",
        "multiTrackPosition",
        "multiTrackNumberOfTracks",
        "sideOfMarking",
        "markingType",
        "markingWidth",
        "markingColor",
        "supportingPointsX",
        "supportingPointsY",
        "keyFrame",
        "antagonistObjectID",
        "antagonistObjectID2",
        "labelingStarted",
        "IDInPreviousVideo",
        "autoImageContextCorrect",
        "curve",
        "curveRate",
        "dcalVersion",
        "headAngle",
        "lastLaneChangeFrame",
        "latDev",
        "multiTracks",
        "quality",
        "risingFallingEdge",
        "trackContinuity",
        "trackType"
      ],
      "annotations": [
        [
          "metaDataRef",
          "ldmd"
        ],
        [
          "SignedWith",
          "sms"
        ],
        [
          "FileInfoCategory",
          "laneDetectionMarkings"
        ]
      ],
      "fields": {
        "objectType": {
          "type": [
            "Optional",
            [
              "Enum",
              "trackObject"
            ]
          ],
          "annotations": [
            [
              "description",
              "Which object type it is."
            ]
          ]
        },
        "trackID": {
          "type": "Int",
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "Id number for current object (for split tracks)"
            ]
          ]
        },
        "laneType": {
          "type": [
            "Optional",
            [
              "Enum",
              "egoLane",
              "neighborlaneLeft",
              "neighborlaneRight",
              "neighborlaneLeftFar",
              "neighborlaneRightFar",
              "init",
              "noTrack",
              "other"
            ]
          ],
          "annotations": [
            [
              "description",
              "The LaneType describes the lane where the current labeled track belongs to."
            ]
          ]
        },
        "sideOfLane": {
          "type": [
            "Optional",
            [
              "Enum",
              "left",
              "right",
              "other",
              "init"
            ]
          ],
          "annotations": [
            [
              "description",
              "Point of view is the center of the chosen Lane Type (see below). The lane side describes the marking where the current track belongs to."
            ]
          ]
        },
        "multiTrackPosition": {
          "type": [
            "Optional",
            [
              "Enum",
              "0.5",
              "1",
              "1.5",
              "2",
              "2.5",
              "3"
            ]
          ],
          "annotations": [
            [
              "description",
              "Number/position of track in case a lane is delimited by e.g. double or triple tracks. EgoLane/left consists of a solid and a BottsDots track."
            ]
          ]
        },
        "multiTrackNumberOfTracks": {
          "type": [
            "Optional",
            [
              "Enum",
              "0.5",
              "1",
              "1.5",
              "2",
              "2.5",
              "3"
            ]
          ],
          "annotations": [
            [
              "description",
              "Number of tracks in case a lane is delimeted by multiple tracks."
            ]
          ]
        },
        "sideOfMarking": {
          "type": [
            "Optional",
            [
              "Enum",
              "left",
              "right",
              "center",
              "other",
              "init"
            ]
          ],
          "annotations": [
            [
              "description",
              "Every painted marking has got two edges (inner+outer). The Marking Side describes the edge which complies the current track."
            ]
          ]
        },
        "markingType": {
          "type": [
            "Optional",
            [
              "Enum",
              "init",
              "solid",
              "dashed",
              "dashDotted",
              "dashedWithBD",
              "bottsDots",
              "BDdashed",
              "guardRail",
              "curb",
              "wall",
              "turf",
              "border",
              "concreteBarrier",
              "grassEdge",
              "snowEdge",
              "other"
            ]
          ],
          "annotations": [
            [
              "description",
              "MarkingType describes the classified type of marking."
            ]
          ]
        },
        "markingWidth": {
          "type": "Int",
          "annotations": [
            [
              "description",
              "Width of the current marking is set in cm"
            ]
          ]
        },
        "markingColor": {
          "type": [
            "Optional",
            [
              "Enum",
              "white",
              "yellow",
              "red",
              "blue",
              "orange",
              "other",
              "undefined",
              "init"
            ]
          ],
          "annotations": [
            [
              "description",
              "The marking color describes the color of painted markings."
            ]
          ]
        },
        "supportingPointsX": {
          "type": [
            "Array",
            "Int"
          ],
          "annotations": [
            [
              "description",
              "A labeling for one track is represented by a list of at least 4 supporting points (max 20) in image coordinates (x_img, y_img)."
            ]
          ]
        },
        "supportingPointsY": {
          "type": [
            "Array",
            "Int"
          ],
          "annotations": [
            [
              "description",
              "A labeling for one track is represented by a list of at least 4 supporting points (max 20) in image coordinates (x_img, y_img)."
            ]
          ]
        },
        "keyFrame": {
          "type": "Bool",
          "annotations": [
            [
              "description",
              "Indicates if current patch uses as a marking key frame."
            ]
          ]
        },
        "antagonistObjectID": {
          "type": "Int",
          "annotations": [
            [
              "description",
              "Reference to the opposite side of the marking."
            ]
          ]
        },
        "antagonistObjectID2": {
          "type": "Int",
          "annotations": [
            [
              "description",
              "Reference to the opposite side of the marking (split track)."
            ]
          ]
        },
        "labelingStarted": {
          "type": [
            "Optional",
            [
              "Enum",
              "thisVideo",
              "previousVideo"
            ]
          ],
          "annotations": [
            [
              "description",
              "Indicates if current track was already visible at the end of the last video ('continous recordings')"
            ]
          ]
        },
        "IDInPreviousVideo": {
          "type": "String",
          "annotations": [
            [
              "description",
              "Reference to refID of track in the previous video."
            ]
          ]
        },
        "autoImageContextCorrect": {
          "type": "String",
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "curve": {
          "type": "String",
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "curveRate": {
          "type": "String",
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "dcalVersion": {
          "type": "String",
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "headAngle": {
          "type": "String",
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "lastLaneChangeFrame": {
          "type": "String",
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "latDev": {
          "type": "String",
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "multiTracks": {
          "type": [
            "Optional",
            [
              "Enum",
              "dashedDashed",
              "dashedSolid",
              "single",
              "solidDashed",
              "solidSolid"
            ]
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "quality": {
          "type": [
            "Optional",
            [
              "Enum",
              "bad",
              "good",
              "medium"
            ]
          ],
          "annotations": [
            [
              "description",
              "Set quality of lane painting. Set by labeler."
            ]
          ]
        },
        "risingFallingEdge": {
          "type": [
            "Optional",
            [
              "Enum",
              "falling",
              "rising"
            ]
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "trackContinuity": {
          "type": [
            "Optional",
            [
              "Enum",
              "dashedNarrow",
              "dashedWide",
              "footPoints",
              "seperationLine",
              "solid",
              "unknown"
            ]
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "trackType": {
          "type": [
            "Optional",
            [
              "Enum",
              "bottsDots",
              "concreteBarrier",
              "curb",
              "grassEdge",
              "gravelSand",
              "guardRail",
              "otherUnmarkedRoadBoundary",
              "painted",
              "pylonBeacon",
              "rock",
              "snow",
              "unknown",
              "wall"
            ]
          ],
          "annotations": [
            [
              "description",
              "Set the type of lane track (painting, curb, pylons, etc.). Set by labeler."
            ]
          ]
        }
      }
    },
    "LSAMF": {
      "extends": "FrameMarking",
      "annotations": [
        "abstract"
      ],
      "fields": {
        "groupId": {
          "type": [
            "Optional",
            "Int"
          ],
          "annotations": [
            [
              "optional"
            ],
            [
              "description",
              "GroupId this light source belongs to"
            ]
          ]
        }
      }
    },
    "lsrb": {
      "extends": [
        "LSAMF",
        "PA"
      ],
      "annotations": [
        [
          "FileInfoCategory",
          "LightSourceBoxMarking"
        ],
        [
          "SignedWith",
          "sms"
        ],
        [
          "description",
          "A box that marks the contour of a light source"
        ]
      ],
      "fields": {
        "lsmfRefId": {
          "type": [
            "Optional",
            "Int"
          ],
          "annotations": [
            [
              "optional"
            ],
            [
              "description",
              "Indicates the thre refId of the light source marking it surrounds."
            ]
          ]
        }
      }
    },
    "lsmf": {
      "extends": "LSAMF",
      "fieldOrder": [
        "frameNumber",
        "streamName",
        "refId",
        "lightSourcePositionX",
        "lightSourcePositionY",
        "lightSourceType",
        "FPType",
        "groupId",
        "distance",
        "top",
        "bottom",
        "left",
        "right",
        "avgLightSourceBrightness",
        "footprintSet",
        "lightSourceBrightness",
        "oneEyedVehicle"
      ],
      "annotations": [
        [
          "metaDataRef",
          "lsrmd"
        ],
        [
          "SignedWith",
          "sms"
        ],
        [
          "FileInfoCategory",
          "lightSourceMarkings"
        ]
      ],
      "fields": {
        "lightSourcePositionX": {
          "type": "Int",
          "annotations": [
            [
              "required"
            ],
            [
              "NotEditable"
            ],
            [
              "description",
              "Image coordinate X for this light source"
            ]
          ]
        },
        "lightSourcePositionY": {
          "type": "Int",
          "annotations": [
            [
              "required"
            ],
            [
              "NotEditable"
            ],
            [
              "description",
              "Image coordinate Y for this light source"
            ]
          ]
        },
        "lightSourceType": {
          "type": [
            "Optional",
            [
              "Enum",
              "streetlamp",
              "netlamp",
              "constructionPost",
              "reflector",
              "redReflector",
              "trafficLight",
              "ledSign",
              "directionSign",
              "trafficSign",
              "chevron",
              "reflexOnRoad",
              "otherIrrelevantLight",
              "headLight",
              "tailLight",
              "ledTailLight",
              "ledHeadLight",
              "auxVehicleLight",
              "runningLight",
              "blinker",
              "reflexOnVehicle",
              "brakeLight",
              "otherLighting",
              "undefined",
              "reflectorOnVehicle",
              "headlightHalogen",
              "overtaking",
              "positionLight",
              "oncomingTruckPositionLight",
              "mayDetect"
            ]
          ],
          "annotations": [
            [
              "required"
            ],
            [
              "description",
              "Defines which type of light source is observed"
            ]
          ]
        },
        "FPType": {
          "type": [
            "Optional",
            [
              "Enum",
              "LSR_FP_on_Gas_Station",
              "LSR_FP_on_Toll_station",
              "LSR_FP_on_traffic_sign",
              "LSR_FP_on_construction_site_beacon",
              "LSR_FP_on_billboard",
              "LSR_FP_on_reflectors",
              "LSR_FP_on_house_or_garden_light",
              "LSR_FP_on_red_reflectors",
              "LSR_FP_on_rail_reflectors",
              "LSR_FP_on_netlamp_(except_LED)",
              "LSR_FP_on_LED_netlamp",
              "LSR_FP_on_traffic_light",
              "LSR_FP_on_illuminated_city_in_background",
              "LSR_FP_Labeling_Error",
              "LSR_multiple_FP",
              "LSR_error_memory_FP",
              "LSR_Unknown_FP"
            ]
          ],
          "annotations": [
            [
              "optional"
            ],
            [
              "description",
              "Defines which type of false positive is observed"
            ]
          ]
        },
        "groupId": {
          "type": [
            "Optional",
            "Int"
          ],
          "annotations": [
            [
              "optional"
            ],
            [
              "description",
              "GroupId this light source belongs to"
            ]
          ]
        },
        "top": {
          "type": [
            "Optional",
            "Int"
          ],
          "annotations": [
            [
              "optional"
            ],
            [
              "description",
              "Top coordinate of complete light source area."
            ]
          ]
        },
        "bottom": {
          "type": [
            "Optional",
            "Int"
          ],
          "annotations": [
            [
              "optional"
            ],
            [
              "description",
              "Bottom coordinate of complete light source area."
            ]
          ]
        },
        "left": {
          "type": [
            "Optional",
            "Int"
          ],
          "annotations": [
            [
              "optional"
            ],
            [
              "description",
              "Left coordinate of complete light source area."
            ]
          ]
        },
        "right": {
          "type": [
            "Optional",
            "Int"
          ],
          "annotations": [
            [
              "optional"
            ],
            [
              "description",
              "Right coordinate of complete light source area."
            ]
          ]
        },
        "distance": {
          "type": [
            "Optional",
            "Int"
          ],
          "annotations": [
            [
              "optional"
            ],
            [
              "description",
              "Distance between ego vehicle and other vehicle on the road."
            ]
          ]
        },
        "labelingStarted": {
          "type": [
            "Enum",
            "thisVideo",
            "previousVideo"
          ],
          "annotations": [
            [
              "description",
              "In which sequence the labeling was started."
            ]
          ]
        },
        "IDinPreviousVideo": {
          "type": [
            "Optional",
            "String"
          ],
          "annotations": [
            [
              "description",
              "free string, default is LSR.X (expected is the identifier of the object in the previous video."
            ]
          ]
        },
        "avgLightSourceBrightness": {
          "type": [
            "Optional",
            "Int"
          ],
          "annotations": [
            [
              "description",
              "Set by Blob extract generator."
            ]
          ]
        },
        "footprintSet": {
          "type": [
            "Optional",
            [
              "Enum",
              "nextVideo",
              "notPossible",
              "previousVideo",
              "thisVideo"
            ]
          ],
          "annotations": [
            [
              "description",
              "Defines in which video file the footprint is set. Set by labeler."
            ]
          ]
        },
        "lightSourceBrightness": {
          "type": [
            "Optional",
            "Int"
          ],
          "annotations": [
            [
              "description",
              "Set by Blob extract generator."
            ]
          ]
        },
        "oneEyedVehicle": {
          "type": [
            "Optional",
            [
              "Enum",
              "mayDetect",
              "mustDetect"
            ]
          ],
          "annotations": [
            [
              "description",
              "Set for one-eyed vehicles if they may or must be detected. Set by labeler."
            ]
          ]
        },
        "groupType": {
          "type": [
            "Optional",
            [
              "Enum",
              "vehicle",
              "reflectorLine",
              "streetlampLine",
              "netlampsOnHorizon",
              "gasStation",
              "tollStation",
              "netlampCluster",
              "trafficSign"
            ]
          ],
          "annotations": [
            [
              "optional"
            ],
            [
              "description",
              "Identifies the group type of a light source group."
            ]
          ]
        },
        "distanceType": {
          "type": [
            "Optional",
            [
              "Enum",
              "mayDetect",
              "mustDetect"
            ]
          ],
          "annotations": [
            [
              "description",
              "A rough estimation of the distance of each group of type vehicle."
            ]
          ]
        },
        "vehicleType": {
          "type": [
            "Optional",
            [
              "Enum",
              "car",
              "bus",
              "truck",
              "transporter",
              "motorcycle",
              "bicycle",
              "none"
            ]
          ],
          "annotations": [
            [
              "description",
              "Type of vehicle defined by a group of light sources."
            ]
          ]
        },
        "lightSourcePosition": {
          "type": [
            "Optional",
            [
              "Enum",
              "leftOnVehicle",
              "rightOnVehicle",
              "centralOnVehicle",
              "NA"
            ]
          ],
          "annotations": [
            [
              "description",
              "Defines the position of vehicle light sources on the vehicle"
            ]
          ]
        },
        "drivingDirection": {
          "type": [
            "Optional",
            [
              "Enum",
              "oncoming",
              "preceding",
              "overtaking",
              "parking",
              "crossing"
            ]
          ],
          "annotations": [
            [
              "description",
              "Defines the position of vehicle light sources on the vehicle"
            ]
          ]
        }
      }
    },
    "lsfpmf": {
      "extends": [
        "LSAMF",
        "A_LINE"
      ],
      "annotations": [
        [
          "FileInfoCategory",
          "LightSourceFootprint"
        ],
        [
          "SignedWith",
          "sms"
        ],
        [
          "description",
          "A line that represents the vehicle's footprint"
        ]
      ]
    },
    "tsrmf": {
      "extends": "FrameMarking",
      "fieldOrder": [
        "refId",
        "frameNumber",
        "streamName",
        "advisorySign",
        "invertedVMSSign",
        "addRefID1",
        "stopSignType",
        "addInformationType1",
        "addTimeRestrPeriod1",
        "addDistRestrValMeter1",
        "addWeightRestrValKg1",
        "addOnForm1",
        "addOnPosition1",
        "addRefID2",
        "addInformationType2",
        "addTimeRestrPeriod2",
        "addDistRestrValMeter2",
        "addWeightRestrValKg2",
        "addOnForm2",
        "addOnPosition2",
        "occlusion",
        "special",
        "rotationX",
        "rotationY",
        "rotationZ",
        "defectiveCondition",
        "status",
        "laneValidity",
        "mounting",
        "autoImageContext",
        "autoImageName",
        "auto3dPosX",
        "auto3dPosY",
        "auto3dPosZ",
        "labelingStarted",
        "IDinPreviousVideo",
        "backgroundColor",
        "addInformationType3",
        "addOnForm3",
        "addOnPosition3",
        "addWeightRestrictionValueKg1",
        "addWeightRestrictionValueKg2",
        "addWeightRestrictionValueKg3",
        "addDistRestrValMeter3",
        "addRefID3",
        "addTimeRestrPeriod3"
      ],
      "annotations": [
        [
          "abstract"
        ],
        [
          "description",
          "This class is an abstract base class containing fields common to all tsr marking classes."
        ]
      ],
      "fields": {
        "advisorySign": {
          "type": "Bool",
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "invertedVMSSign": {
          "type": "Bool",
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "addRefID1": {
          "type": "String",
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "stopSignType": {
          "type": [
            "Optional",
            [
              "Enum",
              "stopSign"
            ]
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "addInformationType1": {
          "type": [
            "Optional",
            [
              "Enum",
              "noAdditionalInformation",
              "unreadable",
              "zone",
              "restrictingVehicleOther",
              "restrictingOther",
              "restrictingCars",
              "restrictingBusses",
              "restrictingTrailers",
              "restrictingTrucks",
              "restrictingMotorbikes",
              "restrictingTrucksTrailers",
              "restrictingTrucksBusses",
              "restrictingTrucksBussesTrailers",
              "restrictingHazardousTransport",
              "restrictingWeight",
              "restrictingNight",
              "restrictingTime",
              "restrictionStartDistance",
              "restrictingDistance",
              "restrictingRain",
              "restrictingFog",
              "restrictingExit",
              "restrictingRightTurning",
              "restrictingLeftTurning",
              "restrictingLeftAndRightTurning",
              "restrictingChildrenPresent",
              "restrictingFlashing",
              "nonRestrictingOvertakingTractor",
              "nonRestrictingBegin",
              "nonRestrictingEnd",
              "nonRestrictingOther",
              "nonRestrictingOtherInformation",
              "nonRestrictingDangerQueuesLikely",
              "nonRestrictingDangerAccidentsLikely",
              "nonRestrictingDangerIce",
              "restrictingLimitationAhead",
              "nonRestrictingWork",
              "nonRestrictingSchool",
              "icyOrWet",
              "4WayStop",
              "allWayStop",
              "shoulderLaneAccessible",
              "shoulderLaneInaccessible",
              "nwayStop"
            ]
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "addOnForm1": {
          "type": [
            "Optional",
            [
              "Enum",
              "supplementary",
              "plate"
            ]
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "addOnPosition1": {
          "type": [
            "Optional",
            [
              "Enum",
              "bottom1",
              "bottom2",
              "bottom3",
              "top1",
              "top2",
              "top3",
              "left",
              "right",
              "none"
            ]
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "addRefID2": {
          "type": "String",
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "addInformationType2": {
          "type": [
            "Optional",
            [
              "Enum",
              "noAdditionalInformation",
              "unreadable",
              "zone",
              "restrictingVehicleOther",
              "restrictingOther",
              "restrictingCars",
              "restrictingBusses",
              "restrictingTrailers",
              "restrictingTrucks",
              "restrictingMotorbikes",
              "restrictingTrucksTrailers",
              "restrictingTrucksBusses",
              "restrictingTrucksBussesTrailers",
              "restrictingHazardousTransport",
              "restrictingWeight",
              "restrictingNight",
              "restrictingTime",
              "restrictionStartDistance",
              "restrictingDistance",
              "restrictingRain",
              "restrictingFog",
              "restrictingExit",
              "restrictingRightTurning",
              "restrictingLeftTurning",
              "restrictingLeftAndRightTurning",
              "restrictingChildrenPresent",
              "restrictingFlashing",
              "nonRestrictingOvertakingTractor",
              "nonRestrictingBegin",
              "nonRestrictingEnd",
              "nonRestrictingOther",
              "nonRestrictingOtherInformation",
              "nonRestrictingDangerQueuesLikely",
              "nonRestrictingDangerAccidentsLikely",
              "nonRestrictingDangerIce",
              "restrictingLimitationAhead",
              "nonRestrictingWork",
              "nonRestrictingSchool",
              "icyOrWet",
              "4WayStop",
              "allWayStop",
              "shoulderLaneAccessible",
              "shoulderLaneInaccessible",
              "nwayStop"
            ]
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "addOnForm2": {
          "type": [
            "Optional",
            [
              "Enum",
              "supplementary",
              "plate"
            ]
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "addOnPosition2": {
          "type": [
            "Optional",
            [
              "Enum",
              "bottom1",
              "bottom2",
              "bottom3",
              "top1",
              "top2",
              "top3",
              "left",
              "right",
              "none"
            ]
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "occlusion": {
          "type": [
            "Optional",
            [
              "Enum",
              "none",
              "innerCircle",
              "outerCircle",
              "numbersReadable",
              "numbersUnreadable"
            ]
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "special": {
          "type": [
            "Optional",
            [
              "Enum",
              "none",
              "tripod",
              "illuminatedFront",
              "illuminatedBack",
              "ledNotInverted",
              "repeater",
              "moving",
              "alternating"
            ]
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "rotationX": {
          "type": [
            "Optional",
            [
              "Enum",
              "below10deg",
              "higher10deg",
              "higher20deg",
              "higher30deg"
            ]
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "rotationY": {
          "type": [
            "Optional",
            [
              "Enum",
              "below20deg",
              "higher20deg",
              "higher30deg",
              "higher40deg"
            ]
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "rotationZ": {
          "type": [
            "Optional",
            [
              "Enum",
              "below20deg",
              "higher20deg",
              "higher30deg",
              "higher40deg"
            ]
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "defectiveCondition": {
          "type": [
            "Optional",
            [
              "Enum",
              "normal",
              "dirty",
              "damaged",
              "bleached",
              "snowCovered",
              "stickerPasted",
              "LEDFragmented"
            ]
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "status": {
          "type": [
            "Optional",
            [
              "Enum",
              "finished",
              "toBeChecked"
            ]
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "laneValidity": {
          "type": [
            "Optional",
            [
              "Enum",
              "notValid",
              "otherRoad",
              "egoRoad",
              "egoLane",
              "1LaneLeft",
              "1LaneRight",
              "2LanesLeft",
              "2LanesRight",
              "3LaneLeft",
              "3LaneRight",
              "4LanesLeft",
              "4LanesRight",
              "notValidMasked",
              "temporaryNotValid"
            ]
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "mounting": {
          "type": [
            "Optional",
            [
              "Enum",
              "side",
              "bridge",
              "other"
            ]
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "autoImageContext": {
          "type": "String",
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "autoImageName": {
          "type": "String",
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "auto3dPosX": {
          "type": "String",
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "auto3dPosY": {
          "type": "String",
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "auto3dPosZ": {
          "type": "String",
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "labelingStarted": {
          "type": [
            "Optional",
            [
              "Enum",
              "thisVideo",
              "previousVideo"
            ]
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "IDinPreviousVideo": {
          "type": "String",
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "addTimeRestrPeriod1": {
          "type": "String",
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "addDistRestrValMeter1": {
          "type": "String",
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "addWeightRestrValKg1": {
          "type": "String",
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "addTimeRestrPeriod2": {
          "type": "String",
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "addDistRestrValMeter2": {
          "type": "String",
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "addWeightRestrValKg2": {
          "type": "String",
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "backgroundColor": {
          "type": [
            "Optional",
            [
              "Enum",
              "white",
              "yellow",
              "orangeRed",
              "blue",
              "green",
              "other"
            ]
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "addInformationType3": {
          "type": [
            "Optional",
            [
              "Enum",
              "noAdditionalInformation",
              "unreadable",
              "zone",
              "restrictingVehicleOther",
              "restrictingOther",
              "restrictingCars",
              "restrictingBusses",
              "restrictingTrailers",
              "restrictingTrucks",
              "restrictingMotorbikes",
              "restrictingTrucksTrailers",
              "restrictingTrucksBusses",
              "restrictingTrucksBussesTrailers",
              "restrictingHazardousTransport",
              "restrictingWeight",
              "restrictingNight",
              "restrictingTime",
              "restrictionStartDistance",
              "restrictingDistance",
              "restrictingRain",
              "restrictingFog",
              "restrictingExit",
              "restrictingRightTurning",
              "restrictingLeftTurning",
              "restrictingLeftAndRightTurning",
              "restrictingChildrenPresent",
              "restrictingFlashing",
              "nonRestrictingOvertakingTractor",
              "nonRestrictingBegin",
              "nonRestrictingEnd",
              "nonRestrictingOther",
              "nonRestrictingOtherInformation",
              "nonRestrictingDangerQueuesLikely",
              "nonRestrictingDangerAccidentsLikely",
              "nonRestrictingDangerIce",
              "restrictingLimitationAhead",
              "nonRestrictingWork",
              "nonRestrictingSchool",
              "icyOrWet",
              "4WayStop",
              "allWayStop",
              "shoulderLaneAccessible",
              "shoulderLaneInaccessible",
              "nwayStop"
            ]
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "addOnForm3": {
          "type": [
            "Optional",
            [
              "Enum",
              "supplementary",
              "plate"
            ]
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "addOnPosition3": {
          "type": [
            "Optional",
            [
              "Enum",
              "bottom1",
              "bottom2",
              "bottom3",
              "top1",
              "top2",
              "top3",
              "left",
              "right",
              "none"
            ]
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "addWeightRestrictionValueKg1": {
          "type": [
            "Optional",
            [
              "Enum",
              "restricting3.5t",
              "restricting7.5t",
              "restricting3.5To7.5t",
              "restrictingOver7.5t"
            ]
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "addWeightRestrictionValueKg2": {
          "type": [
            "Optional",
            [
              "Enum",
              "restricting3.5t",
              "restricting7.5t",
              "restricting3.5To7.5t",
              "restrictingOver7.5t"
            ]
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "addWeightRestrictionValueKg3": {
          "type": [
            "Optional",
            [
              "Enum",
              "restricting3.5t",
              "restricting7.5t",
              "restricting3.5To7.5t",
              "restrictingOver7.5t"
            ]
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "addDistRestrValMeter3": {
          "type": "String",
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "addRefID3": {
          "type": "String",
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "addTimeRestrPeriod3": {
          "type": "String",
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        }
      }
    },
    "tsroqmf": {
      "fieldOrder": [
        "prohibitionSignType",
        "endOfSignType",
        "minimumSpeedType",
        "endOfMinimumSpeedType"
      ],
      "annotations": [
        [
          "abstract"
        ],
        [
          "description",
          "This class is an abstract base class containing fields common to tsromf and tsrqmf"
        ]
      ],
      "fields": {
        "prohibitionSignType": {
          "type": [
            "Optional",
            [
              "Enum",
              "noOvertaking",
              "noOvertakingTrucks",
              "5",
              "10",
              "15",
              "20",
              "25",
              "30",
              "35",
              "40",
              "45",
              "50",
              "55",
              "60",
              "65",
              "70",
              "75",
              "80",
              "85",
              "90",
              "95",
              "100",
              "105",
              "110",
              "115",
              "120",
              "125",
              "130",
              "135",
              "140",
              "other",
              "none"
            ]
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "endOfSignType": {
          "type": [
            "Optional",
            [
              "Enum",
              "allLimits",
              "noOvertaking",
              "noOvertakingTrucks",
              "5",
              "10",
              "15",
              "20",
              "25",
              "30",
              "35",
              "40",
              "45",
              "50",
              "55",
              "60",
              "65",
              "70",
              "75",
              "80",
              "85",
              "90",
              "95",
              "100",
              "105",
              "110",
              "115",
              "120",
              "125",
              "130",
              "135",
              "140",
              "other",
              "none"
            ]
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "minimumSpeedType": {
          "type": [
            "Optional",
            [
              "Enum",
              "other",
              "5",
              "10",
              "15",
              "20",
              "25",
              "30",
              "35",
              "40",
              "45",
              "50",
              "55",
              "60",
              "65",
              "70",
              "75",
              "80",
              "85",
              "90",
              "95",
              "100",
              "105",
              "110",
              "115",
              "120",
              "125",
              "130",
              "135",
              "140",
              "none"
            ]
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "endOfMinimumSpeedType": {
          "type": [
            "Optional",
            [
              "Enum",
              "other",
              "5",
              "10",
              "15",
              "20",
              "25",
              "30",
              "35",
              "40",
              "45",
              "50",
              "55",
              "60",
              "65",
              "70",
              "75",
              "80",
              "85",
              "90",
              "95",
              "100",
              "105",
              "110",
              "115",
              "120",
              "125",
              "130",
              "135",
              "140",
              "none"
            ]
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "crossWalkType": {
          "type": [
            "Optional",
            [
              "Enum",
              "none",
              "crossWalk"
            ]
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "tollStationSign": {
          "type": [
            "Optional",
            [
              "Enum",
              "none",
              "tollStation"
            ]
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "Replaced by tollSignType"
            ]
          ]
        },
        "tollSignType": {
          "type": [
            "Optional",
            [
              "Enum",
              "none",
              "tollStation",
              "endOfTollSign"
            ]
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        }
      }
    },
    "tsrqtmf": {
      "fieldOrder": [
        "posX1",
        "posX2",
        "posX3",
        "posY1",
        "posY2",
        "posY3",
        "dangerSignType",
        "dangerSignText"
      ],
      "annotations": [
        [
          "abstract"
        ],
        [
          "description",
          "This class is an abstract base class containing fields common to tsrqmf and tsrtmf"
        ]
      ],
      "fields": {
        "posX1": {
          "type": "Int",
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "posX2": {
          "type": "Int",
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "posX3": {
          "type": "Int",
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "posY1": {
          "type": "Int",
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "posY2": {
          "type": "Int",
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "posY3": {
          "type": "Int",
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "dangerSignType": {
          "type": [
            "Optional",
            [
              "Enum",
              "none",
              "universal",
              "crossroad",
              "slipperyRoad",
              "bendRight",
              "bendLeft",
              "doubleBendFirstRight",
              "doubleBendFirstLeft",
              "steepHillDownwards",
              "steepHillUpwards",
              "unevenRoad",
              "ice",
              "rocks",
              "dirtyRoad",
              "sidewind",
              "roadNarrows",
              "roadNarrowsRight",
              "roadNarrowsLeft",
              "constructionSite",
              "queues",
              "oncomingTraffic",
              "drawBridge",
              "riverbank",
              "trafficLights",
              "pedestrians",
              "zebraCrossing",
              "bicycles",
              "school",
              "cattle",
              "wildAnimals",
              "airTraffic",
              "bus",
              "leveledGate",
              "train",
              "tram",
              "tunnel",
              "roundabout",
              "frailPedestrians",
              "two-WayTrafficCross",
              "t-JunctionLeft",
              "t-JunctionRight",
              "staggeredJunction",
              "mergingLeft",
              "mergingRight",
              "horseRider",
              "softShoulder",
              "ski",
              "accidents",
              "reducedVisibility",
              "other",
              "priorityCrossroad",
              "priorityMinorRoadLeft",
              "priorityMinorRoadRight"
            ]
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "dangerSignText": {
          "type": "String",
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        }
      }
    },
    "tsraddmf": {
      "extends": [
        "FrameMarking",
        "A_POLY4",
        "ClusterElement"
      ],
      "fieldOrder": [
        "autoImageName",
        "frameNumber",
        "mainSignRef",
        "posX1",
        "posX2",
        "posX3",
        "posX4",
        "posY1",
        "posY2",
        "posY3",
        "posY4",
        "refId",
        "streamName"
      ],
      "annotations": [
        [
          "FileInfoCategory",
          "trafficSignRecognitionAddOnMarkings"
        ],
        [
          "SignedWith",
          "sms"
        ],
        [
          "description",
          ""
        ]
      ],
      "fields": {
        "autoImageName": {
          "type": "String",
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "mainSignRef": {
          "type": "String",
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        }
      }
    },
    "tsromf": {
      "extends": [
        "tsrmf",
        "tsroqmf",
        "ClusterElement"
      ],
      "fieldOrder": [
        "refId",
        "frameNumber",
        "streamName",
        "prohibitionSignType",
        "endOfSignType",
        "confusingType",
        "minimumSpeedType",
        "endOfMinimumSpeedType",
        "advisorySign",
        "invertedVMSSign",
        "addRefID1",
        "addInformationType1",
        "addOnForm1",
        "addOnPosition1",
        "addRefID2",
        "addInformationType2",
        "addOnForm2",
        "addOnPosition2",
        "occlusion",
        "special",
        "defectiveCondition",
        "status",
        "laneValidity",
        "mounting",
        "autoImageContext",
        "autoImageName",
        "labelingStarted",
        "IDinPreviousVideo",
        "addTimeRestrPeriod1",
        "addDistRestrValMeter1",
        "addWeightRestrValKg1",
        "addTimeRestrPeriod2",
        "addDistRestrValMeter2",
        "addWeightRestrValKg2",
        "trackRoutingType",
        "backgroundColor",
        "rotationX",
        "rotationY",
        "rotationZ",
        "auto3dPosX",
        "auto3dPosY",
        "auto3dPosZ",
        "posX",
        "posY",
        "radiusA",
        "radiusB",
        "rotationAngle",
        "crossWalkType"
      ],
      "annotations": [
        [
          "metaDataRef",
          "tsrmd"
        ],
        [
          "SignedWith",
          "sms"
        ],
        [
          "FileInfoCategory",
          "trafficSignRecognitionOvalMarkings"
        ]
      ],
      "fields": {
        "confusingType": {
          "type": [
            "Optional",
            [
              "Enum",
              "none",
              "generalSpeedInfo",
              "speedSignOnTruck",
              "highwayExitNumber",
              "noOvertakingTrucks",
              "heightOrWeightOrWidthSigns",
              "EndOfNoOvertakingTrucks",
              "lowEmissionZone"
            ]
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "posX": {
          "type": "Int",
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "posY": {
          "type": "Int",
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "radiusA": {
          "type": "Int",
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "radiusB": {
          "type": "Int",
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "rotationAngle": {
          "type": "Int",
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "trackRoutingType": {
          "type": [
            "Optional",
            [
              "Enum",
              "noEntry",
              "roundAbout",
              "keepLeft",
              "keepRight",
              "keepStraight",
              "keepStraightOrLeft",
              "keepStraightOrRight",
              "turnLeft",
              "turnRight",
              "turnLeftOrRight",
              "other",
              "none"
            ]
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "crossWalkType": {
          "type": [
            "Optional",
            [
              "Enum",
              "none",
              "crossWalk"
            ]
          ],
          "annotations": [
            [ "description", "Specifies if there are crosswalks in the frame" ]
          ]
        }
      }
    },
    "tsrqmf": {
      "extends": [
        "tsrmf",
        "tsroqmf",
        "tsrqtmf",
        "ClusterElement"
      ],
      "fieldOrder": [
        "refId",
        "frameNumber",
        "streamName",
        "prohibitionSignType",
        "endOfSignType",
        "confusingType",
        "minimumSpeedType",
        "endOfMinimumSpeedType",
        "advisorySign",
        "invertedVMSSign",
        "addRefID1",
        "addInformationType1",
        "addOnForm1",
        "addOnPosition1",
        "addRefID2",
        "addInformationType2",
        "addOnForm2",
        "addOnPosition2",
        "occlusion",
        "special",
        "defectiveCondition",
        "status",
        "laneValidity",
        "mounting",
        "autoImageContext",
        "autoImageName",
        "labelingStarted",
        "IDinPreviousVideo",
        "addTimeRestrPeriod1",
        "addDistRestrValMeter1",
        "addWeightRestrValKg1",
        "addTimeRestrPeriod2",
        "addDistRestrValMeter2",
        "addWeightRestrValKg2",
        "crossWalkType",
        "recommendationSignType",
        "endOfRecommendationSignType",
        "dangerSignType",
        "roadCategorySignType",
        "backgroundColor",
        "rotationX",
        "rotationY",
        "rotationZ",
        "auto3dPosX",
        "auto3dPosY",
        "auto3dPosZ",
        "posX1",
        "posX2",
        "posX3",
        "posX4",
        "posY1",
        "posY2",
        "posY3",
        "posY4",
        "laneChangeTrafficSigns"
      ],
      "annotations": [
        [
          "metaDataRef",
          "tsrmd"
        ],
        [
          "SignedWith",
          "sms"
        ],
        [
          "FileInfoCategory",
          "trafficSignRecognitionQuadrangleMarkings"
        ]
      ],
      "fields": {
        "posX4": {
          "type": "Int",
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "posY4": {
          "type": "Int",
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "confusingType": {
          "type": [
            "Optional",
            [
              "Enum",
              "none",
              "generalSpeedInfo",
              "heightOrWeightOrWidthSigns"
            ]
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "recommendationSignType": {
          "type": [
            "Optional",
            [
              "Enum",
              "other",
              "5",
              "10",
              "15",
              "20",
              "25",
              "30",
              "35",
              "40",
              "45",
              "50",
              "55",
              "60",
              "65",
              "70",
              "75",
              "80",
              "85",
              "90",
              "95",
              "100",
              "105",
              "110",
              "115",
              "120",
              "125",
              "130",
              "135",
              "140",
              "none"
            ]
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "endOfRecommendationSignType": {
          "type": [
            "Optional",
            [
              "Enum",
              "other",
              "5",
              "10",
              "15",
              "20",
              "25",
              "30",
              "35",
              "40",
              "45",
              "50",
              "55",
              "60",
              "65",
              "70",
              "75",
              "80",
              "85",
              "90",
              "95",
              "100",
              "105",
              "110",
              "115",
              "120",
              "125",
              "130",
              "135",
              "140",
              "none"
            ]
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "roadCategorySignType": {
          "type": [
            "Optional",
            [
              "Enum",
              "none",
              "HighwayBegin",
              "HighwayEnd",
              "MotorwayBegin",
              "MotorwayEnd",
              "ExpresswayBegin",
              "ExpresswayEnd",
              "LivingStreetBegin",
              "LivingStreetEnd",
              "CityEntry",
              "CityExit",
              "limitedAccessBegin",
              "limitedAccessEnd"
            ]
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "laneChangeTrafficSigns": {
          "type": [
            "Optional",
            [
              "Enum",
              "none",
              "chicaneAnnoucementRight",
              "chicaneAnnoucementLeft",
              "chicaneAnnouncementMisc",
              "chicaneAnnouncementClosureRight",
              "chicaneAnnouncementClosureLeft",
              "laneClosureRight",
              "laneClosureLeft",
              "laneClosureSign",
              "laneOpenSign",
              "laneChangeLeft",
              "laneChangeRight",
              "shoulderLaneClosure",
              "shoulderLaneOpen",
              "laneClosed",
              "laneOpen"
            ]
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        }
      }
    },
    "tsrtmf": {
      "extends": [
        "tsrmf",
        "tsrqtmf",
        "ClusterElement"
      ],
      "fieldOrder": [
        "refId",
        "frameNumber",
        "streamName",
        "backgroundColor",
        "advisorySign",
        "invertedVMSSign",
        "addRefID1",
        "addInformationType1",
        "addOnForm1",
        "addOnPosition1",
        "addTimeRestrPeriod1",
        "addDistRestrValMeter1",
        "addWeightRestrValKg1",
        "addRefID2",
        "addInformationType2",
        "addOnForm2",
        "addOnPosition2",
        "addTimeRestrPeriod2",
        "addDistRestrValMeter2",
        "addWeightRestrValKg2",
        "occlusion",
        "special",
        "defectiveCondition",
        "status",
        "laneValidity",
        "mounting",
        "labelingStarted",
        "IDinPreviousVideo",
        "autoImageName",
        "autoImageContext",
        "dangerSignType",
        "rotationX",
        "rotationY",
        "rotationZ",
        "auto3dPosX",
        "auto3dPosY",
        "auto3dPosZ",
        "posX1",
        "posX2",
        "posX3",
        "posY1",
        "posY2",
        "posY3"
      ],
      "annotations": [
        [
          "metaDataRef",
          "tsrmd"
        ],
        [
          "SignedWith",
          "sms"
        ],
        [
          "FileInfoCategory",
          "trafficSignRecognitionTriangleMarkings"
        ]
      ]
    },
    "lsgmf": {
      "extends": "FrameMarking",
      "fieldOrder": [
        "frameNumber",
        "streamName",
        "refId",
        "groupType",
        "distanceType"
      ],
      "annotations": [
        [
          "metaDataRef",
          "lsrmd"
        ],
        [
          "SignedWith",
          "sms"
        ],
        [
          "FileInfoCategory",
          "lightSourceGroupMarkings"
        ]
      ],
      "fields": {
        "groupType": {
          "type": [
            "Enum",
            "vehicle",
            "reflectorLine",
            "streetlampLine",
            "netlampsOnHorizon",
            "netlampCluster",
            "trafficSign",
            "NA"
          ],
          "annotations": [
            [
              "description",
              "Identifies the group type of a light source group."
            ]
          ]
        },
        "distanceType": {
          "type": [
            "Enum",
            "mayDetect",
            "mustDetect",
            "NA"
          ],
          "annotations": [
            [
              "description",
              "This attribute is used to distinguish the relevant vehicles which must be detected (according to their distance) and which can be detected."
            ]
          ]
        }
      }
    },
    "vlsgmf": {
      "extends": "lsgmf",
      "fieldOrder": [
        "frameNumber",
        "streamName",
        "refId",
        "groupType",
        "distanceType",
        "vehicleType",
        "drivingDirection",
        "vehicleDistance",
        "vehicleFootPrint"
      ],
      "annotations": [
        [
          "FileInfoCategory",
          "vehicleLightSourceGroupMarkings"
        ],
        [
          "SignedWith",
          "sms"
        ],
        [
          "description",
          "Specific attributes for light source groups of vehicle type"
        ]
      ],
      "fields": {
        "vehicleType": {
          "type": [
            "Enum",
            "car",
            "bus",
            "truck",
            "transporter",
            "motorcycle",
            "bicycle",
            "notAVehicle",
            "NA"
          ],
          "annotations": [
            [
              "description",
              "Type of vehicle defined by a group of light sources"
            ]
          ]
        },
        "drivingDirection": {
          "type": [
            "Enum",
            "oncoming",
            "preceding",
            "overtaking",
            "crossing",
            "parking",
            "NA",
            "undefined"
          ],
          "annotations": [
            [
              "description",
              "Defines the driving direction of each vehicle"
            ]
          ]
        },
        "vehicleDistance": {
          "type": [
            "Optional",
            "Double"
          ],
          "annotations": [
            [
              "description",
              "The vehicle's 3d-distance from the ego-vehicle"
            ]
          ]
        },
        "vehicleFootPrint": {
          "type": [
            "Optional",
            "Int"
          ],
          "annotations": [
            [
              "description",
              "The 1-indexed pixel row of the vehicle's contact point with ground"
            ]
          ]
        }
      }
    },
    "vdnmf": {
      "extends": [
        "vdbmf",
        "VehicleOcclusion",
        "vlsgmf",
        "PA"
      ],
      "fieldOrder": [
        "frameNumber",
        "refLine",
        "streamName",
        "refId",
        "groupType",
        "distanceType",
        "vehicleType",
        "drivingDirection",
        "vehicleDistance",
        "vehicleFootPrint",
        "top",
        "bottom",
        "left",
        "right",
        "objectType",
        "pose",
        "lighting",
        "occlusion",
        "bottomOccluded",
        "laneAssignment",
        "turnIndicator",
        "brakeLight",
        "warningIndicator",
        "direction"
      ],
      "annotations": [
        [
          "metaDataRef",
          "vdmd"
        ],
        [
          "FileInfoCategory",
          "vehicleNightMarkings"
        ],
        [
          "SignedWith",
          "sms"
        ],
        [
          "description",
          "Specific attributes for light source groups of vehicle type"
        ]
      ],
      "fields": {
        "objectType": {
          "type": [
            "Enum",
            "car",
            "truck",
            "bus",
            "otherVehicle",
            "nondescript",
            "FP"
          ],
          "annotations": [
            [
              "required"
            ],
            [
              "description",
              "Car include types 'car', 'minibus' and 'van', otherVehicle should contain 'caravan', 'motorhome'."
            ]
          ]
        },
        "refLine": {
          "type": [
            "Optional",
            "Int"
          ],
          "annotations": [
            [
              "optional"
            ],
            [
              "description",
              "Coordinate of bumper corner on vehicle."
            ]
          ]
        }
      }
    },
    "twnmf": {
      "extends": [
        "vdbmf",
        "HumanOcclusion",
        "lsgmf",
        "PA"
      ],
      "fieldOrder": [
        "frameNumber",
        "streamName",
        "refId",
        "top",
        "bottom",
        "left",
        "right",
        "objectType",
        "pose",
        "lighting",
        "occlusion",
        "headOccluded",
        "feetOccluded",
        "laneAssignment",
        "turnIndicator",
        "brakeLight",
        "warningIndicator",
        "direction"
      ],
      "annotations": [
        [
          "metaDataRef",
          "pdmd"
        ],
        [
          "FileInfoCategory",
          "twoWheelerNightMarkings"
        ],
        [
          "SignedWith",
          "sms"
        ],
        [
          "description",
          "Labeling of two wheelers night time"
        ]
      ],
      "fields": {
        "refLine": {
          "type": [
            "Optional",
            "Int"
          ],
          "annotations": [
            [
              "description",
              "X coordinate of far edge of two-wheeler."
            ]
          ]
        },
        "objectType": {
          "type": [
            "Enum",
            "mopedist",
            "cyclist",
            "motorcyclist",
            "nondescript",
            "otherTwoWheeler",
            "FP"
          ],
          "annotations": [
            [
              "required"
            ],
            [
              "description",
              "Car include types 'car', 'minibus' and 'van', otherVehicle should contain 'caravan', 'motorhome'."
            ]
          ]
        },
        "strangePose": {
          "type": "Bool",
          "annotations": [
            [
              "required"
            ],
            [
              "description",
              "Does the object has a strange pose?"
            ]
          ]
        }
      }
    },
    "idmf": {
      "fieldOrder": [
        "startFrame",
        "endFrame",
        "imdType",
        "frameCoverage",
        "level",
        "diffusionShape",
        "rainDrops"
      ],
      "annotations": [
        [
          "metaDataRef",
          "vmd"
        ],
        [
          "SignedWith",
          "sms"
        ],
        [
          "FileInfoCategory",
          "imageDiagnosisMarkings"
        ]
      ],
      "fields": {
        "startFrame": {
          "type": "Int",
          "annotations": [
            [
              "required"
            ],
            [
              "First frame of the current event. Set by labeller.",
              ""
            ]
          ]
        },
        "endFrame": {
          "type": "Int",
          "annotations": [
            [
              "required"
            ],
            [
              "Last frame of the current event. Set by labeller.",
              ""
            ]
          ]
        },
        "imdType": {
          "type": [
            "Enum",
            "lowSun",
            "roadGlare",
            "waterOnWindshield",
            "diffusion",
            "blur",
            "occlusion",
            "fogAtNight",
            "indescript"
          ],
          "annotations": [
            [
              "required"
            ],
            [
              "lowSun = Sun visible in image. roadGlare = glare from wet road. waterOnWindshield = water film on windshield between wiper strokes appearing blurry. diffusion = spreading of light from light sources due to obstacle changing shape and size of light source. blur = obstacle in front of camera resulting in a blurry. occlusion = non-transparent obstacle in front of camera. Set by labeller. ",
              ""
            ]
          ]
        },
        "precision": {
          "type": [
            "Optional",
            [
              "Enum",
              "perFrame",
              "perInterval"
            ]
          ],
          "annotations": [
            [
              "required"
            ],
            [
              "perFrame = only includes frames that fulfill the requirements of the event (used for classifiction). perInterval = imd event over an intervall that contains frames with a repeated occurance of the imd problem with clear frames or frames with other imd problems in between (used for validation). Set by labeller. ",
              ""
            ]
          ]
        },
        "frameCoverage": {
          "type": [
            "Optional",
            [
              "Enum",
              "full",
              "center",
              "half",
              "quarter",
              "minor"
            ]
          ],
          "annotations": [
            [
              "required"
            ],
            [
              "The event covers, full = the complete frame, center = the center area of the frame, half = > 1/2 frame, quarter= > 1/4 of the frame, minor = < 1/4 of the frame. Coverage of the sky area is not considered. Set by labeller.",
              ""
            ]
          ]
        },
        "level": {
          "type": [
            "Optional",
            [
              "Enum",
              "heavy",
              "medium",
              "light",
              "various"
            ]
          ],
          "annotations": [
            [
              "required"
            ],
            [
              "The event covers, full = the complete frame, center = the center area of the frame, half = > 1/2 frame, quarter= > 1/4 of the frame. Coverage of the sky area is not considered. Set by labeller.",
              ""
            ]
          ]
        },
        "diffusionShape": {
          "type": [
            "Optional",
            [
              "Enum",
              "round",
              "cones",
              "otherDiffusion"
            ]
          ],
          "annotations": [
            [
              "required"
            ],
            [
              "The spreading from light sources due to obstacles with shape: round = the lightsources remain round but become wider, cones = streaks of light through lightsources, other = all other changes in shape of light sources. Set by labeller.",
              ""
            ]
          ]
        },
        "rainDrops": {
          "type": [
            "Optional",
            "Bool"
          ],
          "annotations": [
            [
              "required"
            ],
            [
              "Indicates if raindrops on the windshield with a non-blurry border exists true/false. Set by labeller.",
              ""
            ]
          ]
        }
      }
    },
    "NonDescript": {
      "extends": [
        "FrameMarking",
        "PA"
      ],
      "annotations": [
        [
          "abstract"
        ],
        [
          "description",
          "Non descripts are regions in the image that should be excluded from certain types of postprocessing which involves marked data"
        ]
      ]
    },
    "cmfNonDescript": {
      "extends": "NonDescript",
      "annotations": [
        [
          "description",
          "Non descripts for cyclist objects"
        ],
        [
          "SignedWith",
          "sms"
        ]
      ]
    },
    "TWAM": {
      "annotations": [
        [ "abstract" ],
        [ "description", "Abstract class for marking front and rear wheel points, storing coordinates in integer precision" ]
      ],
      "fields": {
        "FrontWheelCenterPointX": {
          "type": [ "Optional", "Int" ],
          "annotations": [
            [ "optional" ],
            [ "description", "X coordinate of the center front wheel." ]
          ]
        },
        "FrontWheelCenterPointY": {
          "type": [ "Optional", "Int" ],
          "annotations": [
            [ "optional" ],
            [ "description", "Y coordinate of the center front wheel." ]
          ]
        },
        "FrontWheelSidePointX": {
          "type": [ "Optional", "Int" ],
          "annotations": [
            [ "optional" ],
            [ "description", "X coordinate of the front side wheel." ]
          ]
        },
        "FrontWheelSidePointY": {
          "type": [ "Optional", "Int" ],
          "annotations": [
            [ "optional" ],
            [ "description", "Y coordinate of the front bottom wheel." ]
          ]
        },
        "RearWheelCenterPointX": {
          "type": [ "Optional", "Int" ],
          "annotations": [
            [ "optional" ],
            [ "description", "X coordinate of the center rear wheel." ]
          ]
        },
        "RearWheelCenterPointY": {
          "type": [ "Optional", "Int" ],
          "annotations": [
            [ "optional" ],
            [ "description", "Y coordinate of the center rear wheel." ]
          ]
        },
        "RearWheelSidePointX": {
          "type": [ "Optional", "Int" ],
          "annotations": [
            [ "optional" ],
            [ "description", "X coordinate of the rear side wheel." ]
          ]
        },
        "RearWheelSidePointY": {
          "type": [ "Optional", "Int" ],
          "annotations": [
            [ "optional" ],
            [ "description", "Y coordinate of the rear side wheel." ]
          ]
        }
      }
    },
    "cmf": {
      "extends": [
        "TWAM",
        "FrameMarking"
      ],
      "fieldOrder": [
        "frameNumber",
        "streamName",
        "refId"
      ],
      "annotations": [
        [
          "metaDataRef",
          "vdmd"
        ],
        [
          "FileInfoCategory",
          "cycleMarking"
        ],
        [
          "SignedWith",
          "sms"
        ],
        [
          "description",
          "Cycle class used to mark specific attributes."
        ]
      ],
      "fields": {
        "HeadPointX": {
          "type": [
            "Optional",
            "Int"
          ],
          "annotations": [
            [
              "optional"
            ],
            [
              "description",
              "x coordinate of highest point above the head of cyclist."
            ]
          ]
        },
        "HeadPointY": {
          "type": [
            "Optional",
            "Int"
          ],
          "annotations": [
            [
              "optional"
            ],
            [
              "description",
              "Y coordinate of highest point above the head of cyclist."
            ]
          ]
        },
        "PelvicPointX": {
          "type": [
            "Optional",
            "Int"
          ],
          "annotations": [
            [
              "optional"
            ],
            [
              "description",
              "X coordinate of the pelvic point of cyclist."
            ]
          ]
        },
        "PelvicPointY": {
          "type": [
            "Optional",
            "Int"
          ],
          "annotations": [
            [
              "optional"
            ],
            [
              "description",
              "Y coordinate of the pelvic point of cyclist."
            ]
          ]
        },
        "FrontWheelBottomPointX": {
          "type": [
            "Optional",
            "Int"
          ],
          "annotations": [
            [
              "optional"
            ],
            [
              "description",
              "X coordinate of the front bottom wheel."
            ]
          ]
        },
        "FrontWheelBottomPointY": {
          "type": [
            "Optional",
            "Int"
          ],
          "annotations": [
            [
              "optional"
            ],
            [
              "description",
              "Y coordinate of the front bottom wheel."
            ]
          ]
        },
        "RearWheelBottomPointX": {
          "type": [
            "Optional",
            "Int"
          ],
          "annotations": [
            [
              "optional"
            ],
            [
              "description",
              "X coordinate of the rear bottom wheel."
            ]
          ]
        },
        "RearWheelBottomPointY": {
          "type": [
            "Optional",
            "Int"
          ],
          "annotations": [
            [
              "optional"
            ],
            [
              "description",
              "Y coordinate of the rear bottom wheel."
            ]
          ]
        },
        "objectType": {
          "type": [
            "Enum",
            "bicycle",
            "tricycle",
            "other"
          ],
          "annotations": [
            [
              "required"
            ],
            [
              "description",
              "Type of marked object."
            ]
          ]
        },
        "items": {
          "type": [
            "Optional",
            [
              "Set",
              [
                "Enum",
                "helmet",
                "bicycleSeat"
              ]
            ]
          ],
          "annotations": [
            [
              "description",
              "A set of items a cycle can have."
            ]
          ]
        },
        "occlusionFrontWheel": {
          "type": [
            "Enum",
            "none",
            "partial",
            "ego",
            "full",
            "outOfImage"
          ],
          "annotations": [
            [
              "required"
            ],
            [
              "description",
              "Degree of occlusion."
            ]
          ]
        },
        "occlusionRearWheel": {
          "type": [
            "Enum",
            "none",
            "partial",
            "ego",
            "full",
            "outOfImage"
          ],
          "annotations": [
            [
              "required"
            ],
            [
              "description",
              "Degree of occlusion."
            ]
          ]
        },
        "twoWheelerRefId": {
          "type": "Int",
          "annotations": [
            [
              "required"
            ],
            [
              "description",
              "Id number for associate two wheeler object."
            ]
          ]
        }
      }
    },
    "RDMC": {
      "extends": [
        "FrameMarking"
      ],
      "annotations": [
        "abstract"
      ],
      "fields": {
        "supportingPointsX": {
          "type": [
            "Array",
            "Int"
          ],
          "annotations": [
            [
              "description",
              "A label is represented by a list of at least 3 supporting points in image coordinates (x_img, y_img)."
            ]
          ]
        },
        "supportingPointsY": {
          "type": [
            "Array",
            "Int"
          ],
          "annotations": [
            [
              "description",
              "A label is represented by a list of at least 3 supporting points in image coordinates (x_img, y_img)."
            ]
          ]
        }
      }
    },
    "rbmf": {
      "extends": [
        "RDMC"
      ],
      "annotations": [
        [
          "SignedWith",
          "sms"
        ],
        [
          "FileInfoCategory",
          "roadBoundaryMarkings"
        ]
      ],
      "fields": {
        "edgeClass": {
          "type": [
            "Array",
            [
              "Enum",
              "notSet",
              "abyss/chasm/deepWater",
              "animal",
              "asphalt/concrete",
              "box/bin/pillar",
              "building",
              "busShelter",
              "cart",
              "cobblestone/tiled",
              "context",
              "crest",
              "curb",
              "debris",
              "ditch",
              "fence",
              "grass",
              "gravel/dirt/soil",
              "guardrail",
              "hole",
              "imageEdge",
              "laneOuterEdge",
              "N/A",
              "opticalObstruction",
              "other",
              "person",
              "pole",
              "repetitiveBarrier",
              "rock/stone",
              "sightLimit",
              "sky/horizon",
              "slope",
              "snow",
              "solidBarrier",
              "terrain",
              "trafficCone/Pylon",
              "trees/bushes",
              "twoWheeler",
              "twoWheelerParked",
              "unknown",
              "vehicle",
              "wall"
            ]
          ],
          "annotations": [
            [
              "description",
              "Edge types- edge class"
            ]
          ]
        },
        "objectType": {
          "type": [
            "Enum",
            "egoRoad",
            "offRoad",
            "obstruction",
            "nondescript",
            "drivableSurface",
            "parking"
          ],
          "annotations": [
            [
              "description",
              "Which object type it is."
            ]
          ]
        },
        "roadCover": {
          "type": [
            "Enum",
            "notSet",
            "asphalt/concrete",
            "gravel/dirt/soil",
            "cobblestoned/Tiled",
            "grassy",
            "unknown",
            "N/A",
            "other"
          ],
          "annotations": [
            [
              "description",
              "Which road cover it is."
            ]
          ]
        },
        "edgeHeight": {
          "type": [
            "Array",
            [
              "Enum",
              "notSet",
              "flat",
              "raised",
              "raisedNonTraversable",
              "lowered",
              "loweredNonTraversable",
              "N/A"
            ]
          ],
          "annotations": [
            [
              "description",
              "Which edge height it is."
            ]
          ]
        },
        "edgeContinuous": {
          "type": [
            "Array",
            [
              "Enum",
              "notSet",
              "N/A",
              "yes",
              "no"
            ]
          ],
          "annotations": [
            [
              "description",
              "Is it continous?"
            ]
          ]
        },
        "edgeOnGround": {
          "type": [
            "Array",
            [
              "Enum",
              "notSet",
              "N/A",
              "yes",
              "no"
            ]
          ],
          "annotations": [
            [
              "description",
              "Is the edge on ground?"
            ]
          ]
        },
        "edgeVisibility": {
          "type": [
            "Array",
            [
              "Enum",
              "notSet",
              "sharp",
              "unsharp",
              "difuse",
              "N/A"
            ]
          ],
          "annotations": [
            [
              "description",
              "What is the edge visibility"
            ]
          ]
        }
      }
    },
    "rdmf": {
      "extends": [
        "RDMC"
      ],
      "annotations": [
        [
          "SignedWith",
          "sms"
        ],
        [
          "FileInfoCategory",
          "roadDetectionMarkings"
        ]
      ],
      "fields": {
        "supportingPointsType": {
          "type": [
            "Array",
            [
              "Enum",
              "Grass",
              "Gravel",
              "Soil",
              "Curb",
              "Slope",
              "Trees/bushes",
              "Buildings",
              "Guardrails",
              "Person",
              "Vehicle",
              "Sky/horizon",
              "Other/unknown",
              "Concrete barrier",
              "Stones"
            ]
          ],
          "annotations": [
            [
              "description",
              "Edge types"
            ]
          ]
        },
        "objectType": {
          "type": [
            "Enum",
            "obstruction",
            "nondescript",
            "road"
          ],
          "annotations": [
            [
              "description",
              "Which object type it is."
            ]
          ]
        },
        "roadCover": {
          "type": [
            "Enum",
            "asphalt",
            "gravel",
            "soil",
            "concrete",
            "stone"
          ],
          "annotations": [
            [
              "description",
              "Which road cover it is."
            ]
          ]
        }
      }
    },
    "ClusterElement": {
      "annotations": [
        [
          "abstract"
        ],
        [
          "description",
          "This class is an abstract base class for markings that can form a group(cluster) with other markings from the same frame."
        ]
      ],
      "fields": {
        "clusterID": {
          "type": "Int",
          "annotations": [
            [
              "description",
              "A value that is used when the marking is part of a group of markings which describes the real object from the media file."
            ]
          ]
        }
      }
    },
    "rbvf": {
      "extends": [
        "RDMC",
        "ClusterElement",
        "MarkingCreationInformation"
      ],
      "annotations": [
        [
          "SignedWith",
          "sms"
        ],
        [
          "FileInfoCategory",
          "roadBoundaryValidationMarkings"
        ]
      ],
      "fields": {
        "roadCover": {
          "type": [
            "Enum",
            "asphalt/concrete",
            "gravel/dirt/soil",
            "cobblestone/tiled",
            "grassy",
            "other",
            "unknown",
            "N/A"
          ],
          "annotations": [
            [
              "description",
              "Which object type it is."
            ]
          ]
        },
        "edgeClass": {
          "type": [
            "Array",
            [
              "Enum",
              "notSet",
              "abyss/chasm/deepWater",
              "curb",
              "ditch",
              "fence",
              "grass",
              "gravel/dirt/soil",
              "guardrail",
              "repetitiveBarierUnder0.5m",
              "repetitiveBarierBetween0.5-1.5m",
              "repetitiveBarierBetween1.5m-4m",
              "snow",
              "wall",
              "other"
            ]
          ],
          "annotations": [
            [
              "description",
              "Edge types- edge class"
            ]
          ]
        },
        "edgeHeight": {
          "type": [
            "Array",
            [
              "Enum",
              "traversable",
              "nonTraversable"
            ]
          ],
          "annotations": [
            [
              "description",
              "Which edge height it is."
            ]
          ]
        },
        "edgeVisibility": {
          "type": [
            "Array",
            [
              "Enum",
              "sharp",
              "unsharp",
              "difuse"
            ]
          ],
          "annotations": [
            [
              "description",
              "What is the edge visibility"
            ]
          ]
        },
        "edgeOcclusion": {
          "type": [
            "Array",
            [
              "Enum",
              "none",
              "car",
              "truck",
              "pedestrian",
              "manyPedestrians",
              "cyclist",
              "motorcycle",
              "other"
            ]
          ],
          "annotations": [
            [
              "description",
              "Specifies what occludes the marking"
            ]
          ]
        }
      }
    },
    "signalLamp": {
      "extends": [
        "A_POINT",
        "FrameMarking"
      ],
      "annotations": [
        [
          "FileInfoCategory",
          "trafficLightSignalLamp"
        ],
        [
          "SignedWith",
          "sms"
        ],
        [
          "description",
          "An individual traffic light lamp contained within a traffic light sign."
        ]
      ],
      "fields": {
        "radiusPointX": {
          "type": [
            "Optional",
            "Int"
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "Image coordinate. Set by labeler."
            ]
          ]
        },
        "radiusPointY": {
          "type": [
            "Optional",
            "Int"
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "Image coordinate. Set by labeler."
            ]
          ]
        },
        "parentRefId": {
          "type": "Int",
          "annotations": [
            [
              "required"
            ],
            [
              "description",
              "Id number for the parent object."
            ]
          ]
        },
        "signalType": {
          "type": [
            "Set",
            [
              "Enum",
              "circle",
              "rightArrow",
              "leftArrow",
              "upArrow",
              "downArrow",
              "uTurnLeft",
              "uTurnRight",
              "upLeftArrow",
              "upRightArrow",
              "leftUTurnLeftArrow",
              "rightUTurnRightArrow",
              "invertedArrow",
              "other"
            ]
          ],
          "annotations": [
            [
              "required"
            ],
            [
              "description",
              "Defines what type of signal lamp this is."
            ]
          ]
        },
        "occlusion": {
          "type": [
            "Enum",
            "none",
            "partial",
            "full"
          ],
          "annotations": [
            [
              "required"
            ],
            [
              "description",
              "Degree of occlusion."
            ]
          ]
        },
        "occlusionType": {
          "type": [
            "Enum",
            "none",
            "byItSelf",
            "byAnotherObject"
          ],
          "annotations": [
            [
              "required"
            ],
            [
              "description",
              "The type of object this lamp is occluded by."
            ]
          ]
        },
        "lampState": {
          "type": [
            "Optional",
            [
              "Enum",
              "flashing",
              "on",
              "off"
            ]
          ],
          "annotations": [
            [
              "description",
              "State"
            ]
          ]
        },
        "state": {
          "type": [
            "Optional",
            "Bool"
          ],
          "annotations": [
            [
              "NotEditable"
            ],
            [
              "description",
              "Obsolete. Use lampState field instead."
            ]
          ]
        },
        "color": {
          "type": [
            "Optional",
            [
              "Enum",
              "red",
              "amber",
              "green",
              "white"
            ]
          ],
          "annotations": [
            [
              "description",
              "Color of traffic lamp (when it is lit)."
            ]
          ]
        }
      }
    },
    "tlmf": {
      "extends": [ "ROI", "ClusterElement" ],
      "annotations": [
        [
          "FileInfoCategory",
          "trafficLightMarking"
        ],
        [
          "SignedWith",
          "sms"
        ],
        [
          "description",
          "A traffic light sign, that means the whole box which is composed of several lamps."
        ]
      ],
      "fields": {
        "category": {
          "type": [
            "Set",
            [
              "Enum",
              "twoLightsVertical",
              "twoLightsHorizontal",
              "threeLightsVertical",
              "threeLightsHorizontal",
              "fourLightsVertical",
              "fourLightsHorizontal",
              "publicTransport",
              "pedestrianTrafficlight",
              "cyclistTrafficLight",
              "pedestrian",
              "cyclist",
              "nondescript",
              "singleLampLight",
              "largePanel",
              "railwayCrossing",
              "dogHouseTrafficLight",
              "hawkTrafficLight",
              "nondescriptCrosswalk",
              "nondescriptCommute",
              "nondescriptTrain",
              "nondescriptOther",
              "other"
            ]
          ],
          "annotations": [
            [
              "required"
            ],
            [
              "description",
              "Defines what type of traffic light this is."
            ]
          ]
        },
        "addOn": {
          "type": "Bool",
          "annotations": [
            [
              "required"
            ],
            [
              "description",
              "Indicates if this object has an aditional sign on."
            ]
          ]
        },
        "pose": {
          "type": [
            "Optional",
            [
              "Enum",
              "front",
              "rear",
              "side"
            ]
          ],
          "annotations": [
            [
              "description",
              "Specifies the orientation of the traffic light."
            ]
          ]
        },
        "occlusion": {
          "type": [
            "Enum",
            "none",
            "partial",
            "full"
          ],
          "annotations": [
            [
              "required"
            ],
            [
              "description",
              "Degree of occlusion."
            ]
          ]
        },
        "lampTechnology": {
          "type": [
            "Optional",
            [
              "Enum",
              "other",
              "led"
            ]
          ],
          "annotations": [
            [
              "description",
              "What kind of lamps are built into the sign."
            ]
          ]
        },
        "position": {
          "type": [
            "Optional",
            [
              "Enum",
              "egoLane",
              "neighbourLaneLeft",
              "neighbourLaneRight",
              "intersection",
              "neighbourLaneSecondLeft",
              "neighbourLaneSecondRight"
            ]
          ],
          "annotations": [
            [
              "description",
              "Position regarding ego car."
            ]
          ]
        },
        "state": {
          "type": [
            "Optional",
            [
              "Enum",
              "flashing",
              "on",
              "off"
            ]
          ],
          "annotations": [
            [
              "description",
              "State"
            ]
          ]
        },
        "color": {
          "type": [
            "Optional",
            [
              "Enum",
              "red",
              "yellow",
              "green",
              "greenYellow",
              "redYellow",
              "redYellowGreen",
              "greenRed",
              "white",
              "other"
            ]
          ],
          "annotations": [
            [
              "description",
              "Color"
            ]
          ]
        },
        "laneAssignment": {
          "type": [
            "Set",
            [
              "Enum",
              "egoLane",
              "neighbourLaneLeft",
              "neighbourLaneRight",
              "intersection",
              "secondNeighbourLaneLeft",
              "secondNeighbourLaneRight",
              "thirdNeighbourLaneLeft",
              "thirdNeighbourLaneRight",
              "fourthNeighbourLaneLeft",
              "fourthNeighbourLaneRight",
              "fifthNeighbourLaneLeft",
              "fifthNeighbourLaneRight"
            ]
          ],
          "annotations": [
            [
              "description",
              "indicates for which lane is assigned a traffic lamp"
            ]
          ]
        },
        "symbol": {
          "type": [
            "Set",
            [
              "Enum",
              "noSymbol",
              "arrowStraight",
              "arrowLeft",
              "arrowSlopingLeftUp",
              "arrowSlopingLeftDown",
              "arrowSlopingLeft",
              "arrowRight",
              "arrowSlopingRightUp",
              "arrowSlopingRightDown",
              "arrowSlopingRight",
              "u-turnLeft",
              "u-turnRight",
              "arrowStraight+Left",
              "arrowStraight+Right",
              "pedestrian",
              "bicycle",
              "publicTransportationSymbol",
              "other"
            ]
          ],
          "annotations": [
            [
              "description",
              "Symbol information, what symbol the traffic light assembly is displaying"
            ]
          ]
        }
      }
    },
    "MPMA": {
      "annotations": [
        [
          "abstract"
        ],
        [
          "description",
          "This class is an abstract base class containing fields for markings defined by multiple points. (MPMA = Multiple Points Marking Abstract)"
        ]
      ],
      "fields": {
        "supportingPointsX": {
          "type": [
            "Array",
            "Int"
          ],
          "annotations": [
            [
              "description",
              "A label is represented by a list of at least 3 supporting points in image coordinates (x_img, y_img)."
            ]
          ]
        },
        "supportingPointsY": {
          "type": [
            "Array",
            "Int"
          ],
          "annotations": [
            [
              "description",
              "A label is represented by a list of at least 3 supporting points in image coordinates (x_img, y_img)."
            ]
          ]
        }
      }
    },
    "MPROI": {
      "annotations": [
        [
          "abstract"
        ],
        [
          "description",
          "This class is an abstract base class containing fields for markings defined by multiple points, on a certain frame of a certain stream. (MPROI = Multiple Points Region Of Interest)"
        ]
      ],
      "extends": [
        "FrameMarking",
        "MPMA"
      ]
    },
    "ARM": {
      "annotations": [
        [
          "abstract"
        ],
        [
          "description",
          "This class is an abstract base class for road markings (ARM = Abstract Road Marking)"
        ]
      ],
      "extends": [
        "MPROI",
        "ClusterElement"
      ],
      "fields": {
        "markingColor": {
          "type": [
            "Set",
            [
              "Enum",
              "white",
              "yellow",
              "red",
              "blue",
              "green",
              "orange",
              "black",
              "other"
            ]
          ],
          "annotations": [
            [
              "description",
              "The color of the marking."
            ]
          ]
        },
        "quality": {
          "type": [
            "Enum",
            "notSet",
            "veryGood",
            "good",
            "bad",
            "veryBad"
          ],
          "annotations": [
            [
              "description",
              "The quality of the marking."
            ]
          ]
        },
        "occlusion": {
          "type": [
            "Set",
            [
              "Enum",
              "car",
              "truck",
              "pedestrian",
              "manyPedestrians",
              "cyclist",
              "motorcycle",
              "snow",
              "dirt",
              "leaves",
              "other",
              "notCovered"
            ]
          ],
          "annotations": [
            [
              "description",
              "Specifies what occludes the marking."
            ]
          ]
        },
        "laneType": {
          "type": [
            "Enum",
            "notSet",
            "egoLane",
            "neighborLaneLeft",
            "secondNeighborLaneLeft",
            "thirdNeighborLaneLeft",
            "neighborLaneLeftFar",
            "neighborLaneRight",
            "secondNeighborLaneRight",
            "thirdNeighborLaneRight",
            "neighborLaneRightFar",
            "other"
          ],
          "annotations": [
            [
              "description",
              "The LaneType describes the lane where the current labeled track belongs to."
            ]
          ]
        }
      }
    },
    "lmf": {
      "extends": [
        "ARM"
      ],
      "fieldOrder": [
        "streamName",
        "frameNumber",
        "refId",
        "supportingPointsX",
        "supportingPointsY",
        "clusterID",
        "markingColor",
        "quality",
        "occlusion",
        "laneType",
        "objectType",
        "sideOfLane"
      ],
      "annotations": [
        [
          "SignedWith",
          "sms"
        ],
        [
          "FileInfoCategory",
          "laneMarkingFunction"
        ],
        [
          "description",
          "Class used to label lanes. Created for SMPC5."
        ]
      ],
      "fields": {
        "objectType": {
          "type": [
            "Enum",
            "notSet",
            "solid",
            "dashed",
            "dashedUnknown",
            "vibrationSolid",
            "vibrationDashed",
            "vibrationDashedUnknown",
            "attentionMarker",
            "attentionMarkerUnknown",
            "bottsDotsSolid",
            "bottsDotsDashed",
            "restricted",
            "laneFarAway",
            "other",
            "noObjectInFrame"
          ],
          "annotations": [
            [
              "description",
              "Which object type it is."
            ]
          ]
        },
        "sideOfLane": {
          "type": [
            "Enum",
            "notSet",
            "left",
            "right",
            "other"
          ],
          "annotations": [
            [
              "description",
              "Point of view is the center of the chosen Lane Type (see below). The lane side describes the marking where the current track belongs to."
            ]
          ]
        },
        "pavementSignType": {
          "type": [
            "Optional",
            [
              "Enum",
              "diamondMarking",
              "leftAndRightArrow",
              "leftArrow",
              "rightArrow",
              "straightAndLeftAndRightArrow",
              "straightAndLeftArrow",
              "straightAndRightArrow",
              "straightArrow",
              "text",
              "symbol",
              "stopLine",
              "giveWay",
              "speedSign",
              "other"
            ]
          ],
          "annotations": [
            [
              "description",
              "Set arrow type of surface markings."
            ]
          ]
        },
        "pavementSignSpeedLimit": {
          "type": [
            "Optional",
            "Int"
          ],
          "annotations": [
            [
              "description",
              "If the object type is speedSign, this will contain the speed limit from the sign."
            ]
          ]
        },
        "crosswalkType": {
          "type": [
            "Optional",
            [
              "Enum",
              "crosswalk",
              "crosswalkUnknown",
              "crosswalkFarAway",
              "other"
            ]
          ],
          "annotations": [
            [
              "description",
              "Set arrow type of surface markings."
            ]
          ]
        },
        "visibility": {
          "type": [
            "Optional",
            [
              "Enum",
              "clear",
              "limited"
            ]
          ],
          "annotations": [
            [
              "description",
              "Set if a marking is not visible in the image due to glares"
            ]
          ]
        }
      }
    },
    "lvm": {
      "extends": [
        "ClusterElement",
        "MPROI",
        "MarkingCreationInformation"
      ],
      "annotations": [
        [
          "SignedWith",
          "sms"
        ],
        [
          "FileInfoCategory",
          "laneValidationMarkingFunction"
        ],
        [
          "description",
          "Class used to label lanes for validation. Created for SMPC5."
        ]
      ],
      "fieldOrder": [
        "clusterID",
        "frameNumber",
        "streamName",
        "refId",
        "supportingPointsX",
        "supportingPointsY",
        "laneType",
        "objectType",
        "markingColor",
        "occlusion",
        "sideOfLane",
        "multitracks",
        "quality",
        "markingDataSource"
      ],
      "fields": {
        "laneType": {
          "type": [
            "Optional",
            [
              "Enum",
              "notSet",
              "egoLane",
              "neighborLane"
            ]
          ],
          "annotations": [
            [
              "description",
              "The LaneType describes the lane where the current labeled track belongs to."
            ]
          ]
        },
        "objectType": {
          "type": [
            "Optional",
            [
              "Enum",
              "notSet",
              "solid",
              "dashed",
              "bottsDotsSolid",
              "bottsDotsDashed",
              "solidRipple",
              "block"
            ]
          ],
          "annotations": [
            [
              "description",
              "Set type of surface markings."
            ]
          ]
        },
        "markingColor": {
          "type": [
            "Optional",
            [
              "Enum",
              "white",
              "yellow",
              "red",
              "blue",
              "orange",
              "black"
            ]
          ]
        },
        "occlusion": {
          "type": [
            "Optional",
            [
              "Enum",
              "car",
              "truck",
              "pedestrian",
              "manyPedestrians",
              "cyclist",
              "motorcycle",
              "other"
            ]
          ],
          "annotations": [
            [
              "description",
              "Specifies what occludes the marking."
            ]
          ]
        },
        "sideOfLane": {
          "type": [
            "Optional",
            [
              "Enum",
              "left",
              "right"
            ]
          ],
          "annotations": [
            [
              "description",
              "Point of view is the center of the chosen Lane Type (see below). The lane side describes the marking where the current track belongs to."
            ]
          ]
        },
        "multiTracks": {
          "type": [
            "Optional",
            [
              "Enum",
              "1",
              "2",
              "3",
              "4",
              "5"
            ]
          ],
          "annotations": [
            [
              "description",
              ""
            ]
          ]
        },
        "quality": {
          "type": [
            "Optional",
            [
              "Enum",
              "veryGood",
              "good",
              "bad",
              "veryBad"
            ]
          ],
          "annotations": [
            [
              "description",
              "The quality of the marking."
            ]
          ]
        }
      }
    },
    "lwvm": {
      "extends": [
        "FrameMarking",
        "A_LINE",
        "ClusterElement"
      ],
      "annotations": [
        [
          "SignedWith",
          "sms"
        ],
        [
          "FileInfoCategory",
          "laneWidthValidationMarkingFunction"
        ],
        [
          "description",
          "Class used to label witdh for lanes. Created for SMPC5."
        ]
      ]
    },
    "ldbm": {
      "extends": [
        "FrameMarking",
        "A_LINE",
        "ClusterElement"
      ],
      "annotations": [
        [
          "SignedWith",
          "sms"
        ],
        [
          "FileInfoCategory",
          "laneDistanceValidationMarkingFunction"
        ],
        [
          "description",
          "Class used to label distance between multitracks for lanes. Created for SMPC5."
        ]
      ],
      "fields": {
        "laneType": {
          "type": [
            "Enum",
            "notSet",
            "solid",
            "dashed",
            "bottsDotsSolid",
            "bottsDotsDashed",
            "solidRipple",
            "block"
          ],
          "annotations": [
            [
              "description",
              "The LaneType describes ......"
            ]
          ]
        }
      }
    },
    "lvmep": {
      "extends": [
        "FrameMarking",
        "A_POINT",
        "ClusterElement"
      ],
      "annotations": [
        [
          "SignedWith",
          "sms"
        ],
        [
          "FileInfoCategory",
          "laneValidationEventPointMarkingFunction"
        ],
        [
          "description",
          "Class used to label the point of an event. Created for SMPC5."
        ]
      ],
      "fields": {
        "eventType": {
          "type": [
            "Optional",
            [
              "Enum",
              "openingFork",
              "closingFork",
              "startOfLane",
              "startConstructionSite",
              "endConstructionSite",
              "laneTypeChange",
              "carPoolLane"
            ]
          ],
          "annotations": [
            [
              "description",
              "The eventType describes the type of the event."
            ]
          ]
        }
      }
    },
    "crwmf": {
      "extends": [
        "ARM"
      ],
      "fieldOrder": [
        "streamName",
        "frameNumber",
        "refId",
        "supportingPointsX",
        "supportingPointsY",
        "clusterID",
        "markingColor",
        "quality",
        "occlusion",
        "laneType"
      ],
      "annotations": [
        [
          "SignedWith",
          "sms"
        ],
        [
          "FileInfoCategory",
          "crosswalkMarkingFunction"
        ],
        [
          "description",
          "Class used to label crosswalks. Created for SMPC5."
        ]
      ],
      "fields": {
        "objectType": {
          "type": [
            "Enum",
            "notSet",
            "crosswalk",
            "crosswalkUnknown",
            "crosswalkFarAway",
            "other"
          ],
          "annotations": [
            [
              "description",
              "Set arrow type of surface markings."
            ]
          ]
        }
      }
    },
    "pvmtmf": {
      "extends": [
        "ARM"
      ],
      "fieldOrder": [
        "streamName",
        "frameNumber",
        "refId",
        "supportingPointsX",
        "supportingPointsY",
        "clusterID",
        "markingColor",
        "quality",
        "occlusion",
        "laneType",
        "objectType",
        "speedSignLimit"
      ],
      "annotations": [
        [
          "SignedWith",
          "sms"
        ],
        [
          "FileInfoCategory",
          "pavementMarkingFunction"
        ],
        [
          "description",
          "Class used to label pavement objects. Created for SMPC5."
        ]
      ],
      "fields": {
        "objectType": {
          "type": [
            "Enum",
            "notSet",
            "diamondMarking",
            "leftAndRightArrow",
            "leftArrow",
            "rightArrow",
            "straightAndLeftAndRightArrow",
            "straightAndLeftArrow",
            "straightAndRightArrow",
            "straightArrow",
            "text",
            "symbol",
            "stopLine",
            "giveWay",
            "speedSign",
            "other"
          ],
          "annotations": [
            [
              "description",
              "Set arrow type of surface markings."
            ]
          ]
        },
        "speedSignLimit": {
          "type": [
            "Optional",
            "Int"
          ],
          "annotations": [
            [
              "description",
              "If the object type is speedSign, this will contain the speed limit from the sign."
            ]
          ]
        }
      }
    },
    "edsfrw": {
      "extends": "IntervalMarking",
      "fieldOrder": [
        "endFrame",
        "eventType",
        "startFrame",
        "streamName",
        "waterCategory",
        "snowCategory",
        "notAbleToLabel"
      ],
      "annotations": [
        [
          "FileInfoCategory",
          "eventDataSupportingFunctionsRoadWetness"
        ],
        [
          "SignedWith",
          "sms"
        ],
        [
          "description",
          ""
        ]
      ],
      "fields": {
        "eventType": {
          "type": [
            "Enum",
            "water",
            "snow",
            "notAbleToLabel"
          ],
          "annotations": [
            [
              "description",
              "Set the road wetness type."
            ]
          ]
        },
        "waterCategory": {
          "type": [
            "Optional",
            [
              "Enum",
              "dry",
              "light-",
              "light",
              "light+",
              "heavy"
            ]
          ]
        },
        "snowCategory": {
          "type": [
            "Optional",
            [
              "Enum",
              "none",
              "heavy"
            ]
          ]
        },
        "notAbleToLabel": {
          "type": [
            "Optional",
            [
              "Enum",
              "true",
              "false"
            ]
          ],
          "annotations": [
            "description",
            "true if not able to determine precipitation category"
          ]
        }
      }
    },
    "edsfppt": {
      "extends": "IntervalMarking",
      "fieldOrder": [
        "endFrame",
        "eventType",
        "startFrame",
        "streamName",
        "precipitationCategory",
        "notAbleToLabel"
      ],
      "annotations": [
        [
          "FileInfoCategory",
          "eventDataSupportingFunctionsPrecipitation"
        ],
        [
          "SignedWith",
          "sms"
        ],
        [
          "description",
          ""
        ]
      ],
      "fields": {
        "eventType": {
          "type": [
            "Enum",
            "rain",
            "snow",
            "notAbleToLabel"
          ],
          "annotations": [
            [
              "description",
              "Set the precipitation type."
            ]
          ]
        },
        "precipitationCategory": {
          "type": [
            "Optional",
            [
              "Enum",
              "none",
              "light-",
              "light",
              "light+",
              "heavy"
            ]
          ]
        },
        "notAbleToLabel": {
          "type": [
            "Optional",
            [
              "Enum",
              "true",
              "false"
            ]
          ],
          "annotations": [
            [
              "description",
              "true if not able to determine precipitation category"
            ]
          ]
        }
      }
    },
    "edrwdt": {
      "extends": "IntervalMarking",
      "fieldOrder": [
        "eventType",
        "startFrame",
        "endFrame",
        "streamName",
        "weather",
        "roadWetnessCondition",
        "wipers",
        "roadSurfaceMaterial",
        "roadSurfaceCondition"
      ],
      "annotations": [
        [
          "FileInfoCategory",
          "eventDataRoadWetnessDetection"
        ],
        [
          "SignedWith",
          "sms"
        ],
        [
          "description",
          ""
        ]
      ],
      "fields": {
        "eventType": {
          "type": [
            "Enum",
            "roadWetness"
          ],
          "annotations": [
            [
              "description",
              "Set the road wetness event."
            ]
          ]
        },
        "weather": {
          "type": [
            "Optional",
            [
              "Enum",
              "clear(frontlightning)",
              "clear(backlightning)",
              "clouded/overcast/night",
              "clouded/overcast",
              "fog",
              "drizzle",
              "lightRain",
              "heavyRain",
              "rainSnowMixed",
              "hail",
              "lightSnow",
              "heavySnow",
              "ignoreWeather"
            ]
          ],
          "annotations": [
            "description",
            "describes the type of weather or precipitations that is present on each frame"
          ]
        },
        "roadWetnessCondition": {
          "type": [
            "Optional",
            [
              "Enum",
              "dry",
              "partial",
              "superficial",
              "waterlogged",
              "icy",
              "snowed",
              "slushy",
              "ignoreRoadWetnessCondition"
            ]
          ],
          "annotations": [
            "description",
            "describes the type of wetness and amount of water on the road for each frame"
          ]
        },
        "wipers": {
          "type": [
            "Optional",
            [
              "Enum",
              "noBlocking",
              "blocking"
            ]
          ],
          "annotations": [
            "description",
            "describes whether the windscreen wipers are blocking the view of the camera and are visible on the image frame"
          ]
        },
        "roadSurfaceMaterial": {
          "type": [
            "Optional",
            [
              "Enum",
              "asphalt",
              "concrete",
              "combined/Unknown"
            ]
          ],
          "annotations": [
            "description",
            "describes the type of the building material of the road surface"
          ]
        },
        "roadSurfaceCondition": {
          "type": [
            "Optional",
            [
              "Enum",
              "noModifications",
              "withModifications",
              "ignoreRoadSurfaceCondition"
            ]
          ],
          "annotations": [
            "description",
            "describes whether the road surface presents modifications or alterations"
          ]
        }
      }
    },
    "errmd": {
      "fieldOrder": [
        "errorDescription",
        "relatedWorkingIssue",
        "vehicleEnvironment",
        "prototypeEnvironment",
        "imagesAffected",
        "featuresAffected"
      ],
      "annotations": [
        [
          "FileInfoCategory",
          "errorMetadata"
        ],
        [
          "SignedWith",
          "mdms"
        ]
      ],
      "fields": {
        "errorDescription": {
          "type": [
            "Optional",
            "String"
          ],
          "annotations": [
            [
              "description",
              "The description of the error code."
            ]
          ]
        },
        "relatedWorkingIssue": {
          "type": [
            "Optional",
            [
              "Set",
              "UInt32"
            ]
          ],
          "annotations": [
            [
              "description",
              "The ID of the working issue"
            ]
          ]
        },
        "errorCodes": {
          "type": [
            "Optional",
            "String"
          ],
          "annotations": [
            [
              "description",
              "The name of the error code."
            ]
          ]
        },
        "vehicleEnvironment": {
          "type": [
            "Optional",
            [
              "Enum",
              "blackPrint",
              "bob",
              "calibration",
              "canInterface",
              "frInterface",
              "gateway",
              "headlight",
              "lightTrap",
              "measurementSystem",
              "mounting",
              "windshield"
            ]
          ],
          "annotations": [
            [
              "description",
              "Specify the vehicle environment at the time of recording."
            ]
          ]
        },
        "prototypeEnvironment": {
          "type": [
            "Optional",
            [
              "Enum",
              "debugBoard",
              "exposureControl",
              "leftCamera",
              "leftLens",
              "masterCamera",
              "masterLens",
              "rightCamera",
              "rightLens",
              "slaveCamera",
              "slaveLens"
            ]
          ],
          "annotations": [
            [
              "description",
              "Specify the prototype environment at the time of recording."
            ]
          ]
        },
        "imagesAffected": {
          "type": [
            "Optional",
            [
              "Enum",
              "contextA",
              "contextB",
              "leftImage",
              "masterWindow",
              "rightImage",
              "slaveWindow",
              "stereo"
            ]
          ],
          "annotations": [
            [
              "description",
              "Specify the images that are affected by this error."
            ]
          ]
        },
        "featuresAffected": {
          "type": [
            "Optional",
            [
              "Enum",
              "all",
              "aeb",
              "aldw",
              "blockage",
              "cwh",
              "decal",
              "dical",
              "ehr",
              "em",
              "god",
              "hdecal",
              "ihc",
              "imd",
              "ld",
              "ldp",
              "lsr",
              "od",
              "rsp",
              "secal",
              "td",
              "tlr",
              "tsa",
              "tsr"
            ]
          ],
          "annotations": [
            [
              "description",
              "Specify the features that are affected by this error."
            ]
          ]
        }
      }
    },
    "hpmf": {
      "extends": [
        "FrameMarking",
        "A_POINT"
      ],
      "annotations": [
        [
          "SignedWith",
          "sms"
        ],
        [
          "FileInfoCategory",
          "HolisticPathMarkingFunction"
        ],
        [
          "description",
          "Class used to label the point of an alternative path."
        ]
      ],
      "fields": {
        "objectType": {
          "type": [
            "Enum",
            "normal",
            "mainPath",
            "alternativePath",
            "laneChangePath",
            "roundabout",
            "trafficViolation",
            "other"
          ],
          "annotations": [
            [ "description", "Defines what type of alternative paths are labelled in the frame." ]
          ]
        },
        "pathWithLaneChange": {
          "type": [
            "Optional",
            "Bool"
          ],
          "annotations": [
            [
              "description",
              "Defines if taking any of the marked paths will include a lane change."
            ]
          ]
        }
      }
    },
    "hpmd": {
      "fieldOrder": [
        "maneuver",
        "roadOcclusion",
        "laneMarkingQuality"
      ],
      "annotations": [
        [
          "FileInfoCategory",
          "HolisticPathMetadata"
        ],
        [
          "SignedWith",
          "mdms"
        ]
      ],
      "fields": {
        "maneuver": {
          "type": [
            "Optional",
            [
              "Set",
              [
                "Enum",
                "notOnRoad",
                "initialTurn",
                "turn",
                "laneChange",
                "overtake",
                "swerveStaticObject",
                "swerveMovingObject",
                "sway",
                "parking",
                "turnaround",
                "irresponsible",
                "evasive",
                "langeChangeEntry",
                "laneChangeExit",
                "other"
              ]
            ]
          ]
        },
        "roadOcclusion": {
          "type": [
            "Optional",
            [
              "Set",
              [
                "Enum",
                "none",
                "minor",
                "medium",
                "major",
                "full"
              ]
            ]
          ]
        },
        "laneMarkingQuality": {
          "type": [
            "Optional",
            [
              "Set",
              [
                "Enum",
                "veryGood",
                "good",
                "bad",
                "veryBad",
                "hardlyVisible",
                "noLanes"
              ]
            ]
          ]
        }
      }
    },
    "PedestrianMisc": {
      "annotations": [
        [ "abstract" ],
        [ "description", "Miscellaneous set of pedestrian properties to be used by more classes" ]
      ],
      "fields": {
        "strangePose": {
          "type": "Bool",
          "annotations": [ "description", "Describes if the object has a strange pose." ]
        },
        "ageGroup": {
          "type": [
            "Enum",
            "adult",
            "child"
          ],
          "annotations": [ "description", "Describes if the object is an adult or a child. Set once for one object." ]
        },
        "direction": {
          "type": [
            "Enum",
            "NN",
            "NE",
            "EE",
            "SE",
            "SS",
            "SW",
            "WW",
            "NW"
          ],
          "annotations": [ "description", "The direction in which the object is moving relative to the ego vehicle. In case of an object not moving, property movement is set to still, direction shall be defined by the rotation of the torso." ]
        },
        "unsharp": {
          "type": "Bool",
          "annotations": [ "description", "The object is unsharp by any reason." ]
        },
        "relaxedAccuracy": {
          "type": [
            "Optional",
            "Bool"
          ]
        }
      }
    },
    "HAM": {
      "extends": [
        "HumanOcclusionEx"
      ],
      "annotations": [
        [ "abstract" ],
        [
          "description",
          "Abstract class for marking the head,pelvic and feet coordinates on a human"
        ]
      ],
      "fields": {
        "headPointX": {
          "type": [
            "Optional",
            "Int"
          ],
          "annotations": [
            "description",
            "Horizontal position of head point."
          ]
        },
        "headPointY": {
          "type": [
            "Optional",
            "Int"
          ],
          "annotations": [
            "description",
            "Vertical position of head point."
          ]
        },
        "pelvicPointX": {
          "type": [
            "Optional",
            "Int"
          ],
          "annotations": [
            "description",
            "Horizontal position of pelvic point."
          ]
        },
        "pelvicPointY": {
          "type": [
            "Optional",
            "Int"
          ],
          "annotations": [
            "description",
            "Vertical position of pelvic point."
          ]
        },
        "feetPointX": {
          "type": [
            "Optional",
            "Int"
          ],
          "annotations": [
            "description",
            "Horizontal position of feet point."
          ]
        },
        "feetPointY": {
          "type": [
            "Optional",
            "Int"
          ],
          "annotations": [
            "description",
            "Vertical position of feet point."
          ]
        }
      }
    },
    "twpmf": {
      "extends": [ "FrameMarking", "TWAM", "HAM", "PedestrianMisc" ],
      "annotations": [
        [
          "SignedWith",
          "sms"
        ],
        [
          "FileInfoCategory",
          "TwoWheelerPointsMarkingFunction"
        ],
        [
          "description",
          "Class used to label the two wheeler points marking."
        ]
      ],
      "fieldOrder": [
        "frameNumber",
        "streamName",
        "refId",
        "objectType",
        "headPointX",
        "headPointY",
        "headPointOccluded",
        "pelvicPointX",
        "pelvicPointY",
        "pelvicPointOccluded",
        "feetPointX",
        "feetPointY",
        "feetPointOccluded",
        "FrontWheelCenterPointX",
        "FrontWheelCenterPointY",
        "FrontWheelContactPointX",
        "FrontWheelContactPointY",
        "FrontWheelSidePointX",
        "FrontWheelSidePointY",
        "FrontWheelContactPointOccluded",
        "RearWheelCenterPointX",
        "RearWheelCenterPointY",
        "RearWheelContactPointX",
        "RearWheelContactPointY",
        "RearWheelSidePointX",
        "RearWheelSidePointY",
        "RearWheelContactPointOccluded",
        "movement",
        "strangePose",
        "ageGroup",
        "direction",
        "upperOcclusion",
        "lowerOcclusion",
        "unsharp"
      ],
      "fields": {
        "objectType": {
          "type": [
            "Enum",
            "cyclist",
            "mopedist",
            "motorCyclist",
            "otherTwoWheeler",
            "dummyCyclist"
          ],
          "annotations": [
            [
              "description",
              "Defines what type of two wheelers are labelled in the frame."
            ]
          ]
        },
        "movement": {
          "type": [
            "Enum",
            "still",
            "riding"
          ],
          "annotations": [
            [
              "required"
            ],
            [
              "description",
              "Describes how the object is moving."
            ]
          ]
        },
        "FrontWheelContactPointX": {
          "type": [
            "Optional",
            "Int"
          ],
          "annotations": [
            [
              "optional"
            ],
            [
              "description",
              "X coordinate of the front bottom wheel."
            ]
          ]
        },
        "FrontWheelContactPointY": {
          "type": [
            "Optional",
            "Int"
          ],
          "annotations": [
            [
              "optional"
            ],
            [
              "description",
              "Y coordinate of the front bottom wheel."
            ]
          ]
        },
        "RearWheelContactPointX": {
          "type": [
            "Optional",
            "Int"
          ],
          "annotations": [
            [
              "optional"
            ],
            [
              "description",
              "X coordinate of the rear bottom wheel."
            ]
          ]
        },
        "RearWheelContactPointY": {
          "type": [
            "Optional",
            "Int"
          ],
          "annotations": [
            [
              "optional"
            ],
            [
              "description",
              "Y coordinate of the rear bottom wheel."
            ]
          ]
        },
        "FrontWheelContactPointOccluded": {
          "type": [
            "Optional",
            "Bool"
          ],
          "annotations": [
            "description",
            "true if front wheel contact point is occluded"
          ]
        },
        "RearWheelContactPointOccluded": {
          "type": [
            "Optional",
            "Bool"
          ],
          "annotations": [
            "description",
            "true if rear wheel contact point is occluded"
          ]
        },
        "wheelsUnclear": {
          "type": [
            "Optional",
            [
              "Enum",
              "false",
              "true"
            ]
          ]
        },
        "turnLightLeft": {
          "type": [
            "Optional",
            [
              "Enum",
              "false",
              "true"
            ]
          ]
        },
        "turnLightRight": {
          "type": [
            "Optional",
            [
              "Enum",
              "false",
              "true"
            ]
          ]
        },
        "breakLight": {
          "type": [
            "Optional",
            [
              "Enum",
              "false",
              "true"
            ]
          ]
        },
        "emergencyLights": {
          "type": [
            "Optional",
            [
              "Enum",
              "false",
              "true"
            ]
          ]
        },
        "indicatorOcclusion": {
          "type": [
            "Optional",
            [
              "Enum",
              "none",
              "left",
              "right",
              "full"
            ]
          ],
          "annotations": [
            [
              "description",
              "Occlusion of an indicator. Set by labeler."
            ]
          ]
        }
      }
    },
    "twpmfNonDescript": {
      "extends": "NonDescript",
      "annotations": [
        [
          "description",
          "Non descripts for two wheeler points markings."
        ],
        [
          "SignedWith",
          "sms"
        ]
      ]
    },
    "pdpmf": {
      "extends": [
        "FrameMarking",
        "HAM",
        "PedestrianMisc"
      ],
      "annotations": [
        [
          "SignedWith",
          "sms"
        ],
        [
          "FileInfoCategory",
          "pedestrianPointsMarkings"
        ],
        [
          "description",
          "Class used to label the pedestrian points markings."
        ]
      ],
      "fieldOrder": [
        "frameNumber",
        "streamName",
        "refId",
        "objectType",
        "headPointX",
        "headPointY",
        "headPointOccluded",
        "pelvicPointX",
        "pelvicPointY",
        "pelvicPointOccluded",
        "feetPointX",
        "feetPointY",
        "feetPointOccluded",
        "movement",
        "strangePose",
        "ageGroup",
        "direction",
        "upperOcclusion",
        "lowerOcclusion",
        "unsharp"
      ],
      "fields": {
        "objectType": {
          "type": [
            "Enum",
            "pedestrian",
            "dummyPedestrian"
          ],
          "annotations": [
            [
              "required"
            ],
            [
              "description",
              "Type of marked object."
            ]
          ]
        },
        "movement": {
          "type": [
            "Enum",
            "still",
            "walking",
            "runnning",
            "other"
          ],
          "annotations": [
            [
              "required"
            ],
            [
              "description",
              "Describes how the object is moving."
            ]
          ]
        }
      }
    },
    "pdpmfNonDescript": {
      "extends": "NonDescript",
      "annotations": [
        [
          "description",
          "Non descripts for pedestrian points markings."
        ],
        [
          "SignedWith",
          "sms"
        ]
      ]
    },
    "RectificationMetadata": {
      "annotations": [
        [ "description", "Used to store rectification information. For each label class used in a rectified image there will be a coresponding entry that details the rectification used." ]
      ],
      "fields": {
        "CreatedUsing": {
          "type": [
            "Enum",
            "RectificationV1",
            "RectificationV2"
          ]
        },
        "FileInfoCategory": {
          "type": "String"
        },
        "ParametersVersion": {
          "type": [
            "Enum",
            "DAT",
            "ParametersV1"
          ]
        },
        "Parameters": {
          "type": [
            "Array",
            "Double"
          ]
        }
      }
    },
    "Point": {
      "annotations": [
        [ "abstract" ],
        [ "description", "Location of a point in two dimensions (on an image), represented in pixels, with FLOATING point precision. Assumes a coordinate system with the origin in the top left corner of the image, x is horizontal, y is positive downwards" ]
      ],
      "fields": {
        "posX": {
          "type": "Float",
          "annotations": [
            [ "NotEditable" ],
            [ "description", "Image coordinate on the horizontal axis" ]
          ]
        },
        "posY": {
          "type": "Float",
          "annotations": [
            [ "NotEditable" ],
            [ "description", "Image coordinate on the vertical axis" ]
          ]
        }
      }
    },
    "Segment": {
      "annotations": [
        [ "abstract" ],
        [ "description", "A segment defined by two points" ]
      ],
      "fields": {
        "posX1": {
          "type": "Float",
          "annotations": [ "NotEditable" ]
        },
        "posX2": {
          "type": "Float",
          "annotations": [ "NotEditable" ]
        },
        "posY1": {
          "type": "Float",
          "annotations": [ "NotEditable" ]
        },
        "posY2": {
          "type": "Float",
          "annotations": [ "NotEditable" ]
        }
      }
    },
    "FreeROI": {
      "annotations": [
        [ "abstract" ],
        [ "description", "A region of interest in the shape of a polygon with four corners, named topleft, topright, bottomright, bottomleft. The points can be freely defined, however their relative position should respect their naming. Coordinates are represented in pixels, as FLOAT values. Assumes a coordinate system with the origin in the top left corner, x is horizontal, y is positive downwards. " ]
      ],
      "fields": {
        "topLeftX": {
          "type": [ "Optional", "Float" ],
          "annotations": [ "NotEditable" ]
        },
        "topLeftY": {
          "type": [ "Optional", "Float" ],
          "annotations": [ "NotEditable" ]
        },
        "topRightX": {
          "type": [ "Optional", "Float" ],
          "annotations": [ "NotEditable" ]
        },
        "topRightY": {
          "type": [ "Optional", "Float" ],
          "annotations": [ "NotEditable" ]
        },
        "bottomRightX": {
          "type": [ "Optional", "Float" ],
          "annotations": [ "NotEditable" ]
        },
        "bottomRightY": {
          "type": [ "Optional", "Float" ],
          "annotations": [ "NotEditable" ]
        },
        "bottomLeftX": {
          "type": [ "Optional", "Float" ],
          "annotations": [ "NotEditable" ]
        },
        "bottomLeftY": {
          "type": [ "Optional", "Float" ],
          "annotations": [ "NotEditable" ]
        }
      }
    },
    "Points": {
      "annotations": [
        [ "abstract" ],
        [ "description", "An array of two dimensional points" ]
      ],
      "fields": {
        "supportingPointsX": {
          "type": [ "Array", "Float" ],
          "annotations": [
            [ "NotEditable" ],
            [ "description", "X coordinates, each position corresponds to the element at the same position from the other array" ]
          ]
        },
        "supportingPointsY": {
          "type": [ "Array", "Float" ],
          "annotations": [
            [ "NotEditable" ],
            [ "description", "Y coordinates, each position corresponds to the element at the same position from the other array" ]
          ]
        }
      }
    },
    "PavementAndCrosswalk": {
      "extends": [ "FrameMarking", "Points", "ClusterElement" ],
      "annotations": [
        [ "SignedWith", "sms" ],
        [ "FileInfoCategory", "PavementAndCrosswalk" ],
        [ "description", "PavementAndCrosswalk: Polygons around various markings painted on the road." ]
      ],
      "fields": {
        "objectType": {
          "type": [
            "Enum",
            "crosswalk",
            "diamondMarking",
            "leftAndRightArrow",
            "leftArrow",
            "rightArrow",
            "straightAndLeftAndRightArrow",
            "straightAndLeftArrow",
            "straightAndRightArrow",
            "straightArrow",
            "text",
            "symbol",
            "stopLine",
            "giveWay",
            "speedSign",
            "other"
          ]
        },
        "pavementSignSpeedLimit": {
          "type": [ "Optional", "Int" ],
          "annotations": [
            [ "description", "If the object is a speed limit sign, this will contain the value of the speed limit" ]
          ]
        },
        "markingColor": {
          "type": [
            "Set",
            [
              "Enum",
              "white",
              "yellow",
              "green",
              "other"
            ]
          ]
        },
        "quality": {
          "type": [
            "Enum",
            "good",
            "medium",
            "bad"
          ],
          "annotations": [
            [ "description", "The quality of the marking." ]
          ]
        },
        "occlusion": {
          "type": [
            "Set",
            [
              "Enum",
              "car",
              "truck",
              "pedestrian",
              "manyPedestrians",
              "cyclist",
              "motorcycle",
              "snow",
              "dirt",
              "leaves",
              "other",
              "notCovered"
            ]
          ],
          "annotations": [
            [ "description", "Specifies what occludes the marking." ]
          ]
        },
        "laneType": {
          "type": [
            "Enum",
            "notSet",
            "egoLane",
            "neighborLaneLeft",
            "secondNeighborLaneLeft"
          ],
          "annotations": [
            [ "description", "Identification of parent lane position relative to ego vehicle" ]
          ]
        }
      }
    },
    "LaneRoadMarking": {
      "extends": [ "FrameMarking", "Points", "ClusterElement" ],
      "fieldOrder": [
        "streamName",
        "frameNumber",
        "refId",
        "supportingPointsX",
        "supportingPointsY",
        "clusterID",
        "markingColor",
        "quality",
        "occlusion",
        "laneType",
        "objectType",
        "sideOfLane"
      ],
      "annotations": [
        [ "SignedWith", "sms" ],
        [ "FileInfoCategory", "LaneRoadMarking" ],
        [ "description", "LD Development: Polygons around various markings painted on the road." ]
      ],
      "fields": {
        "objectType": {
          "type": [
            "Enum",
            "notSet",
            "solid",
            "dashed",
            "dashedUnknown",
            "vibrationSolid",
            "vibrationDashed",
            "vibrationDashedUnknown",
            "attentionMarker",
            "attentionMarkerUnknown",
            "bottsDotsSolid",
            "bottsDotsDashed",
            "restricted",
            "laneFarAway",
            "crossingLane",
            "other",
            "noObjectInFrame"
          ]
        },
        "sideOfLane": {
          "type": [
            "Enum",
            "notSet",
            "left",
            "right",
            "other"
          ],
          "annotations": [
            [ "description", "Where is the marking, relative to the center of the lane it belongs to" ]
          ]
        },
        "pavementSignType": {
          "type": [
            "Optional",
            [
              "Enum",
              "diamondMarking",
              "leftAndRightArrow",
              "leftArrow",
              "rightArrow",
              "straightAndLeftAndRightArrow",
              "straightAndLeftArrow",
              "straightAndRightArrow",
              "straightArrow",
              "text",
              "symbol",
              "stopLine",
              "giveWay",
              "speedSign",
              "other"
            ]
          ]
        },
        "pavementSignSpeedLimit": {
          "type": [ "Optional", "Int" ],
          "annotations": [
            [ "description", "If the object is a speed limit sign, this will contain the value of the speed limit" ]
          ]
        },
        "crosswalkType": {
          "type": [
            "Optional",
            [
              "Enum",
              "crosswalk",
              "crosswalkUnknown",
              "crosswalkFarAway",
              "other"
            ]
          ]
        },
        "visibility": {
          "type": [
            "Optional",
            [
              "Enum",
              "clear",
              "limited"
            ]
          ],
          "annotations": [
            [ "description", "Tells if a marking is not visible in the image due to glares" ]
          ]
        },
        "markingColor": {
          "type": [
            "Set",
            [
              "Enum",
              "white",
              "yellow",
              "red",
              "blue",
              "green",
              "orange",
              "black",
              "other"
            ]
          ]
        },
        "quality": {
          "type": [
            "Enum",
            "notSet",
            "veryGood",
            "good",
            "bad",
            "veryBad"
          ],
          "annotations": [
            [ "description", "The quality of the marking." ]
          ]
        },
        "occlusion": {
          "type": [
            "Set",
            [
              "Enum",
              "car",
              "truck",
              "pedestrian",
              "manyPedestrians",
              "cyclist",
              "motorcycle",
              "snow",
              "dirt",
              "leaves",
              "other",
              "notCovered"
            ]
          ],
          "annotations": [
            [ "description", "Specifies what occludes the marking." ]
          ]
        },
        "laneType": {
          "type": [
            "Enum",
            "notSet",
            "egoLane",
            "neighborLaneLeft",
            "secondNeighborLaneLeft",
            "thirdNeighborLaneLeft",
            "neighborLaneLeftFar",
            "neighborLaneRight",
            "secondNeighborLaneRight",
            "thirdNeighborLaneRight",
            "neighborLaneRightFar",
            "beyondBarrier",
            "other"
          ],
          "annotations": [
            [ "description", "Identification of parent lane position relative to ego vehicle" ]
          ]
        }
      }
    },
    "LaneLine": {
      "extends": [ "ClusterElement", "FrameMarking", "Points", "MarkingCreationInformation", "Line3D" ],
      "annotations": [
        [ "SignedWith", "sms" ],
        [ "FileInfoCategory", "LaneLine" ],
        [ "description", "LD Validation: A line that separates two lanes. The physical line has a certain width, but this object is an abstraction of that: a poly-line attached to one of the sides of the physical line, the one which is closer to the ego vehicle" ],
        [ "ViewGroup", "LaneTypes" ]
      ],
      "fieldOrder": [
        "clusterID",
        "frameNumber",
        "streamName",
        "refId",
        "supportingPointsX",
        "supportingPointsY",
        "laneType",
        "objectType",
        "markingColor",
        "occlusion",
        "sideOfLane",
        "multiTracks",
        "quality",
        "markingDataSource"
      ],
      "fields": {
        "laneType": {
          "type": [
            "Optional",
            [
              "Enum",
              "notSet",
              "egoLane",
              "neighborLane"
            ]
          ],
          "annotations": [
            [ "description", "egoLane is set to the two lines that define the egoLane. The other are neighbors" ]
          ]
        },
        "objectType": {
          "type": [
            "Optional",
            [
              "Enum",
              "notSet",
              "solid",
              "dashed",
              "bottsDotsSolid",
              "bottsDotsDashed",
              "solidRipple",
              "block",
              "unclassified",
              "separation",
              "none"
            ]
          ]
        },
        "markingColor": {
          "type": [
            "Optional",
            [
              "Enum",
              "white",
              "yellow",
              "red",
              "blue",
              "orange",
              "black"
            ]
          ]
        },
        "occlusion": {
          "type": [
            "Optional",
            [
              "Enum",
              "car",
              "truck",
              "pedestrian",
              "manyPedestrians",
              "cyclist",
              "motorcycle",
              "partlyOccluded",
              "fullyOccluded",
              "other"
            ]
          ],
          "annotations": [
            [
              "description",
              "Specifies what occludes the marking."
            ]
          ]
        },
        "sideOfLane": {
          "type": [
            "Optional",
            [
              "Enum",
              "left",
              "right"
            ]
          ],
          "annotations": [
            [ "description", "Positioning of the line relative to the ego vehicle" ]
          ]
        },
        "multiTracks": {
          "type": [
            "Optional",
            [
              "Enum",
              "1",
              "2",
              "3",
              "4",
              "5"
            ]
          ],
          "annotations": [
            [ "description", "Tells if there are multiple lines on the road drawn one next to each other, all together being a single separation between two lanes" ]
          ]
        },
        "quality": {
          "type": [
            "Optional",
            [
              "Enum",
              "veryGood",
              "good",
              "bad",
              "veryBad"
            ]
          ],
          "annotations": [
            [ "description", "The quality of the painted line on the road" ]
          ]
        }
      }
    },
    "LaneLineWidth": {
      "extends": [ "FrameMarking", "Segment", "ClusterElement" ],
      "annotations": [
        [ "SignedWith", "sms" ],
        [ "FileInfoCategory", "LaneLineWidth" ],
        [ "description", "LD Validation: A segment representing a cross section of a line marking" ],
        [ "ViewGroup", "LaneTypes" ]
      ]
    },
    "LaneMultitrackSeparation": {
      "extends": [ "FrameMarking", "Segment", "ClusterElement" ],
      "annotations": [
        [ "SignedWith", "sms" ],
        [ "FileInfoCategory", "LaneMultitrackSeparation" ],
        [ "description", "LD Validation: A segment representing the horizontal distance in between a multiple-line lane separator" ],
        [ "ViewGroup", "LaneTypes" ]
      ],
      "fields": {
        "laneType": {
          "type": [
            "Enum",
            "notSet",
            "solid",
            "dashed",
            "bottsDotsSolid",
            "bottsDotsDashed",
            "solidRipple",
            "block",
            "separation"
          ],
          "annotations": [
            [ "description", "This segment connects the inner line (which is described by an object of type LaneLine) to an outer line. This field characterizes the outer line" ]
          ]
        }
      }
    },
    "LaneEventPoint": {
      "extends": [ "FrameMarking", "Point", "ClusterElement" ],
      "annotations": [
        [ "SignedWith", "sms" ],
        [ "FileInfoCategory", "LaneEventPoint" ],
        [ "description", "The location where something of interest changes about a lane line marking" ],
        [ "ViewGroup", "LaneTypes" ]
      ],
      "fields": {
        "eventType": {
          "type": [
            "Optional",
            [
              "Enum",
              "openingFork",
              "closingFork",
              "startOfLane",
              "startConstructionSite",
              "endConstructionSite",
              "laneTypeChange",
              "carPoolLane"
            ]
          ]
        }
      }
    },
    "TrafficLightLamp": {
      "extends": [ "Point", "FrameMarking" ],
      "annotations": [
        [ "FileInfoCategory", "TrafficLightLamp" ],
        [ "SignedWith", "sms" ],
        [ "description", "An individual lamp contained within a traffic light sign." ],
        [ "ViewGroup", "TrafficLightMarking" ]
      ],
      "fields": {
        "radiusPointX": {
          "type": [ "Optional", "Float" ],
          "annotations": [
            [ "NotEditable" ],
            [ "description", "Image point coordinate on the horizontal axis. Optional for backward compatibility" ]
          ]
        },
        "radiusPointY": {
          "type": [ "Optional", "Float" ],
          "annotations": [
            [ "NotEditable" ],
            [ "description", "Image point coordinate on the vertical axis. Optional for backward compatibility" ]
          ]
        },
        "parentRefId": {
          "type": "Int",
          "annotations": [
            [ "required" ],
            [ "description", "Id number for the parent traffic light object." ]
          ]
        },
        "signalType": {
          "type": [
            "Set",
            [
              "Enum",
              "circle",
              "rightArrow",
              "leftArrow",
              "upArrow",
              "downArrow",
              "uTurnLeft",
              "uTurnRight",
              "upLeftArrow",
              "upRightArrow",
              "leftUTurnLeftArrow",
              "rightUTurnRightArrow",
              "invertedArrow",
              "other"
            ]
          ],
          "annotations": [
            [ "required" ],
            [ "description", "Describes the shape of the illuminated area within the lamp surface" ]
          ]
        },
        "occlusion": {
          "type": [
            "Enum",
            "none",
            "partial",
            "full"
          ],
          "annotations": [
            [ "required" ],
            [ "description", "Degree of occlusion." ]
          ]
        },
        "occlusionType": {
          "type": [
            "Enum",
            "none",
            "byItSelf",
            "byAnotherObject"
          ],
          "annotations": [
            [ "required" ],
            [ "description", "The type of object this lamp is occluded by." ]
          ]
        },
        "lampState": {
          "type": [
            "Optional",
            [
              "Enum",
              "flashing",
              "on",
              "off"
            ]
          ],
          "annotations": [
            [
              "description",
              "Illumination state"
            ]
          ]
        },
        "color": {
          "type": [
            "Optional",
            [
              "Enum",
              "red",
              "amber",
              "green",
              "white"
            ]
          ],
          "annotations": [
            [ "description", "Color of traffic lamp (when it is lit)." ]
          ]
        }
      }
    },
    "TrafficLight": {
      "extends": [ "FrameMarking", "FreeROI", "ClusterElement" ],
      "annotations": [
        [ "FileInfoCategory", "TrafficLight" ],
        [ "SignedWith", "sms" ],
        [ "description", "A traffic light sign, that means the whole box which is composed of several lamps." ],
        [ "ViewGroup", "TrafficLightMarking" ]
      ],
      "fields": {
        "category": {
          "type": [
            "Set",
            [
              "Enum",
              "twoLightsVertical",
              "twoLightsHorizontal",
              "threeLightsVertical",
              "threeLightsHorizontal",
              "fourLightsVertical",
              "fourLightsHorizontal",
              "publicTransport",
              "pedestrianTrafficlight",
              "cyclistTrafficLight",
              "pedestrian",
              "cyclist",
              "nondescript",
              "singleLampLight",
              "largePanel",
              "railwayCrossing",
              "dogHouseTrafficLight",
              "hawkTrafficLight",
              "nondescriptCrosswalk",
              "nondescriptCommute",
              "nondescriptTrain",
              "nondescriptOther",
              "other"
            ]
          ],
          "annotations": [
            [ "required" ],
            [ "description", "Defines what type of traffic light this is." ]
          ]
        },
        "addOn": {
          "type": "Bool",
          "annotations": [
            [ "required" ],
            [ "description", "Indicates if this object has an aditional sign on." ]
          ]
        },
        "pose": {
          "type": [
            "Optional",
            [
              "Enum",
              "front",
              "rear",
              "side"
            ]
          ],
          "annotations": [
            [ "description", "Specifies the orientation of the traffic light." ]
          ]
        },
        "occlusion": {
          "type": [
            "Enum",
            "none",
            "partial",
            "full"
          ],
          "annotations": [
            [ "required" ],
            [ "description", "Degree of occlusion." ]
          ]
        },
        "lampTechnology": {
          "type": [
            "Optional",
            [
              "Enum",
              "other",
              "led"
            ]
          ],
          "annotations": [
            [ "description", "What kind of lamps are built into the sign." ]
          ]
        },
        "position": {
          "type": [
            "Optional",
            [
              "Enum",
              "egoLane",
              "neighbourLaneLeft",
              "neighbourLaneRight",
              "intersection",
              "neighbourLaneSecondLeft",
              "neighbourLaneSecondRight"
            ]
          ],
          "annotations": [
            [ "description", "Position regarding ego car." ]
          ]
        },
        "state": {
          "type": [
            "Optional",
            [
              "Enum",
              "flashing",
              "on",
              "off"
            ]
          ]
        },
        "color": {
          "type": [
            "Optional",
            [
              "Enum",
              "red",
              "yellow",
              "green",
              "greenYellow",
              "redYellow",
              "redYellowGreen",
              "greenRed",
              "white",
              "other"
            ]
          ],
          "annotations": [
            [
              "description",
              "Color"
            ]
          ]
        },
        "laneAssignment": {
          "type": [
            "Set",
            [
              "Enum",
              "egoLane",
              "neighbourLaneLeft",
              "neighbourLaneRight",
              "intersection",
              "secondNeighbourLaneLeft",
              "secondNeighbourLaneRight",
              "thirdNeighbourLaneLeft",
              "thirdNeighbourLaneRight",
              "fourthNeighbourLaneLeft",
              "fourthNeighbourLaneRight",
              "fifthNeighbourLaneLeft",
              "fifthNeighbourLaneRight"
            ]
          ],
          "annotations": [
            [ "description", "indicates for which lane is assigned a traffic lamp" ]
          ]
        },
        "symbol": {
          "type": [
            "Set",
            [
              "Enum",
              "noSymbol",
              "arrowStraight",
              "arrowLeft",
              "arrowSlopingLeftUp",
              "arrowSlopingLeftDown",
              "arrowSlopingLeft",
              "arrowRight",
              "arrowSlopingRightUp",
              "arrowSlopingRightDown",
              "arrowSlopingRight",
              "u-turnLeft",
              "u-turnRight",
              "arrowStraight+Left",
              "arrowStraight+Right",
              "pedestrian",
              "bicycle",
              "publicTransportationSymbol",
              "other"
            ]
          ],
          "annotations": [
            [ "description", "Symbol information, what symbol the traffic light assembly is displaying" ]
          ]
        }
      }
    },
    "HolisticPath": {
      "extends": [ "FrameMarking", "Point" ],
      "annotations": [
        [ "SignedWith", "sms" ],
        [ "FileInfoCategory", "HolisticPath" ],
        [ "description", "Class used to label the point of an alternative path." ]
      ],
      "fields": {
        "objectType": {
          "type": [
            "Enum",
            "normal",
            "mainPath",
            "alternativePath",
            "laneChangePath",
            "roundabout",
            "trafficViolation",
            "other"
          ],
          "annotations": [
            [ "description", "Defines what type of alternative paths are labelled in the frame." ]
          ]
        },
        "pathWithLaneChange": {
          "type": [ "Optional", "Bool" ],
          "annotations": [
            [ "description", "Defines if taking any of the marked paths will include a lane change." ]
          ]
        }
      }
    },
    "RoadBoundary": {
      "extends": [ "FrameMarking", "Points", "MarkingCreationInformation" ],
      "annotations": [
        [ "SignedWith", "sms" ],
        [ "FileInfoCategory", "RoadBoundary" ],
        [ "description", "A border on one side of a road, made of a sequence of edges. More objects of this type can be clustered together to form a complete road edge" ],
        [ "ViewGroup", "LaneTypes" ]
      ],
      "fields": {
        "roadCover": {
          "type": [
            "Enum",
            "asphalt/concrete",
            "gravel/dirt/soil",
            "cobblestone/tiled",
            "grassy",
            "other",
            "unknown",
            "N/A"
          ],
          "annotations": [
            [ "description", "What is the road made of at the location of this marking" ]
          ]
        },
        "edgeClass": {
          "type": [
            "Array",
            [
              "Enum",
              "notSet",
              "abyss/chasm/deepWater",
              "curb",
              "ditch",
              "fence",
              "grass",
              "gravel/dirt/soil",
              "guardrail",
              "repetitiveBarierUnder0.5m",
              "repetitiveBarierBetween0.5-1.5m",
              "repetitiveBarierBetween1.5m-4m",
              "snow",
              "wall",
              "other"
            ]
          ],
          "annotations": [
            [ "description", "The type of edge per segment" ]
          ]
        },
        "edgeHeight": {
          "type": [
            "Array",
            [
              "Enum",
              "traversable",
              "nonTraversable"
            ]
          ],
          "annotations": [
            [ "description", "Categories of edges related to height, per segment" ]
          ]
        },
        "edgeVisibility": {
          "type": [
            "Array",
            [
              "Enum",
              "sharp",
              "unsharp",
              "difuse"
            ]
          ]
        },
        "edgeOcclusion": {
          "type": [
            "Array",
            [
              "Enum",
              "none",
              "car",
              "truck",
              "pedestrian",
              "manyPedestrians",
              "cyclist",
              "motorcycle",
              "other"
            ]
          ],
          "annotations": [
            [ "description", "Specifies what occludes the marking" ]
          ]
        },
        "sideOfMarking": {
          "type": [
            "Optional",
            [
              "Enum",
              "notSet",
              "left",
              "right"
            ]
          ]
        }
      }
    },
    "RoadBoundedSurface": {
      "extends": [ "FrameMarking", "Points" ],
      "annotations": [
        [ "SignedWith", "sms" ],
        [ "FileInfoCategory", "RoadBoundedSurface" ],
        [ "description", "A portion of a road surface bounded by a polygon. Each segment is called an edge." ]
      ],
      "fields": {
        "roadCover": {
          "type": [
            "Enum",
            "notSet",
            "asphalt/concrete",
            "gravel/dirt/soil",
            "cobblestoned/Tiled",
            "grassy",
            "unknown",
            "N/A",
            "other"
          ],
          "annotations": [
            [ "description", "What is the road made of in the area defined by this marking" ]
          ]
        },
        "edgeClass": {
          "type": [
            "Array",
            [
              "Enum",
              "notSet",
              "abyss/chasm/deepWater",
              "animal",
              "asphalt/concrete",
              "box/bin/pillar",
              "building",
              "busShelter",
              "cart",
              "cobblestone/tiled",
              "context",
              "crest",
              "curb",
              "debris",
              "ditch",
              "fence",
              "grass",
              "gravel/dirt/soil",
              "guardrail",
              "hole",
              "imageEdge",
              "laneOuterEdge",
              "N/A",
              "opticalObstruction",
              "other",
              "person",
              "pole",
              "repetitiveBarrier",
              "rock/stone",
              "sightLimit",
              "sky/horizon",
              "slope",
              "snow",
              "solidBarrier",
              "terrain",
              "trafficCone/Pylon",
              "trees/bushes",
              "twoWheeler",
              "twoWheelerParked",
              "unknown",
              "vehicle",
              "wall"
            ]
          ],
          "annotations": [
            [ "description", "The type of edge, for each section" ]
          ]
        },
        "edgeHeight": {
          "type": [
            "Array",
            [
              "Enum",
              "notSet",
              "flat",
              "raised",
              "raisedNonTraversable",
              "lowered",
              "loweredNonTraversable",
              "N/A"
            ]
          ],
          "annotations": [
            [ "description", "Categories of edges related to height, for each section" ]
          ]
        },
        "edgeVisibility": {
          "type": [
            "Array",
            [
              "Enum",
              "notSet",
              "sharp",
              "unsharp",
              "difuse",
              "N/A"
            ]
          ]
        },
        "objectType": {
          "type": [
            "Enum",
            "egoRoad",
            "offRoad",
            "obstruction",
            "nondescript",
            "drivableSurface",
            "parking"
          ],
          "annotations": [
            [ "description", "Describes the surface that is defined by a road boundary polygon" ]
          ]
        },
        "edgeContinuous": {
          "type": [
            "Array",
            [
              "Enum",
              "notSet",
              "N/A",
              "yes",
              "no"
            ]
          ]
        },
        "edgeOnGround": {
          "type": [
            "Array",
            [
              "Enum",
              "notSet",
              "N/A",
              "yes",
              "no"
            ]
          ]
        }
      }
    },
    "TrafficSignParameterSet1": {
      "annotations": [
        [ "abstract" ],
        [ "description", "A first set of traffic sign properties to be used by some non-abstract markings classes" ]
      ],
      "fieldOrder": [
        "advisorySign",
        "invertedVMSSign",
        "addRefID1",
        "stopSignType",
        "addInformationType1",
        "addTimeRestrPeriod1",
        "addDistRestrValMeter1",
        "addWeightRestrValKg1",
        "addOnForm1",
        "addOnPosition1",
        "addRefID2",
        "addInformationType2",
        "addTimeRestrPeriod2",
        "addDistRestrValMeter2",
        "addWeightRestrValKg2",
        "addOnForm2",
        "addOnPosition2",
        "occlusion",
        "special",
        "rotationX",
        "rotationY",
        "rotationZ",
        "defectiveCondition",
        "status",
        "laneValidity",
        "mounting",
        "autoImageContext",
        "autoImageName",
        "auto3dPosX",
        "auto3dPosY",
        "auto3dPosZ",
        "labelingStarted",
        "IDinPreviousVideo",
        "backgroundColor",
        "addInformationType3",
        "addOnForm3",
        "addOnPosition3",
        "addWeightRestrictionValueKg1",
        "addWeightRestrictionValueKg2",
        "addWeightRestrictionValueKg3",
        "addDistRestrValMeter3",
        "addRefID3",
        "addTimeRestrPeriod3"
      ],
      "fields": {
        "advisorySign": {
          "type": "Bool"
        },
        "invertedVMSSign": {
          "type": "Bool"
        },
        "addRefID1": {
          "type": "String"
        },
        "stopSignType": {
          "type": [
            "Optional",
            [
              "Enum",
              "stopSign"
            ]
          ]
        },
        "addInformationType1": {
          "type": [
            "Optional",
            [
              "Enum",
              "noAdditionalInformation",
              "unreadable",
              "zone",
              "restrictingVehicleOther",
              "restrictingOther",
              "restrictingCars",
              "restrictingBusses",
              "restrictingTrailers",
              "restrictingTrucks",
              "restrictingMotorbikes",
              "restrictingTrucksTrailers",
              "restrictingTrucksBusses",
              "restrictingTrucksBussesTrailers",
              "restrictingHazardousTransport",
              "restrictingWeight",
              "restrictingNight",
              "restrictingTime",
              "restrictionStartDistance",
              "restrictingDistance",
              "restrictingRain",
              "restrictingFog",
              "restrictingExit",
              "restrictingRightTurning",
              "restrictingLeftTurning",
              "restrictingLeftAndRightTurning",
              "restrictingChildrenPresent",
              "restrictingFlashing",
              "nonRestrictingOvertakingTractor",
              "nonRestrictingBegin",
              "nonRestrictingEnd",
              "nonRestrictingOther",
              "nonRestrictingOtherInformation",
              "nonRestrictingDangerQueuesLikely",
              "nonRestrictingDangerAccidentsLikely",
              "nonRestrictingDangerIce",
              "restrictingLimitationAhead",
              "nonRestrictingWork",
              "nonRestrictingSchool",
              "icyOrWet",
              "4WayStop",
              "allWayStop",
              "shoulderLaneAccessible",
              "shoulderLaneInaccessible",
              "nwayStop"
            ]
          ]
        },
        "addOnForm1": {
          "type": [
            "Optional",
            [
              "Enum",
              "supplementary",
              "plate"
            ]
          ]
        },
        "addOnPosition1": {
          "type": [
            "Optional",
            [
              "Enum",
              "bottom1",
              "bottom2",
              "bottom3",
              "top1",
              "top2",
              "top3",
              "left",
              "right",
              "none"
            ]
          ]
        },
        "addRefID2": {
          "type": "String"
        },
        "addInformationType2": {
          "type": [
            "Optional",
            [
              "Enum",
              "noAdditionalInformation",
              "unreadable",
              "zone",
              "restrictingVehicleOther",
              "restrictingOther",
              "restrictingCars",
              "restrictingBusses",
              "restrictingTrailers",
              "restrictingTrucks",
              "restrictingMotorbikes",
              "restrictingTrucksTrailers",
              "restrictingTrucksBusses",
              "restrictingTrucksBussesTrailers",
              "restrictingHazardousTransport",
              "restrictingWeight",
              "restrictingNight",
              "restrictingTime",
              "restrictionStartDistance",
              "restrictingDistance",
              "restrictingRain",
              "restrictingFog",
              "restrictingExit",
              "restrictingRightTurning",
              "restrictingLeftTurning",
              "restrictingLeftAndRightTurning",
              "restrictingChildrenPresent",
              "restrictingFlashing",
              "nonRestrictingOvertakingTractor",
              "nonRestrictingBegin",
              "nonRestrictingEnd",
              "nonRestrictingOther",
              "nonRestrictingOtherInformation",
              "nonRestrictingDangerQueuesLikely",
              "nonRestrictingDangerAccidentsLikely",
              "nonRestrictingDangerIce",
              "restrictingLimitationAhead",
              "nonRestrictingWork",
              "nonRestrictingSchool",
              "icyOrWet",
              "4WayStop",
              "allWayStop",
              "shoulderLaneAccessible",
              "shoulderLaneInaccessible",
              "nwayStop"
            ]
          ]
        },
        "addOnForm2": {
          "type": [
            "Optional",
            [
              "Enum",
              "supplementary",
              "plate"
            ]
          ]
        },
        "addOnPosition2": {
          "type": [
            "Optional",
            [
              "Enum",
              "bottom1",
              "bottom2",
              "bottom3",
              "top1",
              "top2",
              "top3",
              "left",
              "right",
              "none"
            ]
          ]
        },
        "occlusion": {
          "type": [
            "Optional",
            [
              "Enum",
              "none",
              "innerCircle",
              "outerCircle",
              "numbersReadable",
              "numbersUnreadable"
            ]
          ]
        },
        "special": {
          "type": [
            "Optional",
            [
              "Enum",
              "none",
              "tripod",
              "illuminatedFront",
              "illuminatedBack",
              "ledNotInverted",
              "repeater",
              "moving",
              "alternating",
              "multiSign",
              "multiSign_movedShape"
            ]
          ]
        },
        "rotationX": {
          "type": [
            "Optional",
            [
              "Enum",
              "below10deg",
              "higher10deg",
              "higher20deg",
              "higher30deg"
            ]
          ]
        },
        "rotationY": {
          "type": [
            "Optional",
            [
              "Enum",
              "below20deg",
              "higher20deg",
              "higher30deg",
              "higher40deg"
            ]
          ]
        },
        "rotationZ": {
          "type": [
            "Optional",
            [
              "Enum",
              "below20deg",
              "higher20deg",
              "higher30deg",
              "higher40deg"
            ]
          ]
        },
        "defectiveCondition": {
          "type": [
            "Optional",
            [
              "Enum",
              "normal",
              "dirty",
              "damaged",
              "bleached",
              "snowCovered",
              "stickerPasted",
              "LEDFragmented"
            ]
          ]
        },
        "status": {
          "type": [
            "Optional",
            [
              "Enum",
              "finished",
              "toBeChecked"
            ]
          ]
        },
        "laneValidity": {
          "type": [
            "Optional",
            [
              "Enum",
              "notValid",
              "otherRoad",
              "egoRoad",
              "egoLane",
              "1LaneLeft",
              "1LaneRight",
              "2LanesLeft",
              "2LanesRight",
              "3LaneLeft",
              "3LaneRight",
              "4LanesLeft",
              "4LanesRight",
              "notValidMasked",
              "temporaryNotValid"
            ]
          ]
        },
        "mounting": {
          "type": [
            "Optional",
            [
              "Enum",
              "side",
              "bridge",
              "other"
            ]
          ]
        },
        "autoImageContext": {
          "type": "String"
        },
        "autoImageName": {
          "type": "String"
        },
        "auto3dPosX": {
          "type": "String"
        },
        "auto3dPosY": {
          "type": "String"
        },
        "auto3dPosZ": {
          "type": "String"
        },
        "labelingStarted": {
          "type": [
            "Optional",
            [
              "Enum",
              "thisVideo",
              "previousVideo"
            ]
          ]
        },
        "IDinPreviousVideo": {
          "type": "String"
        },
        "addTimeRestrPeriod1": {
          "type": "String"
        },
        "addDistRestrValMeter1": {
          "type": "String"
        },
        "addWeightRestrValKg1": {
          "type": "String"
        },
        "addTimeRestrPeriod2": {
          "type": "String"
        },
        "addDistRestrValMeter2": {
          "type": "String"
        },
        "addWeightRestrValKg2": {
          "type": "String"
        },
        "backgroundColor": {
          "type": [
            "Optional",
            [
              "Enum",
              "white",
              "yellow",
              "orangeRed",
              "blue",
              "green",
              "other"
            ]
          ]
        },
        "addInformationType3": {
          "type": [
            "Optional",
            [
              "Enum",
              "noAdditionalInformation",
              "unreadable",
              "zone",
              "restrictingVehicleOther",
              "restrictingOther",
              "restrictingCars",
              "restrictingBusses",
              "restrictingTrailers",
              "restrictingTrucks",
              "restrictingMotorbikes",
              "restrictingTrucksTrailers",
              "restrictingTrucksBusses",
              "restrictingTrucksBussesTrailers",
              "restrictingHazardousTransport",
              "restrictingWeight",
              "restrictingNight",
              "restrictingTime",
              "restrictionStartDistance",
              "restrictingDistance",
              "restrictingRain",
              "restrictingFog",
              "restrictingExit",
              "restrictingRightTurning",
              "restrictingLeftTurning",
              "restrictingLeftAndRightTurning",
              "restrictingChildrenPresent",
              "restrictingFlashing",
              "nonRestrictingOvertakingTractor",
              "nonRestrictingBegin",
              "nonRestrictingEnd",
              "nonRestrictingOther",
              "nonRestrictingOtherInformation",
              "nonRestrictingDangerQueuesLikely",
              "nonRestrictingDangerAccidentsLikely",
              "nonRestrictingDangerIce",
              "restrictingLimitationAhead",
              "nonRestrictingWork",
              "nonRestrictingSchool",
              "icyOrWet",
              "4WayStop",
              "allWayStop",
              "shoulderLaneAccessible",
              "shoulderLaneInaccessible",
              "nwayStop"
            ]
          ]
        },
        "addOnForm3": {
          "type": [
            "Optional",
            [
              "Enum",
              "supplementary",
              "plate"
            ]
          ]
        },
        "addOnPosition3": {
          "type": [
            "Optional",
            [
              "Enum",
              "bottom1",
              "bottom2",
              "bottom3",
              "top1",
              "top2",
              "top3",
              "left",
              "right",
              "none"
            ]
          ]
        },
        "addWeightRestrictionValueKg1": {
          "type": [
            "Optional",
            [
              "Enum",
              "restricting3.5t",
              "restricting7.5t",
              "restricting3.5To7.5t",
              "restrictingOver7.5t"
            ]
          ]
        },
        "addWeightRestrictionValueKg2": {
          "type": [
            "Optional",
            [
              "Enum",
              "restricting3.5t",
              "restricting7.5t",
              "restricting3.5To7.5t",
              "restrictingOver7.5t"
            ]
          ]
        },
        "addWeightRestrictionValueKg3": {
          "type": [
            "Optional",
            [
              "Enum",
              "restricting3.5t",
              "restricting7.5t",
              "restricting3.5To7.5t",
              "restrictingOver7.5t"
            ]
          ]
        },
        "addDistRestrValMeter3": {
          "type": "String"
        },
        "addRefID3": {
          "type": "String"
        },
        "addTimeRestrPeriod3": {
          "type": "String"
        }
      }
    },
    "TrafficSignParameterSet2": {
      "annotations": [
        [ "abstract" ],
        [ "description", "A second set of traffic sign properties to be used by some non-abstract markings classes" ]
      ],
      "fieldOrder": [
        "prohibitionSignType",
        "endOfSignType",
        "minimumSpeedType",
        "endOfMinimumSpeedType"
      ],
      "fields": {
        "prohibitionSignType": {
          "type": [
            "Optional",
            [
              "Enum",
              "noOvertaking",
              "noOvertakingTrucks",
              "5",
              "10",
              "15",
              "20",
              "25",
              "30",
              "35",
              "40",
              "45",
              "50",
              "55",
              "60",
              "65",
              "70",
              "75",
              "80",
              "85",
              "90",
              "95",
              "100",
              "105",
              "110",
              "115",
              "120",
              "125",
              "130",
              "135",
              "140",
              "other",
              "none"
            ]
          ]
        },
        "endOfSignType": {
          "type": [
            "Optional",
            [
              "Enum",
              "allLimits",
              "noOvertaking",
              "noOvertakingTrucks",
              "5",
              "10",
              "15",
              "20",
              "25",
              "30",
              "35",
              "40",
              "45",
              "50",
              "55",
              "60",
              "65",
              "70",
              "75",
              "80",
              "85",
              "90",
              "95",
              "100",
              "105",
              "110",
              "115",
              "120",
              "125",
              "130",
              "135",
              "140",
              "other",
              "none"
            ]
          ]
        },
        "minimumSpeedType": {
          "type": [
            "Optional",
            [
              "Enum",
              "other",
              "5",
              "10",
              "15",
              "20",
              "25",
              "30",
              "35",
              "40",
              "45",
              "50",
              "55",
              "60",
              "65",
              "70",
              "75",
              "80",
              "85",
              "90",
              "95",
              "100",
              "105",
              "110",
              "115",
              "120",
              "125",
              "130",
              "135",
              "140",
              "none"
            ]
          ]
        },
        "endOfMinimumSpeedType": {
          "type": [
            "Optional",
            [
              "Enum",
              "other",
              "5",
              "10",
              "15",
              "20",
              "25",
              "30",
              "35",
              "40",
              "45",
              "50",
              "55",
              "60",
              "65",
              "70",
              "75",
              "80",
              "85",
              "90",
              "95",
              "100",
              "105",
              "110",
              "115",
              "120",
              "125",
              "130",
              "135",
              "140",
              "none"
            ]
          ]
        },
        "crossWalkType": {
          "type": [
            "Optional",
            [
              "Enum",
              "none",
              "crossWalk"
            ]
          ]
        },
        "tollStationSign": {
          "type": [
            "Optional",
            [
              "Enum",
              "none",
              "tollStation"
            ]
          ],
          "annotations": [
            [ "NotEditable" ],
            [ "description", "Replaced by tollSignType" ]
          ]
        },
        "tollSignType": {
          "type": [
            "Optional",
            [
              "Enum",
              "none",
              "tollStation",
              "endOfTollSign"
            ]
          ]
        }
      }
    },
    "DangerSign": {
      "annotations": [
        [ "abstract" ],
        [ "description", "Danger Traffic Signs" ]
      ],
      "fieldOrder": [
        "dangerSignType",
        "dangerSignText"
      ],
      "fields": {
        "dangerSignType": {
          "type": [
            "Optional",
            [
              "Enum",
              "none",
              "universal",
              "crossroad",
              "slipperyRoad",
              "bendRight",
              "bendLeft",
              "doubleBendFirstRight",
              "doubleBendFirstLeft",
              "steepHillDownwards",
              "steepHillUpwards",
              "unevenRoad",
              "ice",
              "rocks",
              "dirtyRoad",
              "sidewind",
              "roadNarrows",
              "roadNarrowsRight",
              "roadNarrowsLeft",
              "constructionSite",
              "queues",
              "oncomingTraffic",
              "drawBridge",
              "riverbank",
              "trafficLights",
              "pedestrians",
              "zebraCrossing",
              "bicycles",
              "school",
              "cattle",
              "wildAnimals",
              "airTraffic",
              "bus",
              "leveledGate",
              "train",
              "tram",
              "tunnel",
              "roundabout",
              "frailPedestrians",
              "two-WayTrafficCross",
              "t-JunctionLeft",
              "t-JunctionRight",
              "staggeredJunction",
              "mergingLeft",
              "mergingRight",
              "horseRider",
              "softShoulder",
              "ski",
              "accidents",
              "reducedVisibility",
              "other",
              "priorityCrossroad",
              "priorityMinorRoadLeft",
              "priorityMinorRoadRight",
              "endConstructionSite"
            ]
          ]
        },
        "dangerSignText": {
          "type": "String"
        }
      }
    },
    "AddOnTrafficSign": {
      "extends": [ "FrameMarking", "Points", "ClusterElement" ],
      "annotations": [
        [ "FileInfoCategory", "AddOnTrafficSign" ],
        [ "SignedWith", "sms" ],
        [ "ViewGroup", "TSRMarking" ]
      ],
      "fieldOrder": [
        "autoImageName",
        "frameNumber",
        "mainSignRef",
        "refId",
        "streamName"
      ],
      "fields": {
        "autoImageName": {
          "type": "String"
        },
        "mainSignRef": {
          "type": "String"
        }
      }
    },
    "TrafficSignOval": {
      "extends": [ "FrameMarking", "Points", "TrafficSignParameterSet1", "TrafficSignParameterSet2", "ClusterElement" ],
      "annotations": [
        [ "metaDataRef", "tsrmd" ],
        [ "SignedWith", "sms" ],
        [ "FileInfoCategory", "TrafficSignOval" ],
        [ "ViewGroup", "TSRMarking" ]
      ],
      "fieldOrder": [
        "refId",
        "frameNumber",
        "streamName",
        "prohibitionSignType",
        "endOfSignType",
        "confusingType",
        "minimumSpeedType",
        "endOfMinimumSpeedType",
        "advisorySign",
        "invertedVMSSign",
        "addRefID1",
        "addInformationType1",
        "addOnForm1",
        "addOnPosition1",
        "addRefID2",
        "addInformationType2",
        "addOnForm2",
        "addOnPosition2",
        "occlusion",
        "special",
        "defectiveCondition",
        "status",
        "laneValidity",
        "mounting",
        "autoImageContext",
        "autoImageName",
        "labelingStarted",
        "IDinPreviousVideo",
        "addTimeRestrPeriod1",
        "addDistRestrValMeter1",
        "addWeightRestrValKg1",
        "addTimeRestrPeriod2",
        "addDistRestrValMeter2",
        "addWeightRestrValKg2",
        "trackRoutingType",
        "backgroundColor",
        "rotationX",
        "rotationY",
        "rotationZ",
        "auto3dPosX",
        "auto3dPosY",
        "auto3dPosZ",
        "crossWalkType"
      ],
      "fields": {
        "confusingType": {
          "type": [
            "Optional",
            [
              "Enum",
              "none",
              "generalSpeedInfo",
              "speedSignOnTruck",
              "highwayExitNumber",
              "noOvertakingTrucks",
              "heightOrWeightOrWidthSigns",
              "EndOfNoOvertakingTrucks",
              "lowEmissionZone"
            ]
          ]
        },
        "trackRoutingType": {
          "type": [
            "Optional",
            [
              "Enum",
              "noEntry",
              "roundAbout",
              "keepLeft",
              "keepRight",
              "keepStraight",
              "keepStraightOrLeft",
              "keepStraightOrRight",
              "turnLeft",
              "turnRight",
              "turnLeftOrRight",
              "other",
              "none"
            ]
          ]
        },
        "crossWalkType": {
          "type": [
            "Optional",
            [
              "Enum",
              "none",
              "crossWalk"
            ]
          ],
          "annotations": [
            [ "description", "Specifies if there are crosswalks in the frame" ]
          ]
        }
      }
    },
    "TrafficSignQuadrangle": {
      "extends": [ "FrameMarking", "Points", "TrafficSignParameterSet1", "TrafficSignParameterSet2", "DangerSign", "ClusterElement" ],
      "annotations": [
        [ "metaDataRef", "tsrmd" ],
        [ "SignedWith", "sms" ],
        [ "FileInfoCategory", "TrafficSignQuadrangle" ],
        [ "ViewGroup", "TSRMarking" ]
      ],
      "fieldOrder": [
        "refId",
        "frameNumber",
        "streamName",
        "prohibitionSignType",
        "endOfSignType",
        "confusingType",
        "minimumSpeedType",
        "endOfMinimumSpeedType",
        "advisorySign",
        "invertedVMSSign",
        "addRefID1",
        "addInformationType1",
        "addOnForm1",
        "addOnPosition1",
        "addRefID2",
        "addInformationType2",
        "addOnForm2",
        "addOnPosition2",
        "occlusion",
        "special",
        "defectiveCondition",
        "status",
        "laneValidity",
        "mounting",
        "autoImageContext",
        "autoImageName",
        "labelingStarted",
        "IDinPreviousVideo",
        "addTimeRestrPeriod1",
        "addDistRestrValMeter1",
        "addWeightRestrValKg1",
        "addTimeRestrPeriod2",
        "addDistRestrValMeter2",
        "addWeightRestrValKg2",
        "crossWalkType",
        "recommendationSignType",
        "endOfRecommendationSignType",
        "dangerSignType",
        "roadCategorySignType",
        "backgroundColor",
        "rotationX",
        "rotationY",
        "rotationZ",
        "auto3dPosX",
        "auto3dPosY",
        "auto3dPosZ",
        "laneChangeTrafficSigns"
      ],
      "fields": {
        "confusingType": {
          "type": [
            "Optional",
            [
              "Enum",
              "none",
              "generalSpeedInfo",
              "heightOrWeightOrWidthSigns"
            ]
          ]
        },
        "recommendationSignType": {
          "type": [
            "Optional",
            [
              "Enum",
              "other",
              "5",
              "10",
              "15",
              "20",
              "25",
              "30",
              "35",
              "40",
              "45",
              "50",
              "55",
              "60",
              "65",
              "70",
              "75",
              "80",
              "85",
              "90",
              "95",
              "100",
              "105",
              "110",
              "115",
              "120",
              "125",
              "130",
              "135",
              "140",
              "none"
            ]
          ]
        },
        "endOfRecommendationSignType": {
          "type": [
            "Optional",
            [
              "Enum",
              "other",
              "5",
              "10",
              "15",
              "20",
              "25",
              "30",
              "35",
              "40",
              "45",
              "50",
              "55",
              "60",
              "65",
              "70",
              "75",
              "80",
              "85",
              "90",
              "95",
              "100",
              "105",
              "110",
              "115",
              "120",
              "125",
              "130",
              "135",
              "140",
              "none"
            ]
          ]
        },
        "roadCategorySignType": {
          "type": [
            "Optional",
            [
              "Enum",
              "none",
              "HighwayBegin",
              "HighwayEnd",
              "MotorwayBegin",
              "MotorwayEnd",
              "ExpresswayBegin",
              "ExpresswayEnd",
              "LivingStreetBegin",
              "LivingStreetEnd",
              "CityEntry",
              "CityExit",
              "limitedAccessBegin",
              "limitedAccessEnd"
            ]
          ]
        },
        "laneChangeTrafficSigns": {
          "type": [
            "Optional",
            [
              "Enum",
              "none",
              "chicaneAnnoucementRight",
              "chicaneAnnoucementLeft",
              "chicaneAnnouncementMisc",
              "chicaneAnnouncementClosureRight",
              "chicaneAnnouncementClosureLeft",
              "laneClosureRight",
              "laneClosureLeft",
              "laneClosureSign",
              "laneOpenSign",
              "laneChangeLeft",
              "laneChangeRight",
              "shoulderLaneClosure",
              "shoulderLaneOpen",
              "laneClosed",
              "laneOpen"
            ]
          ]
        }
      }
    },
    "TrafficSignTriangle": {
      "extends": [ "FrameMarking", "Points", "TrafficSignParameterSet1", "DangerSign", "ClusterElement" ],
      "annotations": [
        [ "metaDataRef", "tsrmd" ],
        [ "SignedWith", "sms" ],
        [ "FileInfoCategory", "TrafficSignTriangle" ],
        [ "ViewGroup", "TSRMarking" ]
      ],
      "fieldOrder": [
        "refId",
        "frameNumber",
        "streamName",
        "backgroundColor",
        "advisorySign",
        "invertedVMSSign",
        "addRefID1",
        "addInformationType1",
        "addOnForm1",
        "addOnPosition1",
        "addTimeRestrPeriod1",
        "addDistRestrValMeter1",
        "addWeightRestrValKg1",
        "addRefID2",
        "addInformationType2",
        "addOnForm2",
        "addOnPosition2",
        "addTimeRestrPeriod2",
        "addDistRestrValMeter2",
        "addWeightRestrValKg2",
        "occlusion",
        "special",
        "defectiveCondition",
        "status",
        "laneValidity",
        "mounting",
        "labelingStarted",
        "IDinPreviousVideo",
        "autoImageName",
        "autoImageContext",
        "dangerSignType",
        "rotationX",
        "rotationY",
        "rotationZ",
        "auto3dPosX",
        "auto3dPosY",
        "auto3dPosZ"
      ]
    },
    "HumanPoints": {
      "annotations": [
        [ "abstract" ],
        [ "description", "Abstract class for marking the head,pelvic and feet coordinates on a human" ]
      ],
      "fields": {
        "headPointX": {
          "type": [ "Optional", "Float" ],
          "annotations": [ "description", "Horizontal position of head point." ]
        },
        "headPointY": {
          "type": [ "Optional", "Float" ],
          "annotations": [ "description", "Vertical position of head point." ]
        },
        "pelvicPointX": {
          "type": [ "Optional", "Float" ],
          "annotations": [ "description", "Horizontal position of pelvic point." ]
        },
        "pelvicPointY": {
          "type": [ "Optional", "Float" ],
          "annotations": [ "description", "Vertical position of pelvic point." ]
        },
        "feetPointX": {
          "type": [ "Optional", "Float" ],
          "annotations": [ "description", "Horizontal position of feet point." ]
        },
        "feetPointY": {
          "type": [ "Optional", "Float" ],
          "annotations": [ "description", "Vertical position of feet point." ]
        }
      }
    },
    "PedestrianPoints": {
      "extends": [ "FrameMarking", "HumanPoints", "HumanOcclusionEx", "PedestrianMisc" ],
      "annotations": [
        [ "SignedWith", "sms" ],
        [ "FileInfoCategory", "PedestrianPoints" ],
        [ "description", "A pedestrian defined by certain points of interest on the body" ]
      ],
      "fieldOrder": [
        "frameNumber",
        "streamName",
        "refId",
        "objectType",
        "headPointX",
        "headPointY",
        "headPointOccluded",
        "pelvicPointX",
        "pelvicPointY",
        "pelvicPointOccluded",
        "feetPointX",
        "feetPointY",
        "feetPointOccluded",
        "movement",
        "strangePose",
        "ageGroup",
        "direction",
        "upperOcclusion",
        "lowerOcclusion",
        "unsharp"
      ],
      "fields": {
        "objectType": {
          "type": [
            "Enum",
            "pedestrian",
            "dummyPedestrian"
          ],
          "annotations": [ "required" ]
        },
        "movement": {
          "type": [
            "Enum",
            "still",
            "walking",
            "runnning",
            "other"
          ],
          "annotations": [
            [ "required" ],
            [ "description", "Describes how the object is moving." ]
          ]
        }
      }
    },
    "TwoWheelerPoints": {
      "extends": [ "FrameMarking", "HumanPoints", "HumanOcclusionEx", "PedestrianMisc" ],
      "annotations": [
        [ "SignedWith", "sms" ],
        [ "FileInfoCategory", "TwoWheelerPoints" ],
        [ "description", "A two-wheeler defined by certain points of interest on the body of the rider and on the bike/bycicle" ]
      ],
      "fieldOrder": [
        "frameNumber",
        "streamName",
        "refId",
        "objectType",
        "headPointX",
        "headPointY",
        "headPointOccluded",
        "pelvicPointX",
        "pelvicPointY",
        "pelvicPointOccluded",
        "feetPointX",
        "feetPointY",
        "feetPointOccluded",
        "FrontWheelCenterPointX",
        "FrontWheelCenterPointY",
        "FrontWheelContactPointX",
        "FrontWheelContactPointY",
        "FrontWheelSidePointX",
        "FrontWheelSidePointY",
        "FrontWheelContactPointOccluded",
        "RearWheelCenterPointX",
        "RearWheelCenterPointY",
        "RearWheelContactPointX",
        "RearWheelContactPointY",
        "RearWheelSidePointX",
        "RearWheelSidePointY",
        "RearWheelContactPointOccluded",
        "movement",
        "strangePose",
        "ageGroup",
        "direction",
        "upperOcclusion",
        "lowerOcclusion",
        "unsharp"
      ],
      "fields": {
        "objectType": {
          "type": [
            "Enum",
            "cyclist",
            "mopedist",
            "motorCyclist",
            "otherTwoWheeler",
            "dummyCyclist"
          ]
        },
        "movement": {
          "type": [
            "Enum",
            "still",
            "riding"
          ],
          "annotations": [ "required" ]
        },
        "FrontWheelCenterPointX": {
          "type": [ "Optional", "Float" ]
        },
        "FrontWheelCenterPointY": {
          "type": [ "Optional", "Float" ]
        },
        "FrontWheelSidePointX": {
          "type": [ "Optional", "Float" ]
        },
        "FrontWheelSidePointY": {
          "type": [ "Optional", "Float" ]
        },
        "FrontWheelContactPointX": {
          "type": [ "Optional", "Float" ]
        },
        "FrontWheelContactPointY": {
          "type": [ "Optional", "Float" ]
        },
        "FrontWheelContactPointOccluded": {
          "type": [ "Optional", "Bool" ]
        },
        "RearWheelCenterPointX": {
          "type": [ "Optional", "Float" ]
        },
        "RearWheelCenterPointY": {
          "type": [ "Optional", "Float" ]
        },
        "RearWheelSidePointX": {
          "type": [ "Optional", "Float" ]
        },
        "RearWheelSidePointY": {
          "type": [ "Optional", "Float" ]
        },
        "RearWheelContactPointX": {
          "type": [ "Optional", "Float" ]
        },
        "RearWheelContactPointY": {
          "type": [ "Optional", "Float" ]
        },
        "RearWheelContactPointOccluded": {
          "type": [ "Optional", "Bool" ]
        },
        "turnLightLeft": {
          "type": [
            "Optional",
            [
              "Enum",
              "false",
              "true"
            ]
          ]
        },
        "turnLightRight": {
          "type": [
            "Optional",
            [
              "Enum",
              "false",
              "true"
            ]
          ]
        },
        "breakLight": {
          "type": [
            "Optional",
            [
              "Enum",
              "false",
              "true"
            ]
          ]
        },
        "emergencyLights": {
          "type": [
            "Optional",
            [
              "Enum",
              "false",
              "true"
            ]
          ]
        },
        "indicatorOcclusion": {
          "type": [
            "Optional",
            [
              "Enum",
              "none",
              "left",
              "right",
              "full"
            ]
          ],
          "annotations": [
            [
              "description",
              "Occlusion of an indicator. Set by labeler."
            ]
          ]
        }
      }
    },
    "VehicleWheels": {
      "extends": [ "FrameMarking" ],
      "annotations": [
        [ "SignedWith", "sms" ],
        [ "FileInfoCategory", "VehicleWheels" ],
        [ "description", "The wheels of a vehicle defined by their contact points to the ground. Only two wheels are marked at maximum." ],
        [ "ViewGroup", "VehicleMarking" ]
      ],
      "fields": {
        "FrontWheelContactPointX": {
          "type": [ "Optional", "Float" ],
          "annotations": [
            [ "description", "X coordinate of contact point between ground plane and front wheel." ]
          ]
        },
        "FrontWheelContactPointY": {
          "type": [ "Optional", "Float" ],
          "annotations": [
            [ "description", "Y coordinate of contact point between ground plane and front wheel." ]
          ]
        },
        "RearWheelContactPointX": {
          "type": [ "Optional", "Float" ],
          "annotations": [
            [ "description", "X coordinate of contact point between ground plane and rear wheel." ]
          ]
        },
        "RearWheelContactPointY": {
          "type": [ "Optional", "Float" ],
          "annotations": [
            [ "description", "Y coordinate of contact point between ground plane and rear wheel." ]
          ]
        },
        "parentRefId": {
          "type": "Int",
          "annotations": [
            [ "required" ],
            [ "description", "RefId of the corresponding vehicle object." ]
          ]
        },
        "frontWheelOccluded": {
          "type": [ "Optional", "Bool" ],
          "annotations": [ "description", "true if front wheel is occluded" ]
        },
        "rearWheelOccluded": {
          "type": [ "Optional", "Bool" ],
          "annotations": [ "description", "true if front wheel is occluded" ]
        },
        "wheelsUnclear": {
          "type": [
            "Optional",
            [
              "Enum",
              "false",
              "true"
            ]
          ]
        }
      }
    },
    "WheeledObject": {
      "annotations": [
        [ "abstract" ],
        [ "description", "Properties of object on two/four wheels" ]
      ],
      "fields": {
        "pose": {
          "type": [
            "Enum",
            "notSet",
            "front",
            "front-left",
            "front-right",
            "rear",
            "rear-left",
            "rear-right",
            "side",
            "side-right",
            "side-left",
            "other"
          ],
          "annotations": [ "required" ]
        },
        "lighting": {
          "type": [
            "Enum",
            "normal",
            "glare",
            "unsharp"
          ],
          "annotations": [ "required" ]
        },
        "occlusion": {
          "type": [
            "Enum",
            "none",
            "partial",
            "full",
            "light",
            "medium",
            "heavy"
          ],
          "annotations": [ "required" ]
        },
        "laneAssignment": {
          "type": [
            "Optional",
            [
              "Enum",
              "unknown",
              "-3",
              "-2",
              "-1",
              "0",
              "1",
              "2",
              "3"
            ]
          ],
          "annotations": [
            "description",
            "Indicates which lane the object is located in. Unknown should be default. Once marker has set a value, that value should be copied to later frames of the same object until the marker sets another value again. Old markings without this field should be set to unknown."
          ]
        },
        "turnIndicator": {
          "type": [
            "Optional",
            [
              "Enum",
              "false",
              "left",
              "right",
              "both",
              "off",
              "unknown"
            ]
          ],
          "annotations": [
            [ "description", "Indicates whether any of the objects turn indicators are on/off in current frame." ]
          ]
        },
        "brakeLight": {
          "type": [ "Optional", "Bool" ],
          "annotations": [
            [
              "description",
              "Indicates whether the objects brake lights are on/off in current frame. Unknown should be default. Once marker has set a value, that value should be copied to later frames of the same object until the marker sets another value again. Old markings without this field should be set to unknown."
            ]
          ]
        },
        "warningIndicator": {
          "type": [ "Optional", "Bool" ],
          "annotations": [
            [
              "description",
              "Indicates whether the objects warning indicator are on/off in current frame. Unknown should be default. Once marker has set a value, that value should be copied to later frames of the same object until the marker sets another value again. Old markings without this field should be set to unknown."
            ]
          ]
        },
        "direction": {
          "type": [
            "Optional",
            [
              "Enum",
              "oncoming",
              "preceding"
            ]
          ],
          "annotations": [
            [ "description", "Direction of the object movement." ]
          ]
        }
      }
    },
    "NonDescript2": {
      "extends": [ "FrameMarking", "FreeROI" ],
      "annotations": [
        [ "abstract" ],
        [ "description", "Region that should be ignored by Object Detection functions. A closed Polygon" ]
      ]
    },
    "NonDescriptPedestrians": {
      "extends": [ "NonDescript2" ],
      "annotations": [
        [ "description", "Region that should be ignored by Object Detection functions. A closed Polygon" ],
        [ "SignedWith", "sms" ],
        [ "FileInfoCategory", "NonDescriptPedestrians" ],
        [ "ViewGroup", "PedestrianMarking" ]
      ]
    },
    "NonDescriptTwoWheelers": {
      "extends": [ "NonDescript2" ],
      "annotations": [
        [ "description", "Region that should be ignored by Object Detection functions. A closed Polygon" ],
        [ "SignedWith", "sms" ],
        [ "FileInfoCategory", "NonDescriptTwoWheelers" ],
        [ "ViewGroup", "TwoWheelerMarking" ]
      ],
      "fields": {
        "onlyUnmounted": {
          "type": [
            "Optional",
            [
              "Enum",
              "false",
              "true"
            ]
          ]
        }
      }
    },
    "NonDescriptVehicles": {
      "extends": [ "NonDescript2" ],
      "annotations": [
        [ "description", "Region that should be ignored by Object Detection functions. A closed Polygon" ],
        [ "SignedWith", "sms" ],
        [ "FileInfoCategory", "NonDescriptVehicles" ],
        [ "ViewGroup", "VehicleMarking" ]
      ]
    },
    "BorderPolygon": {
      "extends": [ "FrameMarking", "Points" ],
      "annotations": [
        [ "description", "Stationary unclassified object. A closed Polygon" ],
        [ "SignedWith", "sms" ],
        [ "FileInfoCategory", "BorderPolygon" ]
      ]
    },
    "MovingGeneralObject": {
      "extends": [ "FrameMarking", "FreeROI", "Box3D" ],
      "annotations": [
        [ "description", "description", "Unclassified moving object" ],
        [ "SignedWith", "sms" ],
        [ "FileInfoCategory", "MovingGeneralObject" ]
      ]
    },
    "Vehicle": {
      "extends": [ "FrameMarking", "FreeROI", "Box3D", "WheeledObject", "VehicleOcclusion", "ClusterElement" ],
      "annotations": [
        [ "metaDataRef", "vdmd" ],
        [ "SignedWith", "sms" ],
        [ "FileInfoCategory", "Vehicle" ],
        [ "description", "A vehicle defined as a quadrangle on image, and/or a 3D Box in world coordinates" ],
        [ "ViewGroup", "VehicleMarking" ]
      ],
      "fieldOrder": [
        "frameNumber",
        "streamName",
        "refId",
        "objectType",
        "pose",
        "lighting",
        "occlusion",
        "bottomOccluded",
        "laneAssignment",
        "turnIndicator",
        "brakeLight",
        "warningIndicator",
        "laneChange",
        "movement",
        "rotation",
        "direction",
        "occludedByRefID"
      ],
      "fields": {
        "refLinePoint1X": {
          "type": [ "Optional", "Float" ],
          "annotations": [
            [ "NotEditable" ],
            [ "description", "RefLine is a segment from refLinePoint1 to RefLinePoint2" ]
          ]
        },
        "refLinePoint1Y": {
          "type": [ "Optional", "Float" ],
          "annotations": [ "NotEditable" ]
        },
        "refLinePoint2X": {
          "type": [ "Optional", "Float" ],
          "annotations": [ "NotEditable" ]
        },
        "refLinePoint2Y": {
          "type": [ "Optional", "Float" ],
          "annotations": [ "NotEditable" ]
        },
        "objectType": {
          "type": [
            "Enum",
            "car",
            "truck",
            "otherTruck",
            "bus",
            "otherVehicle",
            "nondescript",
            "FP",
            "baloonCar",
            "dummyCar",
            "constructionWarningTrailer",
            "constructionVehicle",
            "trailer",
            "otherTrailer",
            "tram",
            "motorhome",
            "occludingObject",
            "van",
            "pickup",
            "truckTrailer",
            "heavyEquipmentVehicle",
            "tukTuk"
          ],
          "annotations": [ "required" ]
        },
        "laneChange": {
          "type": [ "Optional", "Bool" ],
          "annotations": [
            [ "description", "Rough estimate that the center of car is passing the lane separator. Set by labeler." ]
          ]
        },
        "movement": {
          "type": [
            "Optional",
            [
              "Enum",
              "moving",
              "parked",
              "stationary"
            ]
          ]
        },
        "rotation": {
          "type": [
            "Optional",
            [
              "Enum",
              "irrelevant",
              "relevant"
            ]
          ],
          "annotations": [
            [ "description", "Indicates if the vehicle is relevant or not based on rotation" ]
          ]
        },
        "occludedByRefID": {
          "type": [ "Array", "Int" ],
          "annotations": [
            [ "description", "OccludedBy can hold the reference ID:s to other vehicle or occludingObject" ]
          ]
        },
        "odd": {
          "type": [
            "Optional",
            [
              "Enum",
              "yes",
              "no"
            ]
          ]
        },
        "isParked": {
          "type": [
            "Optional",
            [
              "Enum",
              "yes",
              "no"
            ]
          ]
        },
        "attached": {
          "type": [
            "Optional",
            [
              "Enum",
              "yes",
              "no"
            ]
          ]
        },
        "bothBordersFullyVisible": {
          "type": [
            "Optional",
            [
              "Enum",
              "true",
              "false"
            ]
          ]
        },
        "rightBorderOccluded": {
          "type": [
            "Optional",
            [
              "Enum",
              "true",
              "false"
            ]
          ]
        },
        "lefBorderOccluded": {
          "type": [
            "Optional",
            [
              "Enum",
              "true",
              "false"
            ]
          ]
        },
        "bothBordersOccluded": {
          "type": [
            "Optional",
            [
              "Enum",
              "true",
              "false"
            ]
          ]
        },
        "wheelsUnclear": {
          "type": [
            "Optional",
            [
              "Enum",
              "false",
              "true"
            ]
          ]
        },
        "turnLightLeft": {
          "type": [
            "Optional",
            [
              "Enum",
              "false",
              "true"
            ]
          ]
        },
        "turnLightRight": {
          "type": [
            "Optional",
            [
              "Enum",
              "false",
              "true"
            ]
          ]
        },
        "breakLight": {
          "type": [
            "Optional",
            [
              "Enum",
              "false",
              "true"
            ]
          ]
        },
        "emergencyLights": {
          "type": [
            "Optional",
            [
              "Enum",
              "false",
              "true"
            ]
          ]
        },
        "indicatorOcclusion": {
          "type": [
            "Optional",
            [
              "Enum",
              "none",
              "left",
              "right",
              "full"
            ]
          ],
          "annotations": [
            [
              "description",
              "Occlusion of an indicator. Set by labeler."
            ]
          ]
        }
      }
    },
    "Pedestrian": {
      "extends": [ "FrameMarking", "FreeROI", "Box3D", "HumanOcclusion", "ClusterElement" ],
      "annotations": [
        [ "metaDataRef", "pdmd" ],
        [ "SignedWith", "sms" ],
        [ "FileInfoCategory", "Pedestrian" ],
        [ "description", "A pedestrian defined as a quadrangle on image, and/or a 3D Box in world coordinates" ],
        [ "ViewGroup", "PedestrianMarking" ]
      ],
      "fieldOrder": [
        "frameNumber",
        "streamName",
        "refId",
        "objectType",
        "height",
        "direction",
        "movement",
        "occlusion",
        "headOccluded",
        "feetOccluded",
        "overlapped",
        "unsharp",
        "strangePose",
        "crossing",
        "accessory"
      ],
      "fields": {
        "movement": {
          "type": [
            "Enum",
            "still",
            "walking",
            "running",
            "other"
          ],
          "annotations": [ "required" ]
        },
        "occlusion": {
          "type": [
            "Enum",
            "none",
            "partial",
            "full",
            "legsOccluded",
            "other"
          ],
          "annotations": [ "required" ]
        },
        "overlapped": {
          "type": "Bool",
          "annotations": [
            [ "required" ],
            [ "description", "Is the ped overlapped by another ped object." ]
          ]
        },
        "unsharp": {
          "type": "Bool",
          "annotations": [
            [ "required" ],
            [ "description", "Is the image unsharp." ]
          ]
        },
        "strangePose": {
          "type": "Bool",
          "annotations": [ "required" ]
        },
        "direction": {
          "type": [
            "Enum",
            "NN",
            "NE",
            "EE",
            "SE",
            "SS",
            "SW",
            "WW",
            "NW",
            "Undefined"
          ],
          "annotations": [
            [ "required" ],
            [ "description", "Direction of ped." ]
          ]
        },
        "objectType": {
          "type": [
            "Enum",
            "pedestrian",
            "nondescript",
            "FP",
            "dummy",
            "dummyPedestrian"
          ],
          "annotations": [ "required" ]
        },
        "height": {
          "type": [
            "Optional",
            [
              "Enum",
              "child",
              "adult"
            ]
          ],
          "annotations": [ "required" ]
        },
        "crossing": {
          "type": [ "Optional", "Bool" ]
        },
        "accessory": {
          "type": [ "Optional", "Bool" ],
          "annotations": [
            [ "description", "Set when ego vehicle is on a bridge. Parsed from CAN, signal: ADAS_CuA_Bridge" ]
          ]
        },
        "faceVisible": {
          "type": [
            "Optional",
            [
              "Enum",
              "false",
              "true"
            ]
          ]
        },
        "leftBorderVisibility": {
          "type": [
            "Optional",
            [
              "Enum",
              "false",
              "true"
            ]
          ]
        },
        "rightBorderVisibility": {
          "type": [
            "Optional",
            [
              "Enum",
              "false",
              "true"
            ]
          ]
        }
      }
    },
    "TwoWheeler": {
      "extends": [ "FrameMarking", "FreeROI", "Box3D", "WheeledObject", "HumanOcclusion", "ClusterElement" ],
      "annotations": [
        [ "metaDataRef", "pdmd" ],
        [ "SignedWith", "sms" ],
        [ "FileInfoCategory", "TwoWheeler" ],
        [ "description", "A two-wheeler defined as a quadrangle on image, and/or a 3D Box in world coordinates" ],
        [ "ViewGroup", "TwoWheelerMarking" ]
      ],
      "fieldOrder": [
        "frameNumber",
        "streamName",
        "refId",
        "objectType",
        "pose",
        "lighting",
        "occlusion",
        "headOccluded",
        "feetOccluded",
        "strangePose",
        "laneAssignment",
        "brakeLight",
        "turnIndicator",
        "warningIndicator",
        "direction"
      ],
      "fields": {
        "objectType": {
          "type": [
            "Enum",
            "cyclist",
            "mopedist",
            "motorcyclist",
            "twoWheeler",
            "nondescript",
            "otherTwoWheeler",
            "FP",
            "dummy",
            "dummyCyclist",
            "powerTwoWheeler",
            "bicycle"
          ],
          "annotations": [ "required" ]
        },
        "strangePose": {
          "type": "Bool",
          "annotations": [ "required" ]
        },
        "leftBorderVisibility": {
          "type": [
            "Optional",
            [
              "Enum",
              "false",
              "true"
            ]
          ]
        },
        "rightBorderVisibility": {
          "type": [
            "Optional",
            [
              "Enum",
              "false",
              "true"
            ]
          ]
        },
        "laneChange": {
          "type": [
            "Optional",
            [
              "Enum",
              "false",
              "true"
            ]
          ]
        },
        "movement": {
          "type": [
            "Optional",
            [
              "Enum",
              "stationary",
              "moving",
              "parked"
            ]
          ]
        }
      }
    },
    "Debris": {
      "extends": [ "Points", "FrameMarking", "ClusterElement" ],
      "annotations": [
        [ "SignedWith", "sms" ],
        [ "FileInfoCategory", "Debris" ]
      ],
      "fields": {
        "objectType": {
          "type": [
            "Enum",
            "road",
            "debris",
            "other"
          ]
        },
        "roadCover": {
          "type": [
            "Enum",
            "notSet",
            "asphalt/concrete",
            "gravel/dirt/soil",
            "cobblestoned/Tiled",
            "grassy",
            "unknown",
            "N/A",
            "other"
          ]
        },
        "debrisType": {
          "type": [
            "Array",
            [
              "Enum",
              "tire",
              "pallet",
              "box",
              "carPart",
              "toy",
              "crate",
              "bicycle",
              "bag",
              "treeBranch",
              "deadAnimal",
              "other"
            ]
          ]
        },
        "debrisHeight": {
          "type": "Float",
          "annotations": [ "description", "Debris height in meters." ]
        },
        "debrisWidth": {
          "type": "Float",
          "annotations": [ "description", "Debris width in meters." ]
        },
        "debrisLength": {
          "type": "Float",
          "annotations": [ "description", "Debris length in meters." ]
        },
        "debrisDirection": {
          "type": [
            "Enum",
            "southWest",
            "south",
            "southEast",
            "east",
            "N/A"
          ],
          "annotations": [ "description", "Where the shortest side of the object closest to the ego vehicle is located." ]
        }
      }
    },
    "AnimalBody": {
      "extends": [ "FrameMarking", "FreeROI", "ClusterElement" ],
      "annotations": [
        [ "FileInfoCategory", "AnimalBody", "ClusterElement" ],
        [ "SignedWith", "sms" ],
        [ "description", "A rectangular bounding box for the body of an animal." ],
        [ "ViewGroup", "AnimalMarking" ]
      ],
      "fields": {
        "refLinePoint1X": {
          "type": [ "Optional", "Float" ],
          "annotations": [ "description", "RefLine is a segment from refLinePoint1 to RefLinePoint2 that represents the bottom position of the feet/legs" ]
        },
        "refLinePoint1Y": { "type": [ "Optional", "Float" ] },
        "refLinePoint2X": { "type": [ "Optional", "Float" ] },
        "refLinePoint2Y": { "type": [ "Optional", "Float" ] },
        "movement": {
          "type": [
            "Enum",
            "notSet",
            "still",
            "running",
            "walking",
            "other"
          ],
          "annotations": [ "description", "Describes if the object is moving." ]
        },
        "direction": {
          "type": [
            "Enum",
            "NN",
            "NE",
            "EE",
            "SE",
            "SS",
            "SW",
            "WW",
            "NW",
            "NA"
          ],
          "annotations": [ "description", "The facing direction of the animal relative to the ego vehicle." ]
        },
        "bodyOcclusion": {
          "type": [
            "Enum",
            "notSet",
            "rear",
            "lower",
            "fully",
            "partial",
            "other",
            "none"
          ],
          "annotations": [ "description", "The degree of body occlusion. The term 'body area' is referring to the area of the body that is inside the body box." ]
        },
        "legsOcclusion": {
          "type": [
            "Enum",
            "notSet",
            "true",
            "false"
          ],
          "annotations": [ "description", "Is set to true if at least one leg pair is more than 1/2 occluded." ]
        },
        "unsharp": {
          "type": [
            "Enum",
            "notSet",
            "true",
            "false"
          ],
          "annotations": [ "description", "The object is unsharp by any reason." ]
        },
        "position": {
          "type": [
            "Enum",
            "notSet",
            "standing",
            "lying",
            "other"
          ],
          "annotations": [ "description", "How the animal is positioned." ]
        },
        "animalType": {
          "type": [
            "Enum",
            "notSet",
            "deer",
            "moose",
            "horse",
            "cow",
            "wildBoar",
            "camelids",
            "kangaroo",
            "sheep",
            "other"
          ],
          "annotations": [ "description", "The type of the animal." ]
        },
        "location": {
          "type": [
            "Enum",
            "notSet",
            "onRoad",
            "sideWalk",
            "offRoad",
            "other"
          ],
          "annotations": [ "description", "Placement of the object relative to the road." ]
        }
      }
    },
    "AnimalHead": {
      "extends": [ "FrameMarking", "FreeROI", "ClusterElement" ],
      "annotations": [
        [ "FileInfoCategory", "AnimalHead" ],
        [ "SignedWith", "sms" ],
        [ "description", "A rectangular bounding box for the head of an animal." ],
        [ "ViewGroup", "AnimalMarking" ]
      ],
      "fields": {
        "headOcclusion": {
          "type": [
            "Enum",
            "notSet",
            "true",
            "false"
          ],
          "annotations": [ "description", "The occlusion of the head." ]
        }
      }
    },
    "GeneralObjects": {
      "extends": [ "FrameMarking", "FreeROI" ],
      "annotations": [
        [ "FileInfoCategory", "GeneralObjects" ],
        [ "SignedWith", "sms" ],
        [ "description", "A general box, that means several types of objects." ]
      ],
      "fields": {
        "movement": {
          "type": [
            "Enum",
            "still",
            "moving",
            "other"
          ],
          "annotations": [
            [
              "required"
            ],
            [
              "description",
              "Describes how the object is moving."
            ]
          ]
        },
        "direction": {
          "type": [
            "Enum",
            "notSet",
            "NN",
            "NE",
            "EE",
            "SE",
            "SS",
            "SW",
            "WW",
            "NW",
            "NA"
          ],
          "annotations": [
            [
              "required"
            ],
            [
              "description",
              "Direction of object."
            ]
          ]
        },
        "occlusion": {
          "type": [
            "Enum",
            "notSet",
            "none",
            "light",
            "heavy"
          ],
          "annotations": [
            [ "required" ],
            [ "description", "Degree of occlusion." ]
          ]
        },
        "unsharp": {
          "type": "Bool",
          "annotations": [
            [
              "required"
            ],
            [
              "description",
              "Is the image unsharp."
            ]
          ]
        },
        "objectType": {
          "type": [
            "Enum",
            "notSet",
            "twoWheeler",
            "pedestrian",
            "babyStroller",
            "shoppingCart",
            "wheelchair",
            "cart",
            "other"
          ],
          "annotations": [
            [
              "required"
            ],
            [
              "description",
              "Type of marked object."
            ]
          ]
        },
        "location": {
          "type": [
            "Enum",
            "notSet",
            "onRoad",
            "sideWalk",
            "offRoad"
          ],
          "annotations": [
            [
              "required"
            ],
            [
              "description",
              "Describes the location of the object."
            ]
          ]
        }
      }
    },
    "Unclassified3DMarking": {
      "extends": [ "FrameMarking", "Box3D", "FreeROI", "ClusterElement" ],
      "annotations": [
        [ "FileInfoCategory", "unclassified3DMarking" ],
        [ "description", "Contains unclassified 3D objects." ]
      ],
      "fields": {
        "objectType": {
          "type": [
            "Enum",
            "unclassified",
            "unknowSmall",
            "unknowBig"
          ],
          "annotations": [ "required" ]
        }
      }
    },
    "LightSourceGroupPart": {
      "annotations": [
        [ "abstract" ],
        [ "description", "An abstract class usef for entities that are part of a lights source group." ]
      ],
      "fields": {
        "groupId": {
          "type": [
            "Optional",
            "Int"
          ],
          "annotations": [
            [
              "optional"
            ],
            [
              "description",
              "GroupId this light source belongs to"
            ]
          ]
        }
      }
    },
    "LightSourcePoint": {
      "extends": [ "FrameMarking", "Point", "LightSourceGroupPart" ],
      "annotations": [
        [ "FileInfoCategory", "LightSourcePoint" ],
        [ "SignedWith", "sms" ],
        [ "description", "An entity that describes a light source point." ],
        [ "metaDataRef", "lsrmd" ],
        [ "ViewGroup", "LSRBase" ]
      ],
      "fields": {
        "lightSourceType": {
          "type": [
            "Optional",
            [
              "Enum",
              "streetlamp",
              "netlamp",
              "constructionPost",
              "redReflector",
              "reflector",
              "trafficLight",
              "ledSign",
              "directionSign",
              "trafficSign",
              "chevron",
              "reflexOnRoad",
              "otherIrrelevantLight",
              "headLight",
              "tailLight",
              "ledTailLight",
              "ledHeadLight",
              "auxVehicleLight",
              "runningLight",
              "blinker",
              "reflexOnVehicle",
              "brakeLight",
              "otherLighting",
              "undefined",
              "reflectorOnVehicle",
              "headlightHalogen",
              "overtaking",
              "positionLight",
              "oncomingTruckPositionLight",
              "mayDetect"
            ]
          ],
          "annotations": [
            [
              "required"
            ],
            [
              "description",
              "Defines which type of light source is observed"
            ]
          ]
        },
        "FPType": {
          "type": [
            "Optional",
            [
              "Enum",
              "LSR_FP_on_Gas_Station",
              "LSR_FP_on_Toll_station",
              "LSR_FP_on_traffic_sign",
              "LSR_FP_on_construction_site_beacon",
              "LSR_FP_on_billboard",
              "LSR_FP_on_reflectors",
              "LSR_FP_on_house_or_garden_light",
              "LSR_FP_on_red_reflectors",
              "LSR_FP_on_rail_reflectors",
              "LSR_FP_on_netlamp_(except_LED)",
              "LSR_FP_on_LED_netlamp",
              "LSR_FP_on_traffic_light",
              "LSR_FP_on_illuminated_city_in_background",
              "LSR_FP_Labeling_Error",
              "LSR_multiple_FP",
              "LSR_error_memory_FP",
              "LSR_Unknown_FP"
            ]
          ],
          "annotations": [
            [
              "optional"
            ],
            [
              "description",
              "Defines which type of false positive is observed"
            ]
          ]
        },
        "top": {
          "type": [
            "Optional",
            "Int"
          ],
          "annotations": [
            [
              "optional"
            ],
            [
              "description",
              "Top coordinate of complete light source area."
            ]
          ]
        },
        "bottom": {
          "type": [
            "Optional",
            "Int"
          ],
          "annotations": [
            [
              "optional"
            ],
            [
              "description",
              "Bottom coordinate of complete light source area."
            ]
          ]
        },
        "left": {
          "type": [
            "Optional",
            "Int"
          ],
          "annotations": [
            [
              "optional"
            ],
            [
              "description",
              "Left coordinate of complete light source area."
            ]
          ]
        },
        "right": {
          "type": [
            "Optional",
            "Int"
          ],
          "annotations": [
            [
              "optional"
            ],
            [
              "description",
              "Right coordinate of complete light source area."
            ]
          ]
        },
        "distance": {
          "type": [
            "Optional",
            "Int"
          ],
          "annotations": [
            [
              "optional"
            ],
            [
              "description",
              "Distance between ego vehicle and other vehicle on the road."
            ]
          ]
        },
        "labelingStarted": {
          "type": [
            "Enum",
            "thisVideo",
            "previousVideo"
          ],
          "annotations": [
            [
              "description",
              "In which sequence the labeling was started."
            ]
          ]
        },
        "IDinPreviousVideo": {
          "type": [
            "Optional",
            "String"
          ],
          "annotations": [
            [
              "description",
              "free string, default is LSR.X (expected is the identifier of the object in the previous video."
            ]
          ]
        },
        "avgLightSourceBrightness": {
          "type": [
            "Optional",
            "Int"
          ],
          "annotations": [
            [
              "description",
              "Set by Blob extract generator."
            ]
          ]
        },
        "footprintSet": {
          "type": [
            "Optional",
            [
              "Enum",
              "nextVideo",
              "notPossible",
              "previousVideo",
              "thisVideo"
            ]
          ],
          "annotations": [
            [
              "description",
              "Defines in which video file the footprint is set. Set by labeler."
            ]
          ]
        },
        "lightSourceBrightness": {
          "type": [
            "Optional",
            "Int"
          ],
          "annotations": [
            [
              "description",
              "Set by Blob extract generator."
            ]
          ]
        },
        "oneEyedVehicle": {
          "type": [
            "Optional",
            [
              "Enum",
              "mayDetect",
              "mustDetect"
            ]
          ],
          "annotations": [
            [
              "description",
              "Set for one-eyed vehicles if they may or must be detected. Set by labeler."
            ]
          ]
        },
        "groupType": {
          "type": [
            "Optional",
            [
              "Enum",
              "vehicle",
              "reflectorLine",
              "streetlampLine",
              "netlampsOnHorizon",
              "gasStation",
              "tollStation",
              "netlampCluster",
              "trafficSign"
            ]
          ],
          "annotations": [
            [
              "optional"
            ],
            [
              "description",
              "Identifies the group type of a light source group."
            ]
          ]
        },
        "distanceType": {
          "type": [
            "Optional",
            [
              "Enum",
              "mayDetect",
              "mustDetect"
            ]
          ],
          "annotations": [
            [
              "description",
              "A rough estimation of the distance of each group of type vehicle."
            ]
          ]
        },
        "vehicleType": {
          "type": [
            "Optional",
            [
              "Enum",
              "car",
              "bus",
              "truck",
              "transporter",
              "motorcycle",
              "bicycle",
              "none"
            ]
          ],
          "annotations": [
            [
              "description",
              "Type of vehicle defined by a group of light sources."
            ]
          ]
        },
        "lightSourcePosition": {
          "type": [
            "Optional",
            [
              "Enum",
              "leftOnVehicle",
              "rightOnVehicle",
              "centralOnVehicle",
              "NA"
            ]
          ],
          "annotations": [
            [
              "description",
              "Defines the position of vehicle light sources on the vehicle"
            ]
          ]
        },
        "drivingDirection": {
          "type": [
            "Optional",
            [
              "Enum",
              "oncoming",
              "preceding",
              "overtaking",
              "parking",
              "crossing"
            ]
          ],
          "annotations": [
            [
              "description",
              "Defines the position of vehicle light sources on the vehicle"
            ]
          ]
        }
      }
    },
    "LightSourceBox": {
      "extends": [ "FrameMarking", "FreeROI", "LightSourceGroupPart" ],
      "annotations": [
        [
          "FileInfoCategory",
          "LightSourceBox"
        ],
        [
          "SignedWith",
          "sms"
        ],
        [
          "description",
          "A box that marks the contour of a light source"
        ],
        [
          "ViewGroup",
          "LSRBase"
        ]
      ],
      "fields": {
        "lsmfRefId": {
          "type": [
            "Optional",
            "Int"
          ],
          "annotations": [
            [
              "optional"
            ],
            [
              "description",
              "Indicates the thre refId of the light source marking it surrounds."
            ]
          ]
        }
      }
    },
    "LightSourceFootprintLine": {
      "extends": [ "FrameMarking", "Segment", "LightSourceGroupPart" ],
      "annotations": [
        [
          "FileInfoCategory",
          "LightSourceFootprintLine"
        ],
        [
          "SignedWith",
          "sms"
        ],
        [
          "ViewGroup",
          "LSRBase"
        ],
        [
          "description",
          "A line that represents the vehicle's footprint"
        ]
      ]
    },
    "FogDetection": {
      "extends": [ "FrameMarking", "Segment" ],
      "annotations": [
        [
          "FileInfoCategory",
          "fogDetection"
        ],
        [
          "SignedWith",
          "sms"
        ],
        [
          "description",
          "A line that represents the presence of fog."
        ]
      ]
    },
    "FogDetectionEvent": {
      "extends": [ "IntervalMarking" ],
      "fieldOrder": [
        "streamName",
        "startFrame",
        "endFrame",
        "eventType"
      ],
      "annotations": [
        [
          "FileInfoCategory",
          "FogDetectionEvent"
        ],
        [
          "SignedWith",
          "sms"
        ]
      ],
      "fields": {
        "eventType": {
          "type": [
            "Enum",
            "fog",
            "fogRain",
            "fogSnow",
            "clear",
            "clouded",
            "mist",
            "overcast",
            "rain",
            "snow",
            "ignoreWeather"
          ],
          "annotations": [
            [
              "description",
              "This attribute describes the type of weather or precipitations that is present on each frame."
            ]
          ]
        },
        "visibilityLine": {
          "type": "Bool",
          "annotations": [
            [
              "description",
              "This attribute is only applicable if weather is of category fog and there is a clear border between the street and fog is noticeable."
            ]
          ]
        },
        "blockedView": {
          "type": "Bool",
          "annotations": [
            [
              "description",
              "This attribute is only applicable if weather is of category fog and the visibility distance can't be specified because the view is blocked through other vehicles."
            ]
          ]
        },
        "wipers": {
          "type": "Bool",
          "annotations": [
            [
              "description",
              "This attribute describes whether the windscreen wipers are blocking the view of the camera and are visible on the image frame."
            ]
          ]
        },
        "selfGlaring": {
          "type": "Bool",
          "annotations": [
            [
              "description",
              "Self-glaring is the effect of glaring the driver through the vehicle's high-beam that is reflected by the fog. This effect mainly occurs at night-time, nevertheless for daytime labelling it should be set to false."
            ]
          ]
        }
      }
    },
    "NondescriptPolygon": {
      "extends": [ "FrameMarking", "Points" ],
      "annotations": [
        [ "description", "Region that should be ignored by Object Detection functions. A closed Polygon" ],
        [ "SignedWith", "sms" ],
        [ "FileInfoCategory", "NondescriptPolygon" ]
      ]
    },
    "NondescriptPolygonOD": {
      "extends": [ "NondescriptPolygon" ]
    },
    "LaneSupportMarkings": {
      "extends": [ "IntervalMarking" ],
      "annotations": [
        [
          "FileInfoCategory",
          "LaneSupportMarkings"
        ],
        [
          "SignedWith",
          "sms"
        ]
      ],
      "fields": {
        "eventType": {
          "type": [
            "Enum",
            "LDW",
            "LKA"
          ],
          "annotations": [
            [
              "description",
              "Indicates the type of the issue"
            ]
          ]
        },
        "side": {
          "type": [
            "Optional",
            [
              "Enum",
              "Right",
              "Left"
            ]
          ],
          "annotations": [
            [
              "description",
              "Indicates the side of the lane where the issue was found"
            ]
          ]
        },
        "category": {
          "type": [
            "Optional",
            [
              "Enum",
              "truePositive",
              "falsePositive"
            ]
          ],
          "annotations": [
            [
              "description",
              "Category of the issue"
            ]
          ]
        }
      }
    },
    "FogNightDetectionEvent": {
      "extends": [ "IntervalMarking" ],
      "fieldOrder": [
        "streamName",
        "startFrame",
        "endFrame",
        "eventType"
      ],
      "annotations": [
        [
          "FileInfoCategory",
          "FogNightDetectionEvent"
        ],
        [
          "SignedWith",
          "sms"
        ]
      ],
      "fields": {
        "eventType": {
          "type": [
            "Enum",
            "noFog",
            "denseFog",
            "foggyWeather"

          ],
          "annotations": [
            [
              "description",
              "This attribute describes the type of fog that is present on each frame."
            ]
          ]
        },
        "weather": {
          "type": [
            "Enum",
            "noPrecipitation",
            "rain",
            "snow",
            "hail"

          ],
          "annotations": [
            [
              "description",
              "This attribute describes the type of weather that is present on each frame."
            ]
          ]
        },
        "externalLights": {
          "type": "Bool",
          "annotations": [
            [
              "description",
              "This attribute is only applicable if external lights are visible in the scene."
            ]
          ]
        },
        "wipers": {
          "type": "Bool",
          "annotations": [
            [
              "description",
              "This attribute describes whether the windscreen wipers are blocking the view of the camera and are visible on the image frame."
            ]
          ]
        },
        "selfGlaring": {
          "type": "Bool",
          "annotations": [
            [
              "description",
              "Self-glaring is the effect of glaring the driver through the vehicle's high-beam that is reflected by the fog. This effect mainly occurs at night-time, nevertheless for daytime labelling it should be set to false."
            ]
          ]
        },
        "blockedView": {
          "type": "Bool",
          "annotations": [
            [
              "description",
              "This attribute is only applicable if weather is of category fog and the visibility distance can't be specified because the view is blocked through other vehicles."
            ]
          ]
        }
      }
    }
  }
}
